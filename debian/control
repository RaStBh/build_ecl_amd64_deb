Source: ecl
Section: lisp
Priority: optional
Maintainer: Ralf Stephan <me@ralf-stephan.name>
Build-Depends:
 dh-autoreconf,
 dh-strip-nondeterminism,
 emacs-bin-common,
 exuberant-ctags,
 gawk,
 install-info,
 javahelper,
 libatomic-ops-dev,
 libfakeroot,
 libffi-dev,
 libgc-dev,
 libgmp-dev,
 liblocale-gettext-perl,
 libmagic-mgc,
 libperl5.30,
 libtext-unidecode-perl,
 mime-support,
 perl-modules-5.30,
 texinfo,
 tzdata
Standards-Version: 4.4.1
Homepage: https://common-lisp.net/project/ecl/
Vcs-Browser: https://gitlab.com/embeddable-common-lisp/ecl/
Vcs-Git: https://gitlab.com/embeddable-common-lisp/ecl/.git

Package: ecl
Architecture: any
Depends:
 ${shlibs:Depends},
 ${misc:Depends},
 libffi-dev,
 libgmp-dev,
 libncurses5-dev,
 libgc-dev,
 libatomic-ops-dev,
 gcc
Description: Embeddable Common-Lisp: has an interpreter and can compile to C
 ECL stands for Embeddable Common-Lisp. The ECL project is an
 effort to modernize Giuseppe Attardi's ECL environment to
 produce an implementation of the Common-Lisp language
 which complies to the ANSI X3J13 definition of the language.
 .
 The current ECL implementation features:
  * A bytecodes compiler and interpreter.
  * A translator to C.
  * A UFFI-compatible interface to C code.
  * A dynamic loader.
  * The possibility to build standalone executables and DLLs.
  * The Common-Lisp Object System (CLOS).
  * Conditions and restarts for handling errors.
  * Sockets as ordinary streams.
  * The GNU Multiprecision library for fast bignum operations.
  * A simple conservative mark & sweep garbage collector.
  * The Boehm-Weiser garbage collector.
