
/home/vagrant/build_ecl/ecl-21.2.1/src/c/structure.d,421
structure_subtypep(22,520
si_structure_subtype_p(37,868
  int i;45,1102
  x 47,1115
  x->instance.slotds slotds52,1363
  for (i = 0;  i < narg;56,1538
#define ecl_copy_structure 61,1636
cl_copy_structure(64,1691
si_structure_name(88,2140
si_structure_ref(96,2329
ecl_structure_ref(105,2634
si_structure_set(115,2919
ecl_structure_set(125,3252
mp_compare_and_swap_structure(136,3577
si_structurep(146,3977

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reference.d,227
cl_symbol_function(24,678
cl_fdefinition(41,1088
cl_fboundp(47,1223
ecl_fdefinition(71,1846
si_coerce_to_function(112,3052
cl_symbol_value(124,3347
ecl_boundp(143,3754
cl_boundp(155,4001
cl_special_operator_p(162,4155

/home/vagrant/build_ecl/ecl-21.2.1/src/c/apply.d,37
APPLY(21,439
APPLY_fixed(346,20649

/home/vagrant/build_ecl/ecl-21.2.1/src/c/string.d,2015
typedef ecl_character (*ecl_casefun)ecl_casefun20,453
do_make_base_string(23,532
do_make_string(34,763
#define do_make_string 43,957
  cl_object x;49,1140
  s 51,1159
ecl_alloc_adjustable_base_string(78,2194
ecl_alloc_adjustable_extended_string(93,2708
ecl_make_constant_base_string(112,3358
ecl_make_simple_base_string(125,3758
ecl_cstring_to_base_string_or_nil(136,3961
ecl_fits_in_base_string(145,4110
si_copy_to_simple_base_string(166,4512
cl_string(208,5516
si_coerce_to_base_string(252,6341
si_coerce_to_extended_string(261,6486
cl_char(297,7300
ecl_char(304,7460
si_char_set(324,7984
ecl_char_set(333,8203
compare_strings(354,8796
compare_base(388,9541
  cl_index s1, e1, s2, e2;422,10329
  @423,10356
ecl_string_eq(478,11825
  cl_index_pair p;523,13021
  int output;524,13040
  string1 526,13058
  string2 527,13090
  p 528,13122
  s1 529,13185
  s1 = p.start; e1 529,13185
  p 530,13213
  s2 531,13276
  s2 = p.start; e2 531,13276
    output 540,13540
string_compare(547,13778
#define start1 556,14050
#define end1 557,14077
#define start2 558,14102
#define end2 559,14129
#define start1p 560,14154
#define start2p 561,14182
#undef start1p597,15353
#undef start2p598,15368
#undef start1599,15383
#undef end1600,15397
#undef start2601,15409
#undef end2602,15423
ecl_member_char(656,16389
string_trim0(696,17444
cl_string_trim(722,18005
cl_string_left_trim(728,18124
cl_string_right_trim(734,18249
string_case(740,18382
#define kstart 747,18566
#define kend 748,18593
#define kstartp 749,18618
#undef kstartp772,19318
#undef kstart773,19333
#undef kend774,19347
char_upcase(778,19383
char_downcase(789,19590
char_capitalize(800,19807
nstring_case(823,20246
#define kstart 830,20431
#define kend 831,20458
#define kstartp 832,20483
#undef kstartp855,21218
#undef kstart856,21233
#undef kend857,21247
  int i;877,21691
  cl_object output;878,21700
  for (i = 0, l = 0; i < narg;881,21787
    cl_object s 882,21825
  output 889,22050

/home/vagrant/build_ecl/ecl-21.2.1/src/c/backq.d,256
#define QUOTE 20,491
#define EVAL 21,509
#define LIST 22,527
#define LISTX 23,545
#define APPEND 24,563
#define NCONC 25,581
kwote(31,696
_cl_backq_cdr(51,1273
_cl_backq_car(186,4017
backq(238,4856
quasiquote_macro(251,5084
init_backq(260,5263

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixfsys.d,1496
# define access 24,515
# define F_OK 25,539
typedef int mode_t;26,555
# undef ERROR47,929
safe_chdir(53,1000
safe_stat(69,1410
safe_lstat(80,1602
drive_host_prefix(92,1824
#define drive_host_prefix(113,2496
ecl_cstring_to_pathname(120,2618
current_dir(131,2898
file_kind(169,3819
si_file_kind(209,4724
si_readlink(216,4985
enter_directory(242,5882
make_absolute_pathname(310,8575
make_base_pathname(318,8808
#define FOLLOW_SYMLINKS 326,9076
file_truename(329,9120
cl_truename(399,11674
ecl_backup_open(420,12507
ecl_file_len(449,13497
  int error;470,14032
  old_truename 478,14280
  old_filename 479,14316
  newn 482,14408
  new_filename 483,14462
    error 517,15595
    cl_object c_error 568,17229
    const char *msg msg569,17275
  new_truename 581,17683
directory_pathname_p(586,17780
cl_delete_file(593,17915
cl_probe_file(622,18747
cl_file_write_date(629,18950
cl_file_author(642,19268
ecl_homedir_pathname(673,20193
string_match(733,22015
#define PARSE_DIRECTORY_ENTRY 746,22348
list_directory(774,24053
#undef PARSE_DIRECTORY_ENTRY856,25862
dir_files(866,26264
dir_recursive(899,27355
  cl_object output;977,30332
  mask 979,30356
  mask 980,30396
  base_dir 981,30435
  output 982,30474
  output 990,30717
si_get_library_pathname(998,30917
  cl_object namestring;1053,32481
  directory 1056,32568
  namestring 1060,32756
si_mkdir(1082,33585
si_mkstemp(1131,35119
si_rmdir(1200,36897
si_copy_file(1208,37133
si_chmod(1235,37783

/home/vagrant/build_ecl/ecl-21.2.1/src/c/compiler.d,4743
#define REGISTER_SPECIALS 34,957
#define IGNORE_DECLARATIONS 35,991
#define FLAG_PUSH 39,1105
#define FLAG_VALUES 41,1185
#define FLAG_REG0 43,1263
#define FLAG_GLOBAL 45,1355
#define FLAG_IGNORE 47,1414
#define FLAG_USEFUL 48,1448
#define FLAG_EXECUTE 50,1519
#define FLAG_LOAD 51,1554
#define FLAG_COMPILE 52,1589
#define ENV_RECORD_LOCATION(54,1625
#define ECL_SPECIAL_VAR_REF 56,1668
#define ECL_UNDEFINED_VAR_REF 57,1703
typedef struct cl_compiler_env *cl_compiler_ptr;cl_compiler_ptr61,1793
#define asm_begin(63,1843
#define current_pc(64,1882
#define set_pc(65,1927
#define asm_ref(66,1966
static void FEill_formed_input(132,6011
pop_maybe_nil(146,6349
push(158,6601
asm_end(169,6853
#define asm_arg(201,8116
asm_op(204,8166
asm_clear(210,8280
asm_op2(215,8366
asm_constant(223,8582
asm_jmp(232,8809
asm_complete(241,8960
  void *symbol;symbol255,9451
  int (*compiler)compiler256,9467
  int lexical_increment;257,9514
} compiler_record;258,9539
static compiler_record database[database260,9559
assert_type_symbol(322,11326
FEill_formed_input(329,11465
c_search_constant(335,11594
c_register_constant(349,11868
asm_c(358,12023
asm_op2c(363,12120
#define new_location(414,14616
new_location(417,14686
c_register_block(425,14856
c_register_tags(435,15163
c_register_function(445,15471
c_macro_expand1(455,15826
c_register_symbol_macro(462,16010
c_register_macro(469,16239
c_register_var(476,16448
c_register_boundary(487,16847
guess_compiler_environment(495,17056
c_new_env(535,18580
c_restore_env(576,19854
c_tag_ref(589,20309
c_var_ref(633,21674
c_declared_special(675,22970
c_declare_specials(681,23144
c_process_declarations(693,23438
c_pbind(702,23631
c_bind(718,24029
c_undo_bindings(734,24424
compile_setq(771,25632
maybe_values_or_reg0(804,26604
maybe_values(822,27189
maybe_reg0(840,27773
c_block(863,28334
c_arguments(921,29980
c_call(932,30235
c_funcall(980,31813
perform_c_case(1012,32737
c_case(1063,34229
c_catch(1082,34767
c_compiler_let(1108,35346
c_cond(1143,36471
c_while_until(1212,38752
c_while(1235,39262
c_until(1240,39374
c_with_backend(1245,39486
eval_when_flags(1258,39796
#define when_load_p(1283,40461
#define when_compile_p(1284,40502
#define when_execute_p(1285,40549
c_eval_when(1288,40608
c_register_functions(1326,41639
c_labels_flet(1338,41889
#define push_back(1339,41956
#undef push1394,43774
c_flet(1399,43801
c_function(1412,44179
create_macro_lexenv(1420,44411
asm_function(1444,45303
c_go(1500,46947
c_if(1521,47448
c_labels(1534,47759
c_let_leta(1576,48789
c_let(1633,50400
c_leta(1638,50514
c_load_time_value(1643,50628
c_locally(1662,51319
c_macrolet(1685,51896
c_vbind(1698,52311
c_multiple_value_bind(1719,52748
c_multiple_value_call(1754,53808
c_multiple_value_prog1(1776,54315
c_multiple_value_setq(1788,54596
c_not(1845,56296
c_nth_value(1867,56843
c_prog1(1878,57166
c_progv(1907,57952
c_psetq(1948,58986
c_return_aux(1996,60313
c_return(2011,60795
c_return_from(2017,60914
c_setq(2024,61066
c_symbol_macrolet(2047,61685
c_tagbody(2080,62800
c_the(2132,64128
c_throw(2149,64573
c_unwind_protect(2162,64896
c_values(2190,65626
defer_load_object(2219,66462
maybe_make_load_forms(2234,66977
compile_constant(2257,67794
c_quote(2278,68390
compile_symbol(2286,68597
compile_form(2307,69142
eval_nontrivial_form(2400,71958
eval_form(2441,73354
execute_each_form(2451,73559
save_bytecodes(2466,73942
restore_bytecodes(2478,74268
add_load_form(2489,74522
compile_with_load_time_forms(2555,77404
compile_each_form(2578,78245
compile_toplevel_body(2592,78676
compile_body(2606,79029
c_cons(2622,79506
c_endp(2634,79807
c_car(2646,80067
c_cdr(2658,80324
c_list_listA(2670,80581
c_list(2687,81011
c_listA(2693,81127
si_need_to_make_load_form_p(2728,82237
  for (; !Null(body); body 2812,84455
si_process_lambda(2842,85304
si_process_lambda_list(2898,87267
#define push(2900,87338
#define assert_var_name(2901,87414
  enum {  AT_REQUIREDS,2911,87943
          AT_OPTIONALS,2912,87967
          AT_REST,2913,87991
          AT_KEYS,2914,88010
          AT_OTHER_KEYS,2915,88029
          AT_AUXS2916,88054
#undef push3101,92944
#undef assert_var_name3102,92956
c_default(3106,92994
ecl_make_lambda(3123,93460
ecl_function_block_name(3237,96902
si_function_block_name(3253,97268
si_valid_function_name_p(3262,97444
si_make_lambda(3269,97577
si_bc_compile_from_stream(3286,98058
  struct cl_compiler_env new_c_env;3324,99357
  cl_object interpreter_env, compiler_env;3325,99393
  } else 3343,100070
  old_c_env 3347,100140
  new_c_env.stepping stepping3355,100389
  } ECL_UNWIND_PROTECT_END;3369,100940
init_compiler(3374,101006

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_rand.d,654
#define MT_N 43,872
#define MT_M 44,889
#define MATRIX_A 45,906
#define UPPER_MASK 46,971
#define LOWER_MASK 47,1043
#define ulong 48,1116
init_genrand(51,1150
generate_int64(65,1462
generate_double(98,2370
generate_limb(104,2494
#define MT_N 125,2851
#define MT_M 126,2868
#define MATRIX_A 127,2885
#define UPPER_MASK 128,2941
#define LOWER_MASK 129,3005
#define ulong 130,3068
init_genrand(133,3102
generate_int32(147,3405
generate_double(178,4265
generate_limb(184,4375
init_random_state(206,4899
random_integer(228,5413
rando(243,5854
ecl_make_random_state(279,6830
cl_random_state_p(335,8256
si_random_state_array(341,8357

/home/vagrant/build_ecl/ecl-21.2.1/src/c/file.d,13480
#define ECL_DEFINE_AET_SIZE36,788
# define STDIN_FILENO 50,1092
# define STDOUT_FILENO 51,1116
# define STDERR_FILENO 52,1141
# define HAVE_SELECT53,1166
#define ENCODING_BUFFER_MAX_SIZE 62,1464
#define VECTOR_ENCODING_BUFFER_SIZE 64,1545
static void cannot_close(77,2009
not_input_read_byte8(109,3411
not_binary_read_byte8(116,3540
not_output_write_byte(123,3666
not_input_read_byte(129,3769
not_binary_write_byte(136,3869
not_binary_read_byte(142,3971
not_input_read_char(149,4081
not_output_write_char(156,4185
not_input_unread_char(163,4299
not_input_listen(169,4399
not_character_read_char(176,4500
not_character_write_char(183,4611
not_character_decoder(190,4739
not_character_encoder(196,4894
not_input_clear_input(202,5037
not_output_clear_output(209,5131
not_output_force_output(215,5218
not_output_finish_output(221,5305
unknown_column(227,5392
closed_stream_read_byte8(237,5555
closed_stream_write_byte8(244,5684
closed_stream_read_char(251,5819
closed_stream_write_char(258,5922
closed_stream_unread_char(265,6034
closed_stream_listen(271,6134
closed_stream_clear_input(278,6225
#define closed_stream_clear_output 283,6297
#define closed_stream_force_output 284,6358
#define closed_stream_finish_output 285,6419
closed_stream_length(288,6499
#define closed_stream_get_position 293,6566
closed_stream_set_position(296,6640
generic_read_byte_unsigned8(310,6967
generic_write_byte_unsigned8(320,7155
generic_read_byte_signed8(327,7326
generic_write_byte_signed8(336,7521
generic_read_byte_le(343,7704
generic_write_byte_le(365,8357
generic_read_byte(382,8837
generic_write_byte(406,9506
generic_peek_char(424,10001
generic_void(432,10155
generic_always_true(437,10200
generic_always_false(443,10264
generic_always_nil(449,10335
generic_column(455,10404
generic_set_position(461,10487
generic_close(467,10579
generic_write_vector(493,11455
generic_read_vector(520,12273
eformat_unread_char(551,13192
eformat_read_char(577,13854
write_char_increment_column(603,14578
eformat_write_char(614,14838
eformat_read_char_cr(625,15147
eformat_write_char_cr(636,15369
eformat_read_char_crlf(647,15623
eformat_write_char_crlf(668,16177
passthrough_decoder(686,16667
passthrough_encoder(694,16842
ascii_decoder(711,17166
ascii_encoder(723,17434
ucs_4be_decoder(737,17665
ucs_4be_encoder(748,17944
ucs_4le_decoder(762,18203
ucs_4le_encoder(773,18482
ucs_4_decoder(787,18738
ucs_4_encoder(808,19398
ucs_2be_decoder(824,19734
ucs_2be_encoder(849,20432
ucs_2le_decoder(868,20820
ucs_2le_encoder(893,21518
ucs_2_decoder(912,21911
ucs_2_encoder(933,22571
user_decoder(947,22896
user_encoder(975,23705
user_multistate_decoder(998,24228
user_multistate_encoder(1036,25283
utf_8_decoder(1077,26356
utf_8_encoder(1133,27844
clos_stream_read_byte8(1166,28718
clos_stream_write_byte8(1179,29005
clos_stream_read_byte(1192,29324
clos_stream_write_byte(1200,29488
clos_stream_read_char(1206,29620
clos_stream_write_char(1224,30112
clos_stream_unread_char(1231,30266
clos_stream_peek_char(1237,30409
clos_stream_read_vector(1245,30597
clos_stream_write_vector(1251,30827
clos_stream_listen(1260,31089
clos_stream_clear_input(1266,31202
clos_stream_clear_output(1272,31311
clos_stream_force_output(1279,31432
clos_stream_finish_output(1285,31543
clos_stream_input_p(1291,31655
clos_stream_output_p(1297,31769
clos_stream_interactive_p(1303,31885
clos_stream_element_type(1310,32018
#define clos_stream_length 1315,32124
clos_stream_get_position(1318,32187
clos_stream_set_position(1324,32311
clos_stream_column(1330,32449
clos_stream_close(1337,32617
const struct ecl_file_ops clos_stream_ops 1342,32702
str_out_write_char(1381,33531
str_out_element_type(1389,33714
str_out_get_position(1398,33903
str_out_set_position(1404,34045
const struct ecl_file_ops str_out_ops 1423,34472
si_make_string_output_stream_from_string(1458,35163
ecl_make_string_output_stream(1486,36025
cl_get_output_stream_string(1521,37047
str_in_read_char(1537,37535
str_in_unread_char(1551,37843
str_in_peek_char(1561,38072
str_in_listen(1572,38292
str_in_element_type(1581,38473
str_in_get_position(1590,38660
str_in_set_position(1596,38783
const struct ecl_file_ops str_in_ops 1611,39101
ecl_make_string_input_stream(1645,39766
  strng 1676,40668
  p 1677,40696
two_way_read_byte8(1686,40956
two_way_write_byte8(1694,41202
two_way_write_byte(1700,41346
two_way_read_byte(1706,41476
two_way_read_char(1712,41592
two_way_write_char(1718,41704
two_way_unread_char(1724,41830
two_way_peek_char(1730,41959
two_way_read_vector(1736,42066
two_way_write_vector(1743,42277
two_way_listen(1750,42486
two_way_clear_input(1756,42590
two_way_clear_output(1762,42690
two_way_force_output(1768,42793
two_way_finish_output(1774,42896
two_way_interactive_p(1780,43000
two_way_element_type(1786,43123
two_way_column(1792,43238
two_way_close(1798,43346
const struct ecl_file_ops two_way_ops 1807,43564
cl_make_two_way_stream(1842,44220
cl_two_way_stream_input_stream(1859,44729
cl_two_way_stream_output_stream(1868,45003
broadcast_write_byte8(1881,45384
broadcast_write_char(1892,45654
broadcast_write_byte(1902,45869
broadcast_clear_output(1911,46068
broadcast_force_output(1920,46255
broadcast_finish_output(1929,46442
broadcast_element_type(1938,46636
broadcast_length(1947,46826
broadcast_get_position(1956,47028
broadcast_set_position(1965,47238
broadcast_column(1974,47442
broadcast_close(1983,47614
const struct ecl_file_ops broadcast_ops 1991,47798
  int i;2026,48570
  streams 2028,48581
  for (i = 0; i < narg;2029,48602
    x 2030,48633
    streams 2033,48730
  x 2035,48766
  x->stream.format format2036,48788
  x->stream.ops ops2037,48822
  x->stream.mode mode2038,48882
cl_broadcast_stream_streams(2044,49007
echo_read_byte8(2057,49390
echo_write_byte8(2064,49597
echo_write_byte(2070,49735
echo_read_byte(2076,49849
echo_read_char(2084,50043
echo_write_char(2099,50390
echo_unread_char(2105,50510
echo_peek_char(2115,50745
echo_listen(2125,50921
echo_clear_input(2131,51019
echo_clear_output(2137,51113
echo_force_output(2143,51210
echo_finish_output(2149,51307
echo_element_type(2155,51411
echo_column(2161,51520
echo_close(2167,51622
const struct ecl_file_ops echo_ops 2176,51831
cl_make_echo_stream(2210,52434
cl_echo_stream_input_stream(2227,52946
cl_echo_stream_output_stream(2236,53206
concatenated_read_byte8(2249,53575
concatenated_read_byte(2263,53958
concatenated_read_char(2276,54260
concatenated_unread_char(2289,54549
concatenated_listen(2298,54758
concatenated_close(2314,55095
const struct ecl_file_ops concatenated_ops 2322,55285
  int i;2357,56064
  streams 2359,56075
  for (i = 0; i < narg;2360,56096
    x 2361,56127
    streams 2364,56222
  x 2366,56258
  x->stream.mode mode2372,56432
  x->stream.ops ops2373,56480
cl_concatenated_stream_streams(2379,56626
synonym_read_byte8(2392,57027
synonym_write_byte8(2398,57173
synonym_write_byte(2404,57317
synonym_read_byte(2410,57437
synonym_read_char(2416,57550
synonym_write_char(2422,57663
synonym_unread_char(2428,57789
synonym_peek_char(2434,57919
synonym_read_vector(2440,58027
synonym_write_vector(2447,58239
synonym_listen(2454,58448
synonym_clear_input(2460,58553
synonym_clear_output(2466,58654
synonym_force_output(2472,58757
synonym_finish_output(2478,58860
synonym_input_p(2484,58964
synonym_output_p(2490,59070
synonym_interactive_p(2496,59178
synonym_element_type(2502,59302
synonym_length(2508,59424
synonym_get_position(2514,59532
synonym_set_position(2520,59648
synonym_column(2526,59782
const struct ecl_file_ops synonym_ops 2531,59873
cl_make_synonym_stream(2565,60459
cl_synonym_stream_symbol(2578,60764
#define ecl_mode_t 2591,61150
#define ecl_mode_t 2593,61179
safe_open(2597,61224
safe_close(2608,61496
safe_fopen(2619,61710
safe_fdopen(2630,61972
safe_fclose(2641,62221
consume_byte_stack(2658,62657
io_file_read_byte8(2674,63034
output_file_write_byte8(2691,63477
io_file_write_byte8(2704,63796
io_file_listen(2716,64150
isaconsole(2744,64974
#define isatty 2750,65087
io_file_clear_input(2754,65133
#define io_file_clear_output 2771,65632
#define io_file_force_output 2772,65674
#define io_file_finish_output 2773,65716
io_file_interactive_p(2776,65779
io_file_element_type(2783,65895
io_file_length(2789,65987
io_file_get_position(2805,66451
io_file_set_position(2844,67342
io_file_close(2867,67945
static ecl_character io_file_decode_char_from_buffer(2882,68342
#define ECL_FILE_READ_BUFFER_CREATE(2934,70139
#define ECL_FILE_READ_BUFFER_GET_CHAR(2945,70692
#define ECL_FILE_READ_BUFFER_DESTROY 2948,70865
io_file_read_vector(2960,71472
io_file_write_vector(2994,72721
const struct ecl_file_ops io_file_ops 3066,75472
const struct ecl_file_ops output_file_ops 3099,76084
const struct ecl_file_ops input_file_ops 3132,76718
parse_external_format(3167,77364
set_stream_elt_type(3257,80060
si_stream_external_format_set(3416,85412
ecl_make_file_stream_from_fd(3451,86380
input_stream_read_byte8(3491,87592
output_stream_write_byte8(3517,88393
io_stream_write_byte8(3529,88699
io_stream_read_byte8(3550,89415
io_stream_listen(3563,89765
io_stream_clear_input(3571,89936
#define io_stream_clear_output 3590,90464
io_stream_force_output(3593,90521
#define io_stream_finish_output 3602,90736
io_stream_interactive_p(3605,90803
io_stream_length(3612,90927
io_stream_get_position(3628,91399
io_stream_set_position(3664,92245
io_stream_close(3688,92855
#define io_stream_read_vector 3715,93466
#define io_stream_write_vector 3716,93516
const struct ecl_file_ops io_stream_ops 3718,93569
const struct ecl_file_ops output_stream_ops 3751,94207
const struct ecl_file_ops input_stream_ops 3784,94850
#define winsock_stream_element_type 3823,95593
winsock_stream_read_byte8(3826,95667
winsock_stream_write_byte8(3850,96303
winsock_stream_listen(3877,96992
winsock_stream_clear_input(3907,97747
winsock_stream_close(3915,97909
const struct ecl_file_ops winsock_stream_io_ops 3928,98226
const struct ecl_file_ops winsock_stream_output_ops 3962,98885
const struct ecl_file_ops winsock_stream_input_ops 3996,99540
#define wcon_stream_element_type 4037,100378
wcon_stream_read_byte8(4040,100449
wcon_stream_write_byte8(4060,101023
wcon_stream_listen(4071,101299
wcon_stream_clear_input(4089,101768
wcon_stream_force_output(4095,101886
const struct ecl_file_ops wcon_stream_io_ops 4101,102019
#define CONTROL_Z 4135,102678
maybe_make_windows_console_FILE(4138,102717
maybe_make_windows_console_fd(4161,103347
si_windows_codepage_encoding(4191,104216
#define maybe_make_windows_console_FILE 4251,106981
#define maybe_make_windows_console_fd 4252,107047
si_set_buffering_mode(4256,107132
ecl_make_stream_from_FILE(4289,108194
ecl_make_stream_from_fd(4334,109680
ecl_stream_to_handle(4376,110825
si_file_stream_fd(4418,111855
seq_in_read_byte8(4448,112490
seq_in_unread_char(4464,112925
seq_in_listen(4472,113129
seq_in_get_position(4481,113304
seq_in_set_position(4487,113424
const struct ecl_file_ops seq_in_ops 4502,113730
make_sequence_input_stream(4536,114398
  p 4574,115813
  @(4576,115924
seq_out_get_position(4612,117034
seq_out_set_position(4618,117156
const struct ecl_file_ops seq_out_ops 4634,117504
make_sequence_output_stream(4668,118194
duplicate_dispatch_table(4708,119549
stream_dispatch_table(4716,119741
ecl_read_byte8(4729,120025
ecl_write_byte8(4735,120169
ecl_read_char(4741,120313
ecl_read_char_noeof(4747,120417
ecl_read_byte(4756,120562
ecl_write_byte(4762,120657
ecl_write_char(4768,120772
ecl_unread_char(4774,120889
ecl_listen_stream(4780,121001
ecl_clear_input(4786,121097
ecl_clear_output(4792,121189
ecl_force_output(4798,121283
ecl_finish_output(4804,121377
ecl_file_column(4810,121472
ecl_file_length(4816,121571
ecl_file_position(4822,121670
ecl_file_position_set(4828,121777
ecl_input_stream_p(4834,121903
ecl_output_stream_p(4840,122001
ecl_stream_element_type(4846,122106
ecl_interactive_stream_p(4852,122214
ecl_peek_char(4867,122728
writestr_stream(4877,122919
compute_char_size(4896,123508
cl_file_string_length(4917,124115
si_do_write_sequence(4966,125376
si_do_read_sequence(5019,127123
si_file_column(5081,129114
cl_file_length(5088,129261
cl_input_stream_p(5110,129719
cl_output_stream_p(5116,129826
cl_interactive_stream_p(5122,129935
cl_open_stream_p(5128,130071
cl_stream_element_type(5144,130555
cl_stream_external_format(5150,130652
cl_streamp(5172,131121
si_copy_stream(5187,131426
ecl_normalize_stream_element_type(5209,131941
FEinvalid_option(5248,133325
ecl_open_stream(5254,133455
  int flags 5371,137696
  cl_fixnum byte_size;5372,137713
  byte_size 5409,138707
  strm 5416,138891
file_listen(5431,139244
flisten(5518,142104
ecl_off_t_to_integer(5554,143348
ecl_integer_to_off_t(5583,144367
alloc_stream(5613,145232
not_a_file_stream(5639,145883
not_an_input_stream(5649,146189
not_an_output_stream(5660,146538
not_a_character_stream(5670,146879
not_a_binary_stream(5680,147207
cannot_close(5690,147527
file_libc_error(5696,147647
unread_error(5714,148257
unread_twice(5720,148369
maybe_clearerr(5726,148475
restartable_io_error(5736,148693
io_error(5754,149194
wrong_file_handler(5765,149500
encoding_error(5772,149653
decoding_error(5787,150124
wsock_error(5808,150758
init_file(5825,151201

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ecl_constants.h,1258
#define ECL_LEAST_POSITIVE_SINGLE_FLOAT 23,704
#define ECL_LEAST_NEGATIVE_SINGLE_FLOAT 24,771
#define ECL_LEAST_POSITIVE_NORMALIZED_SINGLE_FLOAT 25,842
#define ECL_LEAST_NEGATIVE_NORMALIZED_SINGLE_FLOAT 26,925
#define ECL_MOST_POSITIVE_SINGLE_FLOAT 27,1012
#define ECL_MOST_NEGATIVE_SINGLE_FLOAT 28,1078
#define ECL_LEAST_POSITIVE_SHORT_FLOAT 30,1149
#define ECL_LEAST_NEGATIVE_SHORT_FLOAT 31,1215
#define ECL_LEAST_POSITIVE_NORMALIZED_SHORT_FLOAT 32,1285
#define ECL_LEAST_NEGATIVE_NORMALIZED_SHORT_FLOAT 33,1367
#define ECL_MOST_POSITIVE_SHORT_FLOAT 34,1453
#define ECL_MOST_NEGATIVE_SHORT_FLOAT 35,1518
#define ECL_LEAST_POSITIVE_DOUBLE_FLOAT 44,1954
#define ECL_LEAST_NEGATIVE_DOUBLE_FLOAT 45,2021
#define ECL_LEAST_POSITIVE_NORMALIZED_DOUBLE_FLOAT 46,2092
#define ECL_LEAST_NEGATIVE_NORMALIZED_DOUBLE_FLOAT 47,2175
#define ECL_MOST_POSITIVE_DOUBLE_FLOAT 48,2262
#define ECL_MOST_NEGATIVE_DOUBLE_FLOAT 49,2328
#define ECL_LEAST_POSITIVE_LONG_FLOAT 57,2764
#define ECL_LEAST_NEGATIVE_LONG_FLOAT 58,2830
#define ECL_LEAST_POSITIVE_NORMALIZED_LONG_FLOAT 59,2900
#define ECL_LEAST_NEGATIVE_NORMALIZED_LONG_FLOAT 60,2982
#define ECL_MOST_POSITIVE_LONG_FLOAT 61,3068
#define ECL_MOST_NEGATIVE_LONG_FLOAT 62,3133
#define ECL_PI 65,3258

/home/vagrant/build_ecl/ecl-21.2.1/src/c/dpp.c,2138
#define DPP93,2532
#define POOLSIZE 99,2663
#define MAXREQ 100,2692
#define MAXOPT 101,2719
#define MAXKEY 102,2746
#define MAXAUX 103,2773
#define MAXRES 104,2800
#define TRUE 106,2828
#define FALSE 107,2854
typedef int bool;112,2992
FILE *in,in116,3025
FILE *in, *out;out116,3025
char filename[filename118,3042
int lineno;119,3065
int tab;120,3077
int tab_save;121,3086
char pool[pool123,3101
char *poolp;poolp124,3122
char *function;function126,3136
int   function_code;127,3152
char *function_symbol;function_symbol128,3173
char *function_c_name;function_c_name129,3196
char *required[required131,3220
int nreq;132,3244
int the_env_defined 134,3255
enum vararg_status_t 135,3280
	VARARG_NOT_DEFINED,136,3303
	VARARG_SIMPLE,137,3324
	VARARG_ECL}VARARG_ECL138,3340
enum vararg_status_t vararg_status 139,3354
struct optional 141,3412
  char *o_var;o_var142,3430
  char *o_init;o_init143,3445
  char *o_svar;o_svar144,3461
} optional[optional145,3477
int nopt;146,3497
bool rest_flag;148,3508
char *rest_var;rest_var149,3524
bool key_flag;151,3541
struct keyword 152,3556
  char *k_key;k_key153,3573
  char *k_var;k_var154,3588
  char *k_init;k_init155,3603
  char *k_svar;k_svar156,3619
} keyword[keyword157,3635
int nkey;158,3654
bool allow_other_keys_flag;159,3664
struct aux 161,3693
  char *a_var;a_var162,3706
  char *a_init;a_init163,3721
} aux[aux164,3737
int naux;165,3752
char *result[result167,3763
int nres;168,3785
put_lineno(171,3801
error(183,3985
error_symbol(195,4180
readc(202,4285
nextc(221,4526
unreadc(231,4608
put_tabs(241,4714
pushc(249,4791
pushstr(257,4897
search_keyword(264,4961
search_symbol(287,5408
read_symbol(332,6503
read_string(355,6880
search_function(370,7101
read_function(386,7415
translate_function(411,7782
read_token(423,8000
reset(479,9011
get_function(517,9741
check_nargs(530,10021
get_lambda_list(545,10563
get_return(692,13925
put_fhead(706,14086
put_declaration(718,14309
void unregister_varargs(856,18876
put_return(867,19088
jump_to_at(902,19871
main_loop(916,20044
main(991,21429

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/negate.d,277
ecl_negate_fix(19,454
ecl_negate_big(25,547
ecl_negate_ratio(31,626
ecl_negate_single_float(37,743
ecl_negate_double_float(43,856
ecl_negate_long_float(49,969
ecl_negate_complex(55,1076
ecl_negate_csfloat(63,1272
ecl_negate_cdfloat(69,1370
ecl_negate_clfloat(75,1468

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minus.d,108
#define ECL_INCLUDE_MATH_H15,368
  for (diff = num; --narg;narg28,646
    diff 29,675
ecl_minus(34,755

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/plusp.d,190
cl_plusp(20,439
ecl_plusp_fixnum(26,565
ecl_plusp_big(32,641
ecl_plusp_ratio(38,715
ecl_plusp_single_float(44,794
ecl_plusp_double_float(50,880
static int ecl_plusp_long_float(55,955

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/float_fix_compare.d,60
double_fix_compare(24,806
long_double_fix_compare(51,1456

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/conjugate.d,169
cl_conjugate(19,453
ecl_conjugate_real(25,531
ecl_conjugate_complex(31,597
ecl_conjugate_csfloat(38,758
ecl_conjugate_cdfloat(46,929
ecl_conjugate_clfloat(54,1099

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/plus.d,46
#define ECL_INCLUDE_MATH_H15,365
  @(27,644

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/exp.d,259
#define ECL_INCLUDE_MATH_H15,379
cl_exp(23,529
ecl_exp_rational(29,595
ecl_exp_single_float(35,702
ecl_exp_double_float(41,817
ecl_exp_long_float(47,931
ecl_exp_complex(53,1040
ecl_exp_csfloat(66,1290
ecl_exp_cdfloat(74,1455
ecl_exp_clfloat(82,1619

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/one_minus.d,310
ecl_one_minus_fix(25,578
ecl_one_minus_big(33,821
ecl_one_minus_ratio(39,917
ecl_one_minus_single_float(45,1049
ecl_one_minus_double_float(51,1168
ecl_one_minus_long_float(57,1287
ecl_one_minus_complex(63,1400
ecl_one_minus_csfloat(71,1590
ecl_one_minus_cdfloat(77,1694
ecl_one_minus_clfloat(83,1798

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/log.d,585
#define ECL_INCLUDE_MATH_H16,377
ecl_log1_complex_inner(26,581
ecl_log1_bignum(55,1392
ecl_log1_simple(75,1930
ecl_log1_single_float(92,2329
ecl_log1_double_float(110,2736
ecl_log1_long_float(128,3143
ecl_log1_complex(146,3556
ecl_log1_csfloat(160,3941
ecl_log1_cdfloat(168,4107
ecl_log1_clfloat(176,4272
ecl_log2(191,4750
  @(201,4989
ecl_log1p_simple(211,5102
ecl_log1p_single_float(227,5481
ecl_log1p_double_float(244,5880
ecl_log1p_long_float(261,6278
ecl_log1p_complex(278,6677
ecl_log1p_csfloat(292,7062
ecl_log1p_cdfloat(300,7231
ecl_log1p_clfloat(308,7399

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/abs.d,311
#define ECL_INCLUDE_MATH_H16,376
cl_abs(22,497
ecl_abs_fixnum(28,563
ecl_abs_bignum(34,682
ecl_abs_rational(40,789
ecl_abs_single_float(53,1100
ecl_abs_double_float(61,1240
ecl_abs_long_float(69,1380
ecl_abs_complex(77,1520
ecl_abs_csfloat(102,2179
ecl_abs_cdfloat(110,2317
ecl_abs_clfloat(118,2454

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sinh.d,268
#define ECL_INCLUDE_MATH_H16,384
cl_sinh(24,534
ecl_sinh_rational(30,602
ecl_sinh_single_float(36,711
ecl_sinh_double_float(42,828
ecl_sinh_long_float(48,944
ecl_sinh_complex(54,1055
ecl_sinh_csfloat(71,1505
ecl_sinh_cdfloat(79,1672
ecl_sinh_clfloat(87,1838

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/tan.d,259
#define ECL_INCLUDE_MATH_H16,375
cl_tan(24,525
ecl_tan_rational(30,591
ecl_tan_single_float(36,698
ecl_tan_double_float(42,813
ecl_tan_long_float(48,927
ecl_tan_complex(54,1036
ecl_tan_csfloat(63,1195
ecl_tan_cdfloat(71,1360
ecl_tan_clfloat(79,1524

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/atan.d,71
#define ECL_INCLUDE_MATH_H16,420
ecl_atan2(24,566
ecl_atan1(52,1199

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/round.d,201
#define ECL_INCLUDE_MATH_H16,371
# define floorf 22,516
number_remainder(37,747
round_double(47,897
round_long_double(66,1193
ecl_round2_integer(85,1509
ecl_round1(105,2080
ecl_round2(151,3155

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/divide.d,77
#define ECL_INCLUDE_MATH_H15,367
complex_divide(35,784
ecl_divide(45,1182

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/expt.d,196
#define ECL_INCLUDE_MATH_H16,356
ecl_fixnum_expt(26,563
cl_expt(41,760
expt_zero(56,1188
ecl_expt_generic(97,2270
ecl_expt_float(118,2772
ecl_expt_complex_float(145,3360
ecl_expt(174,3956

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/truncate.d,126
#define ECL_INCLUDE_MATH_H16,377
# define floorf 20,464
# define ceilf 21,486
ecl_truncate1(28,579
ecl_truncate2(76,1654

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sin.d,259
#define ECL_INCLUDE_MATH_H16,372
cl_sin(24,522
ecl_sin_rational(30,588
ecl_sin_single_float(36,695
ecl_sin_double_float(42,810
ecl_sin_long_float(48,924
ecl_sin_complex(54,1033
ecl_sin_csfloat(70,1406
ecl_sin_cdfloat(78,1571
ecl_sin_clfloat(86,1735

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/number_equalp.d,156
  for (i = 1; i < narg;27,688
ecl_number_equalp(37,885
  numi 214,7374
    ecl_va_list numb;216,7431
    numi 218,7492
    for (j = 1; j<i;i219,7521

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/zerop.d,275
cl_zerop(20,439
ecl_zerop_fixnum(26,564
ecl_zerop_ratio(32,644
ecl_zerop_single_float(38,701
ecl_zerop_double_float(44,788
static int ecl_zerop_long_float(49,864
ecl_zerop_complex(55,958
ecl_zerop_csfloat(62,1103
ecl_zerop_cdfloat(68,1180
ecl_zerop_clfloat(74,1257

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minusp.d,197
cl_minusp(19,440
ecl_minusp_fixnum(25,592
ecl_minusp_big(31,670
ecl_minusp_ratio(37,745
ecl_minusp_single_float(43,826
ecl_minusp_double_float(49,913
static int ecl_minusp_long_float(54,989

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/times.d,52
#define ECL_INCLUDE_MATH_H15,366
ecl_times(31,681

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/cos.d,259
#define ECL_INCLUDE_MATH_H15,373
cl_cos(23,523
ecl_cos_rational(29,589
ecl_cos_single_float(35,696
ecl_cos_double_float(41,811
ecl_cos_long_float(47,925
ecl_cos_complex(53,1034
ecl_cos_csfloat(67,1400
ecl_cos_cdfloat(75,1565
ecl_cos_clfloat(83,1729

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/tanh.d,268
#define ECL_INCLUDE_MATH_H16,387
cl_tanh(24,537
ecl_tanh_rational(30,605
ecl_tanh_single_float(36,714
ecl_tanh_double_float(42,831
ecl_tanh_long_float(48,947
ecl_tanh_complex(54,1058
ecl_tanh_csfloat(63,1220
ecl_tanh_cdfloat(71,1387
ecl_tanh_clfloat(79,1553

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/one_plus.d,300
ecl_one_plus_fix(25,577
ecl_one_plus_big(33,819
ecl_one_plus_ratio(39,913
ecl_one_plus_single_float(45,1043
ecl_one_plus_double_float(51,1161
ecl_one_plus_long_float(57,1279
ecl_one_plus_complex(63,1391
ecl_one_plus_csfloat(71,1579
ecl_one_plus_cdfloat(77,1682
ecl_one_plus_clfloat(83,1785

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/number_compare.d,75
ecl_number_compare(31,644
monotonic(147,4385
#define MONOTONIC(179,5040

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/cosh.d,268
#define ECL_INCLUDE_MATH_H15,386
cl_cosh(23,536
ecl_cosh_rational(29,604
ecl_cosh_single_float(35,713
ecl_cosh_double_float(41,830
ecl_cosh_long_float(47,946
ecl_cosh_complex(53,1057
ecl_cosh_csfloat(70,1507
ecl_cosh_cdfloat(78,1674
ecl_cosh_clfloat(86,1840

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sqrt.d,271
#define ECL_INCLUDE_MATH_H16,355
cl_sqrt(24,505
ecl_sqrt_rational(30,573
ecl_sqrt_single_float(41,816
ecl_sqrt_double_float(53,1091
ecl_sqrt_long_float(65,1365
ecl_sqrt_complex(77,1638
ecl_sqrt_csfloat(84,1756
ecl_sqrt_cdfloat(92,1923
ecl_sqrt_clfloat(100,2089

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/floor.d,97
#define ECL_INCLUDE_MATH_H15,372
# define floorf 19,459
ecl_floor1(35,720
ecl_floor2(81,1751

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minmax.d,41
  } else do 25,666
  } else do 45,1174

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/ceiling.d,100
#define ECL_INCLUDE_MATH_H13,281
# define ceilf 17,368
ecl_ceiling1(32,596
ecl_ceiling2(79,1625

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_log.d,958
ior_op(24,498
xor_op(30,570
and_op(36,642
eqv_op(42,714
nand_op(48,789
nor_op(54,865
andc1_op(60,940
andc2_op(66,1017
orc1_op(72,1094
orc2_op(78,1170
b_clr_op(84,1246
b_set_op(90,1316
b_1_op(96,1387
b_2_op(102,1455
b_c1_op(108,1523
b_c2_op(114,1593
typedef cl_fixnum (*bit_operator)bit_operator119,1646
static bit_operator fixnum_operations[fixnum_operations121,1704
log_op(141,1943
ecl_boole(158,2250
cl_lognot(202,3419
count_bits(208,3507
ecl_ash(240,4175
ecl_fixnum_bit_length(277,5193
cl_lognand(323,6204
cl_lognor(329,6299
cl_logandc1(335,6392
cl_logandc2(341,6489
cl_logorc1(347,6586
cl_logorc2(353,6681
coerce_to_logical_operator(359,6777
cl_boole(369,6974
cl_logbitp(376,7133
cl_ash(404,7695
cl_logcount(442,8496
ecl_integer_length(448,8579
cl_integer_length(470,8990
si_bit_array_op(476,9088
#define set_high(583,12013
#define set_low(586,12153
#define extract_byte(589,12301
#define store_byte(593,12519

/home/vagrant/build_ecl/ecl-21.2.1/src/c/alloc_2.d,2106
#  undef GBC_BOEHM_PRECISE39,830
#  define GBC_BOEHM_OWN_MARKER45,967
static int cl_object_kind,47,1070
static int cl_object_kind, cl_object_mark_proc_index;47,1070
static void **cl_object_free_list;cl_object_free_list48,1124
_ecl_set_max_heap_size(59,1414
static int failure;74,1903
out_of_memory_check(76,1937
no_warnings(83,2025
out_of_memory(88,2080
#undef alloc_object170,4587
static struct ecl_type_information 173,4615
  size_t size;174,4652
  GC_word descriptor;176,4692
  cl_object (*allocator)allocator178,4721
  size_t t;179,4787
} type_info[type_info180,4799
error_wrong_tag(184,4857
ecl_object_byte_size(191,4972
allocate_object_atomic(203,5323
allocate_object_full(215,5639
allocate_object_typed(228,5971
allocate_object_own(243,6364
#define TYPD_EXTRA_BYTES 245,6435
#define GENERAL_MALLOC(246,6489
  typedef void *ptr_t;ptr_t248,6599
cl_object_mark_proc(288,7652
#define MAYBE_MARK2(310,8360
#define MAYBE_MARK(317,8760
allocate_object_marked(508,14193
ecl_alloc_object(521,14526
ecl_alloc_compact_object(607,16315
ecl_cons(621,16701
ecl_list1(641,17115
ecl_alloc_instance(661,17529
static cl_index stamp 672,17819
cl_index ecl_next_stamp(673,17846
ecl_alloc_uncollectable(682,17980
ecl_free_uncollectable(693,18227
ecl_alloc_unprotected(702,18422
ecl_alloc_atomic_unprotected(708,18507
ecl_alloc(714,18606
ecl_alloc_atomic(725,18835
ecl_dealloc(736,19076
static int alloc_initialized 744,19245
to_bitmap(752,19436
init_alloc(763,19645
#define init_tm(828,21756
standard_finalizer(1111,33479
deferred_finalizer(1148,34267
wrapped_finalizer(1154,34343
si_get_finalizer(1197,35942
ecl_set_finalizer_unprotected(1218,36503
si_set_finalizer(1234,36977
static int GC_print_stats;1248,37390
si_gc_stats(1252,37435
gather_statistics(1293,38648
update_bytes_consed 1307,38948
ecl_mark_env(1341,40083
stacks_scanner(1369,41046
ecl_register_root(1409,42205
si_gc(1418,42417
si_gc_dump(1428,42612
ecl_alloc_weak_pointer(1442,42892
si_make_weak_pointer(1459,43381
ecl_weak_pointer_value(1466,43507
si_weak_pointer_value(1472,43582

/home/vagrant/build_ecl/ecl-21.2.1/src/c/stacks.d,1227
cs_set_size(28,651
ecl_cs_overflow(81,2260
ecl_cs_set_org(117,3337
ecl_bds_unwind_n(140,3889
ecl_bds_set_size(146,3982
ecl_bds_overflow(172,4785
ecl_bds_unwind(195,5550
ecl_progv(209,5888
get_bds_ptr(236,6705
si_bds_top(248,6976
si_bds_var(255,7100
si_bds_val(261,7179
# undef ecl_bds_bind268,7344
# undef ecl_bds_push269,7365
# undef ecl_bds_unwind1270,7386
# undef ecl_bds_read273,7437
# undef ecl_bds_set274,7458
# undef ecl_bds_ref275,7478
ecl_new_binding_index(280,7541
ecl_extend_bindings_array(299,8089
invalid_or_too_large_binding_index(310,8532
ecl_bds_bind(330,9133
ecl_bds_push(362,9957
ecl_bds_unwind1(393,10795
ecl_bds_read(407,11097
ecl_bds_ref(418,11368
ecl_bds_set(430,11669
get_ihs_ptr(439,11879
si_ihs_top(451,12127
si_ihs_prev(458,12247
si_ihs_next(464,12309
si_ihs_bds(470,12371
si_ihs_fun(476,12477
si_ihs_env(482,12571
frs_set_size(490,12730
frs_overflow(516,13527
_ecl_frs_push(538,14316
ecl_unwind(560,14990
frs_sch 577,15422
get_frame_ptr(588,15662
si_frs_top(600,15936
si_frs_bds(607,16060
si_frs_tag(613,16169
si_frs_ihs(619,16251
si_sch_frs_base(625,16357
si_set_limit(639,16746
si_get_limit(671,17845
si_reset_margin(692,18405
init_stacks(708,18758

/home/vagrant/build_ecl/ecl-21.2.1/src/c/symbol.d,941
ecl_symbol_package(21,455
ecl_symbol_type(31,669
ecl_symbol_type_set(41,880
ecl_symbol_name(55,1146
ecl_symbol_plist(67,1379
cl_make_symbol(83,1759
ecl_make_keyword(121,2649
ecl_make_symbol(129,2837
ecl_symbol_value(138,3076
FEtype_error_plist(160,3683
ecl_getf(170,3989
ecl_get(191,4421
si_put_f(202,4674
remf(236,5454
ecl_keywordp(262,5967
  plist 270,6150
cl_remprop(275,6247
cl_symbol_plist(282,6397
cl_get_properties(293,6583
cl_symbol_name(315,7145
  x 324,7323
  bool increment;341,7846
  int intern_flag;371,9022
  pack 375,9140
  output 377,9189
  cl_core.gentemp_counter gentemp_counter385,9590
  s 386,9657
cl_symbol_package(393,9807
cl_keywordp(399,9892
si_rem_f(416,10188
si_set_symbol_plist(424,10389
mp_compare_and_swap_symbol_plist(432,10528
si_putprop(439,10706
@si::*make-special(special458,11141
@si::*make-constant(constant469,11407
ecl_defvar(481,11713
ecl_defparameter(487,11856

/home/vagrant/build_ecl/ecl-21.2.1/src/c/hash.d,3254
#define SYMBOL_NAME(24,547
assert_type_hash_table(27,652
_hash_eql(34,842
    struct { double mantissa;51,1557
    struct { double mantissa; int exponent;51,1557
    struct { double mantissa; int exponent; int sign;51,1557
      double mantissa1,67,2309
      double mantissa1, mantissa2;67,2309
      int exponent1,68,2344
      int exponent1, exponent2;68,2344
      int sign1,69,2376
      int sign1, sign2;69,2376
_hash_equal(91,3003
    struct { double mantissa;154,5268
    struct { double mantissa; int exponent;154,5268
    struct { double mantissa; int exponent; int sign;154,5268
      double mantissa1,182,6345
      double mantissa1, mantissa2;182,6345
      int exponent1,183,6380
      int exponent1, exponent2;183,6380
      int sign1,184,6412
      int sign1, sign2;184,6412
_hash_equalp(203,6978
static cl_hashkey _hash_generic(269,8964
#define HASH_TABLE_LOOP(278,9275
#define HASH_TABLE_SET(303,10982
#define _hash_eq(325,12226
_ecl_hash_loop_eq(328,12306
_ecl_gethash_eq(334,12445
_ecl_remhash_eq(342,12679
_ecl_sethash_eq(357,13004
_ecl_hash_loop_eql(367,13200
_ecl_gethash_eql(373,13347
_ecl_sethash_eql(381,13592
_ecl_remhash_eql(387,13744
_ecl_hash_loop_equal(406,14122
_ecl_gethash_equal(412,14273
_ecl_sethash_equal(420,14527
_ecl_remhash_equal(426,14688
_ecl_hash_loop_equalp(445,15076
_ecl_gethash_equalp(451,15229
_ecl_sethash_equalp(459,15486
_ecl_remhash_equalp(465,15650
_ecl_hash_loop_pack(484,16042
_ecl_gethash_pack(491,16273
_ecl_sethash_pack(499,16525
_ecl_remhash_pack(505,16711
_ecl_generic_hash_test(524,17074
_ecl_hash_loop_generic(529,17237
_ecl_gethash_generic(536,17466
_ecl_sethash_generic(544,17731
_ecl_remhash_generic(550,17903
#define copy_entry(568,18286
_ecl_hash_key(573,18362
normalize_weak_key_entry(587,18812
normalize_weak_value_entry(592,18934
normalize_weak_key_and_value_entry(597,19062
normalize_weak_key_or_value_entry(605,19263
copy_entry(615,19501
_ecl_weak_hash_loop(658,20692
_ecl_gethash_weak(711,22040
_ecl_sethash_weak(726,22506
_ecl_remhash_weak(760,23411
_ecl_sethash_sync(780,23861
_ecl_gethash_sync(794,24324
_ecl_remhash_sync(808,24776
ecl_gethash(827,25238
ecl_gethash_safe(834,25408
_ecl_sethash(841,25594
ecl_sethash(847,25728
ecl_extend_hashtable(855,25943
do_clrhash(973,30105
cl__make_hash_table(991,30550
ecl_reconstruct_serialized_hashtable(1101,34102
cl_hash_table_p(1153,35600
si_hash_table_weakness(1159,35699
si_hash_table_synchronized_p(1175,36161
si_hash_set(1200,36590
ecl_remhash(1208,36758
cl_remhash(1215,36919
cl_clrhash(1222,37084
cl_hash_table_test(1232,37235
cl_hash_table_size(1249,37774
ecl_hash_table_count(1256,37918
cl_hash_table_count(1278,38383
si_hash_table_iterate(1285,38550
si_hash_table_iterator(1311,39182
cl_hash_table_rehash_size(1321,39516
cl_hash_table_rehash_threshold(1328,39665
cl_sxhash(1335,39822
  for (h = 0; narg;1345,40058
    cl_object o 1346,40088
    h 1347,40124
  for (h = 0; narg;1355,40241
    cl_object o 1356,40271
    h 1357,40307
  for (h = 0; narg;1365,40430
    cl_object o 1366,40460
    h 1367,40496
cl_maphash(1373,40577
si_hash_table_content(1402,41312
si_hash_table_fill(1416,41672
si_copy_hash_table(1430,42025

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_arith.d,74
ecl_integer_divide(20,428
  gcd 43,1076
ecl_gcd(54,1302
  lcm 88,2064

/home/vagrant/build_ecl/ecl-21.2.1/src/c/read.d,3855
#define ECL_INCLUDE_MATH_H15,349
#undef _complex28,638
#define read_suppress 32,758
# define TOKEN_STRING_DIM(35,850
# define TOKEN_STRING_FILLP(36,897
# define TOKEN_STRING_CHAR(37,948
# define TOKEN_STRING_CHAR_SET(38,1002
# define TOKEN_STRING_CHAR_CMP(39,1064
# define TOKEN_STRING_DIM(41,1135
# define TOKEN_STRING_FILLP(42,1187
# define TOKEN_STRING_CHAR(43,1243
# define TOKEN_STRING_CHAR_SET(44,1302
# define TOKEN_STRING_CHAR_CMP(45,1371
#define ECL_READ_ONLY_TOKEN 48,1449
#define ECL_READ_RETURN_IGNORABLE 49,1479
#define ECL_READ_LIST_DOT 50,1515
si_get_buffer_string(53,1554
si_put_buffer_string(73,2023
ecl_read_object_non_recursive(110,3206
invert_buffer_case(131,3884
ecl_read_object_with_delimiter(162,4790
ecl_read_object(413,12356
si_read_object_or_ignore(419,12471
right_parenthesis_reader(439,13015
left_parenthesis_reader(445,13159
cl_object comma_reader(456,13326
cl_object backquote_reader(482,14142
read_constituent(506,14964
double_quote_reader(535,15623
dispatch_reader_fun(558,16262
dispatch_macro_character(575,16785
single_quote_reader(609,17576
void_reader(618,17761
semicolon_reader(625,17855
sharp_generic_error(641,18070
sharp_C_reader(648,18258
sharp_backslash_reader(681,19249
sharp_single_quote_reader(711,20247
sharp_Y_reader(728,20622
#define QUOTE 796,22254
#define EVAL 797,22272
#define LIST 798,22290
#define LISTX 799,22308
#define APPEND 800,22326
#define NCONC 801,22344
si_make_backq_vector(811,22558
sharp_left_parenthesis_reader(845,23463
sharp_asterisk_reader(903,25582
sharp_colon_reader(961,27353
sharp_dot_reader(1018,28813
read_number(1039,29441
sharp_B_reader(1064,30153
sharp_O_reader(1072,30353
sharp_X_reader(1080,30553
sharp_R_reader(1088,30754
#define sharp_A_reader 1104,31193
#define sharp_S_reader 1105,31228
sharp_eq_reader(1108,31281
sharp_sharp_reader(1134,32072
do_patch_sharp(1154,32649
patch_sharp(1265,35778
#define sharp_plus_reader 1284,36356
#define sharp_minus_reader 1285,36394
#define sharp_less_than_reader 1286,36433
#define sharp_whitespace_reader 1287,36476
#define sharp_right_parenthesis_reader 1288,36520
sharp_vertical_bar_reader(1291,36589
default_dispatch_macro_fun(1321,37147
sharp_P_reader(1330,37375
sharp_dollar_reader(1349,37770
assert_type_readtable(1365,38049
ecl_copy_readtable(1374,38234
ecl_current_readtable(1417,39586
ecl_current_read_base(1433,39980
ecl_current_read_default_float_format(1450,40447
stream_or_default_input(1471,41091
  strm 1484,41450
  } else 1487,41561
  strm 1514,42174
  } else 1517,42285
do_read_delimited_list(1529,42473
  int delimiter;1573,43850
  delimiter 1575,43871
  strm 1576,43903
  cl_object token, value0, value1;1591,44403
  strm 1593,44442
  token 1607,44822
  do 1608,44856
  cl_object output;1638,45699
  strm 1640,45723
  c 1641,45763
  cl_object rtbl 1661,46262
  strm 1663,46310
  c 1664,46350
  strm 1706,47548
  f 1716,47815
  c 1745,48438
  } else 1771,49094
cl_readtable_case(1778,49180
error_locked_readtable(1791,49522
si_readtable_case_set(1799,49685
cl_readtablep(1822,50410
ecl_readtable_get(1828,50513
ecl_readtable_set(1855,51174
ecl_invalid_character_p(1881,51961
  cl_object dispatch;1890,52208
  cl_fixnum fc, tc;1891,52230
  fc 1900,52511
  tc 1901,52542
  cat 1903,52572
  cl_object dispatch;1924,53252
  cat 1928,53343
  cl_object table;1937,53732
  int c;1938,53751
  c 1941,53837
  cat 1942,53863
  table 1943,53935
  cl_fixnum subcode;1953,54335
  subcode 1963,54690
  cl_fixnum c;1985,55341
  c 1991,55505
  c 1996,55683
si_standard_readtable(2006,55967
  output 2015,56163
extra_argument(2023,56314
#define make_cf2(2030,56490
#define make_cf3(2031,56551
init_read(2034,56618
make_one_data_stream(2285,68407
make_data_stream(2296,68698
ecl_init_module(2316,69196

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cons.d,2759
cl_object _ecl_car(19,386
cl_object _ecl_cdr(26,483
cl_object _ecl_caar(33,580
cl_object _ecl_cdar(42,726
cl_object _ecl_cadr(51,872
cl_object _ecl_cddr(60,1018
cl_object _ecl_caaar(69,1164
cl_object _ecl_cdaar(80,1359
cl_object _ecl_cadar(91,1554
cl_object _ecl_cddar(102,1749
cl_object _ecl_caadr(113,1944
cl_object _ecl_cdadr(124,2139
cl_object _ecl_caddr(135,2334
cl_object _ecl_cdddr(146,2529
cl_object _ecl_caaaar(157,2724
cl_object _ecl_cdaaar(170,2968
cl_object _ecl_cadaar(183,3212
cl_object _ecl_cddaar(196,3456
cl_object _ecl_caadar(209,3700
cl_object _ecl_cdadar(222,3944
cl_object _ecl_caddar(235,4188
cl_object _ecl_cdddar(248,4432
cl_object _ecl_caaadr(261,4676
cl_object _ecl_cdaadr(274,4920
cl_object _ecl_cadadr(287,5164
cl_object _ecl_cddadr(300,5408
cl_object _ecl_caaddr(313,5652
cl_object _ecl_cdaddr(326,5896
cl_object _ecl_cadddr(339,6140
cl_object _ecl_cddddr(352,6384
cl_object ecl_car(367,6658
cl_object ecl_cdr(375,6834
cl_object ecl_caar(383,7010
cl_object ecl_cdar(394,7315
cl_object ecl_cadr(405,7620
cl_object ecl_cddr(416,7925
cl_object ecl_caaar(427,8230
cl_object ecl_cdaar(441,8664
cl_object ecl_cadar(455,9098
cl_object ecl_cddar(469,9532
cl_object ecl_caadr(483,9966
cl_object ecl_cdadr(497,10400
cl_object ecl_caddr(511,10834
cl_object ecl_cdddr(525,11268
cl_object ecl_caaaar(539,11702
cl_object ecl_cdaaar(556,12265
cl_object ecl_cadaar(573,12828
cl_object ecl_cddaar(590,13391
cl_object ecl_caadar(607,13954
cl_object ecl_cdadar(624,14517
cl_object ecl_caddar(641,15080
cl_object ecl_cdddar(658,15643
cl_object ecl_caaadr(675,16206
cl_object ecl_cdaadr(692,16769
cl_object ecl_cadadr(709,17332
cl_object ecl_cddadr(726,17895
cl_object ecl_caaddr(743,18458
cl_object ecl_cdaddr(760,19021
cl_object ecl_cadddr(777,19584
cl_object ecl_cddddr(794,20147
cl_object cl_car(812,20711
cl_object cl_cdr(818,20830
cl_object cl_caar(824,20949
cl_object cl_cdar(830,21070
cl_object cl_cadr(836,21191
cl_object cl_cddr(842,21312
cl_object cl_caaar(848,21433
cl_object cl_cdaar(854,21556
cl_object cl_cadar(860,21679
cl_object cl_cddar(866,21802
cl_object cl_caadr(872,21925
cl_object cl_cdadr(878,22048
cl_object cl_caddr(884,22171
cl_object cl_cdddr(890,22294
cl_object cl_caaaar(896,22417
cl_object cl_cdaaar(902,22542
cl_object cl_cadaar(908,22667
cl_object cl_cddaar(914,22792
cl_object cl_caadar(920,22917
cl_object cl_cdadar(926,23042
cl_object cl_caddar(932,23167
cl_object cl_cdddar(938,23292
cl_object cl_caaadr(944,23417
cl_object cl_cdaadr(950,23542
cl_object cl_cadadr(956,23667
cl_object cl_cddadr(962,23792
cl_object cl_caaddr(968,23917
cl_object cl_cdaddr(974,24042
cl_object cl_cadddr(980,24167
cl_object cl_cddddr(986,24292

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/rwlock.d,346
#define _XOPEN_SOURCE 14,320
FEerror_not_a_rwlock(30,655
FEunknown_rwlock_error(36,755
ecl_make_rwlock(65,1505
mp_rwlock_name(91,2117
mp_giveup_rwlock_read(100,2312
mp_giveup_rwlock_write(118,2694
mp_get_rwlock_read_nowait(124,2786
mp_get_rwlock_read_wait(148,3317
mp_get_rwlock_write_nowait(175,3900
mp_get_rwlock_write_wait(199,4432

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/mailbox.d,245
FEerror_not_a_mailbox(17,351
ecl_make_mailbox(23,457
mp_mailbox_name(55,1547
mp_mailbox_count(65,1767
mp_mailbox_empty_p(75,2017
mp_mailbox_read(85,2288
mp_mailbox_try_read(104,2812
mp_mailbox_send(123,3374
mp_mailbox_try_send(141,3883

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/process.d,1223
#define _XOPEN_SOURCE 14,313
#define ECL_INCLUDE_MATH_H20,464
DWORD cl_env_key;34,730
static pthread_key_t cl_env_key;36,754
ecl_process_env_unsafe(42,886
ecl_process_env(52,1047
ecl_set_process_env(66,1324
mp_current_process(78,1561
extend_process_vector(88,1738
ecl_list_process(107,2432
ecl_unlist_process(130,3064
ecl_process_list(150,3605
assert_type_process(172,4167
thread_cleanup(179,4295
static DWORD WINAPI thread_entry_point(226,5879
alloc_process(306,8437
ecl_import_current_thread(335,9629
ecl_release_current_thread(433,12667
  process 450,13032
mp_process_preset(455,13120
mp_interrupt_process(469,13502
mp_suspend_loop(482,13964
mp_break_suspend_loop(494,14181
mp_process_suspend(504,14363
mp_process_resume(510,14477
mp_process_kill(516,14596
mp_process_yield(522,14707
mp_process_enable(529,14781
mp_exit_process(637,18776
mp_all_processes(649,19079
mp_process_name(657,19290
mp_process_active_p(664,19407
mp_process_whostate(671,19548
mp_process_join(678,19669
mp_process_run_function(690,19990
mp_process_run_function_wait(711,20561
mp_get_sigmask(734,21141
mp_set_sigmask(746,21515
mp_block_signals(756,21769
mp_restore_signals(778,22462
init_threads(795,22844

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/barrier.d,312
FEerror_not_a_barrier(17,337
ecl_make_barrier(23,443
mp_barrier_name(42,943
mp_barrier_count(52,1163
mp_barrier_arrivers_count(62,1402
  int kill_flags 80,1971
    barrier->barrier.arrivers_count arrivers_count90,2290
barrier_wait_condition(97,2494
decrement_counter(110,2788
mp_barrier_wait(133,3408

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/mutex.d,368
FEerror_not_a_lock(22,432
FEerror_not_a_recursive_lock(28,528
FEerror_not_owned(35,703
ecl_make_lock(42,868
mp_recursive_lock_p(60,1312
mp_holding_lock_p(69,1531
mp_lock_name(79,1806
mp_lock_owner(89,2002
mp_lock_count(99,2200
mp_giveup_lock(109,2417
get_lock_inner(134,3054
mp_get_lock_nowait(160,3800
own_or_get_lock(170,4019
mp_get_lock_wait(190,4557

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/semaphore.d,274
#define AO_ASSUME_WINDOWS98 13,276
FEerror_not_a_semaphore(22,518
ecl_make_semaphore(28,632
mp_semaphore_name(44,1063
mp_semaphore_count(54,1299
mp_semaphore_wait_count(64,1556
get_semaphore_inner(88,2288
mp_wait_on_semaphore(110,2833
mp_try_get_semaphore(125,3210

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/queue.d,385
ecl_process_yield(21,406
ecl_get_spinlock(33,573
ecl_giveup_spinlock(45,884
wait_queue_nconc(51,989
wait_queue_pop_all(60,1275
wait_queue_delete(75,1630
bignum_set_time(89,2041
elapsed_time(98,2290
waiting_time(112,2674
ecl_wait_on_timed(129,3133
ecl_wait_on(230,7267
ecl_waiter_pop(308,10115
ecl_wakeup_waiters(331,10684
#undef print_lock374,12263
print_lock(377,12287

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/atomic.d,101
ecl_atomic_get(21,440
ecl_atomic_push(31,641
ecl_atomic_pop(41,892
ecl_atomic_index_incf(52,1126

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/condition_variable.d,223
mp_make_condition_variable(21,461
condition_variable_wait(31,748
mp_condition_variable_wait(45,1221
mp_condition_variable_timedwait(79,2529
mp_condition_variable_signal(85,2687
mp_condition_variable_broadcast(94,2928

/home/vagrant/build_ecl/ecl-21.2.1/src/c/mapfun.d,28
#define PREPARE_MAP(18,366

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/integer_to_string.d,116
#define ECL_INCLUDE_MATH_H15,487
bignum_to_string(21,598
write_base_prefix(48,1695
si_integer_to_string(69,2402

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/print_unreadable.d,100
_ecl_write_addr(17,355
_ecl_write_unreadable(57,1424
si_print_unreadable_object_function(75,1886

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_string_old.d,84
large_mantissa(90,4345
assert_floating_point_width(97,4512
float_string(108,4810

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_ugly.d,852
write_readable_pathname(25,525
write_pathname(42,1075
write_integer(63,1621
_ecl_write_fixnum(76,2046
write_ratio(85,2329
write_complex(101,2907
write_float(111,3169
write_complex_float(121,3522
write_character(149,4294
write_package(166,4721
write_hashtable(175,4955
write_random(198,5858
write_stream(209,6124
write_instance(321,9090
write_readtable(327,9198
write_cfun(333,9320
write_codeblock(339,9450
write_cclosure(345,9579
write_foreign(351,9707
write_frame(368,10122
write_weak_pointer(374,10259
write_process(381,10406
write_lock(387,10532
write_rwlock(395,10727
write_condition_variable(401,10850
write_semaphore(407,10990
write_barrier(413,11112
write_mailbox(419,11230
write_illegal(427,11374
typedef void (*printer)printer432,11488
static printer dispatch[dispatch434,11545
si_write_ugly_object(491,13900

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_sse.d,115
is_all_FF(23,475
write_sse_float(32,631
write_sse_double(43,875
write_sse_pack(54,1118
_ecl_write_sse(91,2162

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_list.d,24
_ecl_write_list(19,424

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_to_string.d,204
#define ECL_INCLUDE_MATH_H12,237
_ecl_ensure_buffer(18,341
_ecl_string_push_c_string(31,749
insert_char(39,879
push_base_string(48,1144
print_float_exponent(60,1475
si_float_to_string_free(87,2266

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_symbol.d,229
potential_number_p(19,425
#define needs_to_be_inverted(65,1671
all_dots(68,1742
needs_to_be_escaped(78,1901
buffer_write_char(106,2881
write_symbol_string(116,3252
forced_print_package(170,5064
_ecl_write_symbol(177,5245

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_code.d,97
_ecl_write_bytecodes_readably(20,469
_ecl_write_bytecodes(44,1490
_ecl_write_bclosure(54,1734

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_object.d,127
_ecl_will_print_as_hash(20,452
si_search_print_circle(45,1326
si_write_object_with_circle(82,2531
si_write_object(137,4580

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_to_digits.d,365
#define ECL_INCLUDE_MATH_H12,237
#define PRINT_BASE 17,330
#define EXPT_RADIX(18,369
  cl_object r;21,439
  cl_object s;22,454
  cl_object mm;23,469
  cl_object mp;24,485
  bool high_ok;25,501
  bool low_ok;26,517
} float_approx;27,532
times2(30,566
setup(36,638
scale(90,2162
generate(126,2926
change_precision(162,3939
si_float_to_digits(200,5092

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_array.d,173
write_array_inner(19,424
_ecl_write_array(136,3325
_ecl_write_vector(142,3418
_ecl_write_string(149,3531
_ecl_write_base_string(171,4213
_ecl_write_bitvector(192,4903

/home/vagrant/build_ecl/ecl-21.2.1/src/c/sequence.d,323
ecl_sequence_start_end(21,471
si_sequence_start_end(54,1540
cl_elt(62,1806
ecl_elt(68,1894
si_elt_set(103,2545
ecl_elt_set(109,2673
ecl_subseq(145,3360
ecl_copy_seq(187,4415
  p 195,4578
  sequence 196,4641
cl_copy_seq(201,4740
cl_length(207,4832
ecl_length(213,4914
cl_reverse(240,5323
cl_nreverse(270,5980

/home/vagrant/build_ecl/ecl-21.2.1/src/c/predicate.d,1205
#define ECL_INCLUDE_MATH_H16,378
#define ECL_DEFINE_AET_SIZE18,426
cl_identity(22,491
cl_null(28,546
cl_symbolp(34,623
cl_atom(40,710
cl_consp(46,791
cl_listp(52,870
cl_numberp(58,962
bool ecl_numberp(65,1115
cl_integerp(72,1218
cl_rationalp(79,1351
cl_floatp(86,1501
floatp(92,1576
cl_realp(99,1715
ecl_realp(106,1826
cl_complexp(113,1920
cl_characterp(119,2009
si_base_char_p(126,2121
ecl_stringp(133,2240
cl_stringp(144,2414
cl_bit_vector_p(150,2500
cl_vectorp(156,2597
cl_simple_string_p(162,2684
si_base_string_p(172,2944
cl_simple_bit_vector_p(179,3050
cl_simple_vector_p(188,3295
cl_arrayp(199,3621
cl_packagep(205,3706
cl_functionp(211,3795
cl_compiled_function_p(227,4108
cl_eq(235,4327
#define FLOAT_EQL(255,5039
#define FLOAT_EQL(258,5157
#undef FLOAT_EQL269,5640
ecl_eql(272,5663
cl_eql(316,7107
ecl_equal(322,7197
cl_equal(422,10236
ecl_equalp(428,10330
#define AET_FLOAT_EQUALP(493,12040
#define AET_FLOAT_EQUALP_CF(501,12458
#define AET_FLOAT_EQUALP_CF(503,12525
#define AET_FLOAT_SWITCH(506,12569
#undef AET_FLOAT_EQUALP531,13415
#undef AET_FLOAT_SWITCH532,13439
#undef AET_FLOAT_EQUALP_CF533,13463
cl_equalp(593,15115
si_fixnump(599,15216

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi.d,2159
#define ECL_INCLUDE_FFI_H14,324
static const cl_object ecl_aet_to_ffi_table[ecl_aet_to_ffi_table18,398
#define AUX_PTR(65,1581
  cl_object name;69,1765
  cl_index size;70,1783
  cl_index alignment;71,1800
} ecl_foreign_type_record;72,1822
# define ALIGNMENT(73,1849
# define FFI_DESC(74,1913
  cl_object name;78,2076
  cl_index size;79,2094
  char *d,d80,2111
  char *d, *a;a80,2111
} ecl_foreign_type_record;81,2126
#define ALIGNMENT(82,2153
#define AUX_PTR(83,2240
#define FFI_DESC(85,2391
ecl_foreign_type_table[ecl_foreign_type_table90,2565
#  define ffi_type_slonglong 139,3996
#  define ffi_type_ulonglong 140,4041
  const cl_object symbol;144,4111
  ffi_abi abi;145,4137
} ecl_foreign_cc_table[ecl_foreign_cc_table146,4152
static ffi_type *ecl_type_to_libffi_types[ecl_type_to_libffi_types180,4723
ecl_type_to_libffi_type(232,6646
ecl_make_foreign_data(243,6949
ecl_allocate_foreign_data(253,7221
ecl_foreign_data_pointer_safe(263,7472
ecl_base_string_pointer_safe(273,7711
ecl_null_terminated_base_string(288,8112
si_allocate_foreign_data(306,8519
si_free_foreign_data(320,8999
si_make_foreign_data_from_array(336,9380
si_foreign_data_p(352,9900
si_foreign_data_address(358,10000
si_foreign_data_tag(368,10276
si_foreign_data_equal(378,10506
si_foreign_data_pointer(392,10958
si_foreign_data_ref(414,11660
si_foreign_data_set(433,12293
foreign_type_code(456,13027
ecl_foreign_type_code(467,13213
ecl_foreign_cc_code(478,13453
static void wrong_ffi_tag(490,13754
ecl_foreign_data_ref_elt(499,13953
ecl_foreign_data_set_elt(581,16463
si_foreign_data_ref_elt(689,19222
si_foreign_data_set_elt(706,19850
si_size_of_foreign_elt_type(724,20509
si_alignment_of_foreign_elt_type(731,20685
si_foreign_elt_type_p(738,20848
si_null_pointer_p(744,20963
si_foreign_data_recast(753,21213
si_load_foreign_module(764,21525
si_unload_foreign_module(797,22530
si_find_foreign_symbol(824,23369
resize_call_stack(853,24279
prepare_cif(878,25121
  cl_object object;936,27135
  volatile cl_index sp;937,27155
  ffi_cif cif;938,27179
@ 939,27194
callback_executor(954,27649
si_free_ffi_closure(978,28562

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cinit.d,556
cl_upgraded_array_element_type(29,711
si_safe_eval(35,861
cl_slot_value(48,1213
clos_slot_value_set(54,1340
clos_std_compute_applicable_methods(60,1507
si_bind_simple_restarts(66,1676
si_bind_simple_handlers(75,1954
clos_std_compute_effective_method(84,2232
clos_compute_effective_method_function(90,2443
si_string_to_object(96,2664
si_signal_simple_error(109,3019
cl_set_difference(121,3423
cl_array_dimensions(127,3526
si_wrong_type_argument(133,3637
static cl_object si_simple_toplevel 138,3784
main(169,4600
void init_lib_LSP(200,5396

/home/vagrant/build_ecl/ecl-21.2.1/src/c/iso_latin_names.h,111
static const unsigned char extra_char_codes[extra_char_codes164,7810
#define extra_char_names_size 168,7917

/home/vagrant/build_ecl/ecl-21.2.1/src/c/pathname.d,2943
typedef int (*delim_fn)delim_fn29,619
normalize_case(41,975
in_local_case_p(55,1311
in_antilocal_case_p(63,1450
to_local_case(71,1598
host_case(79,1765
to_antilocal_case(89,1935
translate_from_common(97,2104
translate_to_common(110,2457
translate_component_case(122,2732
translate_list_case(143,3366
push_substring(168,4207
push_string(178,4437
destructively_check_directory(184,4564
ecl_make_pathname(254,6755
tilde_expand(345,9362
#define WORD_INCLUDE_DELIM 373,10302
#define WORD_ALLOW_ASTERISK 374,10331
#define WORD_EMPTY_IS_NIL 375,10362
#define WORD_LOGICAL 376,10390
#define WORD_SEARCH_LAST_DOT 377,10413
#define WORD_ALLOW_LEADING_DOT 378,10445
#define WORD_DISALLOW_SLASH 379,10479
#define WORD_DISALLOW_SEMICOLON 380,10510
make_one(383,10564
static int is_colon(388,10693
static int is_slash(389,10741
static int is_semicolon(390,10800
static int is_dot(391,10852
static int is_null(392,10898
parse_word(406,11310
parse_directories(495,13685
ecl_logical_hostname_p(524,14510
ecl_parse_namestring(558,15716
si_default_pathname_defaults(721,21042
cl_pathname(738,21736
cl_logical_pathname(775,22530
  pathname 792,23040
coerce_to_file_pathname(853,24790
coerce_to_physical_pathname(878,25607
si_coerce_to_filename(893,25989
#define default_device(926,27214
ecl_merge_pathnames(929,27262
ecl_namestring(999,29723
cl_namestring(1150,34296
  } else 1165,34732
  defaults 1198,35805
  } else 1214,36497
  x 1218,36596
cl_pathnamep(1229,37024
si_logical_pathname_p(1235,37123
cl_pathname_version(1282,38733
cl_file_namestring(1289,38853
cl_directory_namestring(1301,39324
cl_host_namestring(1312,39732
#define EN_MATCH(1321,39927
  defaults 1327,40185
  path 1328,40221
  pathdir 1329,40249
  defaultdir 1330,40287
  } else 1338,40641
  fname 1350,41162
  newpath 1353,41327
  newpath->pathname.logical logical1359,41668
#undef EN_MATCH1362,41796
ecl_wild_string_p(1367,41878
ecl_string_match(1386,42341
path_item_match(1436,43609
path_list_match(1450,44111
cl_pathname_match_p(1481,44910
coerce_to_from_pathname(1511,45858
  cl_object pair, l;1529,46285
  host 1534,46467
  len 1535,46503
  pair 1541,46703
  for (l = set, set = ECL_NIL; !ecl_endp(l); l 1553,47176
  set 1559,47433
find_wilds(1565,47536
find_list_wilds(1599,48319
copy_wildcards(1633,49196
copy_list_wildcards(1681,50226
  cl_object host, device, directory, name, type, version;1714,50976
  cl_object fromcase, tocase;1715,51034
  source 1718,51114
  from 1720,51194
  fromcase 1721,51222
  to 1723,51332
  tocase 1724,51356
  host 1732,51596
  device 1735,51694
  wilds 1738,51753
  } else 1744,52053
  directory 1750,52262
  wilds 1753,52299
  } else 1757,52521
  name 1763,52720
  wilds 1766,52752
  } else 1770,52974
  type 1776,53173
  version 1779,53208
  cl_object pathname;1795,53726
  pathname 1797,53750
  l 1802,53857
  for(; !ecl_endp(l); l 1803,53919

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cfun_dispatch.d,11255
typedef cl_object (*cl_objectfn_fixed0)cl_objectfn_fixed012,266
typedef cl_object (*cl_objectfn_fixed1)cl_objectfn_fixed113,309
typedef cl_object (*cl_objectfn_fixed2)cl_objectfn_fixed214,361
typedef cl_object (*cl_objectfn_fixed3)cl_objectfn_fixed315,424
typedef cl_object (*cl_objectfn_fixed4)cl_objectfn_fixed416,498
typedef cl_object (*cl_objectfn_fixed5)cl_objectfn_fixed517,583
typedef cl_object (*cl_objectfn_fixed6)cl_objectfn_fixed618,679
typedef cl_object (*cl_objectfn_fixed7)cl_objectfn_fixed719,786
typedef cl_object (*cl_objectfn_fixed8)cl_objectfn_fixed820,904
typedef cl_object (*cl_objectfn_fixed9)cl_objectfn_fixed921,1033
typedef cl_object (*cl_objectfn_fixed10)cl_objectfn_fixed1022,1173
typedef cl_object (*cl_objectfn_fixed11)cl_objectfn_fixed1123,1325
typedef cl_object (*cl_objectfn_fixed12)cl_objectfn_fixed1224,1488
typedef cl_object (*cl_objectfn_fixed13)cl_objectfn_fixed1325,1662
typedef cl_object (*cl_objectfn_fixed14)cl_objectfn_fixed1426,1847
typedef cl_object (*cl_objectfn_fixed15)cl_objectfn_fixed1527,2043
typedef cl_object (*cl_objectfn_fixed16)cl_objectfn_fixed1628,2250
typedef cl_object (*cl_objectfn_fixed17)cl_objectfn_fixed1729,2468
typedef cl_object (*cl_objectfn_fixed18)cl_objectfn_fixed1830,2697
typedef cl_object (*cl_objectfn_fixed19)cl_objectfn_fixed1931,2937
typedef cl_object (*cl_objectfn_fixed20)cl_objectfn_fixed2032,3188
typedef cl_object (*cl_objectfn_fixed21)cl_objectfn_fixed2133,3450
typedef cl_object (*cl_objectfn_fixed22)cl_objectfn_fixed2234,3723
typedef cl_object (*cl_objectfn_fixed23)cl_objectfn_fixed2335,4007
typedef cl_object (*cl_objectfn_fixed24)cl_objectfn_fixed2436,4302
typedef cl_object (*cl_objectfn_fixed25)cl_objectfn_fixed2537,4608
typedef cl_object (*cl_objectfn_fixed26)cl_objectfn_fixed2638,4925
typedef cl_object (*cl_objectfn_fixed27)cl_objectfn_fixed2739,5253
typedef cl_object (*cl_objectfn_fixed28)cl_objectfn_fixed2840,5592
typedef cl_object (*cl_objectfn_fixed29)cl_objectfn_fixed2941,5942
typedef cl_object (*cl_objectfn_fixed30)cl_objectfn_fixed3042,6303
typedef cl_object (*cl_objectfn_fixed31)cl_objectfn_fixed3143,6675
typedef cl_object (*cl_objectfn_fixed32)cl_objectfn_fixed3244,7058
typedef cl_object (*cl_objectfn_fixed33)cl_objectfn_fixed3345,7452
typedef cl_object (*cl_objectfn_fixed34)cl_objectfn_fixed3446,7857
typedef cl_object (*cl_objectfn_fixed35)cl_objectfn_fixed3547,8273
typedef cl_object (*cl_objectfn_fixed36)cl_objectfn_fixed3648,8700
typedef cl_object (*cl_objectfn_fixed37)cl_objectfn_fixed3749,9138
typedef cl_object (*cl_objectfn_fixed38)cl_objectfn_fixed3850,9587
typedef cl_object (*cl_objectfn_fixed39)cl_objectfn_fixed3951,10047
typedef cl_object (*cl_objectfn_fixed40)cl_objectfn_fixed4052,10518
typedef cl_object (*cl_objectfn_fixed41)cl_objectfn_fixed4153,11000
typedef cl_object (*cl_objectfn_fixed42)cl_objectfn_fixed4254,11493
typedef cl_object (*cl_objectfn_fixed43)cl_objectfn_fixed4355,11997
typedef cl_object (*cl_objectfn_fixed44)cl_objectfn_fixed4456,12512
typedef cl_object (*cl_objectfn_fixed45)cl_objectfn_fixed4557,13038
typedef cl_object (*cl_objectfn_fixed46)cl_objectfn_fixed4658,13575
typedef cl_object (*cl_objectfn_fixed47)cl_objectfn_fixed4759,14123
typedef cl_object (*cl_objectfn_fixed48)cl_objectfn_fixed4860,14682
typedef cl_object (*cl_objectfn_fixed49)cl_objectfn_fixed4961,15252
typedef cl_object (*cl_objectfn_fixed50)cl_objectfn_fixed5062,15833
typedef cl_object (*cl_objectfn_fixed51)cl_objectfn_fixed5163,16425
typedef cl_object (*cl_objectfn_fixed52)cl_objectfn_fixed5264,17028
typedef cl_object (*cl_objectfn_fixed53)cl_objectfn_fixed5365,17642
typedef cl_object (*cl_objectfn_fixed54)cl_objectfn_fixed5466,18267
typedef cl_object (*cl_objectfn_fixed55)cl_objectfn_fixed5567,18903
typedef cl_object (*cl_objectfn_fixed56)cl_objectfn_fixed5668,19550
typedef cl_object (*cl_objectfn_fixed57)cl_objectfn_fixed5769,20208
typedef cl_object (*cl_objectfn_fixed58)cl_objectfn_fixed5870,20877
typedef cl_object (*cl_objectfn_fixed59)cl_objectfn_fixed5971,21557
typedef cl_object (*cl_objectfn_fixed60)cl_objectfn_fixed6072,22248
typedef cl_object (*cl_objectfn_fixed61)cl_objectfn_fixed6173,22950
typedef cl_object (*cl_objectfn_fixed62)cl_objectfn_fixed6274,23663
typedef cl_object (*cl_objectfn_fixed63)cl_objectfn_fixed6375,24387
static cl_object fixed_dispatch0 77,25123
static cl_object fixed_dispatch1 84,25387
static cl_object fixed_dispatch2 99,25797
static cl_object fixed_dispatch3 114,26213
static cl_object fixed_dispatch4 129,26635
static cl_object fixed_dispatch5 144,27063
static cl_object fixed_dispatch6 159,27497
static cl_object fixed_dispatch7 174,27937
static cl_object fixed_dispatch8 189,28383
static cl_object fixed_dispatch9 204,28835
static cl_object fixed_dispatch10 219,29293
static cl_object fixed_dispatch11 234,29762
static cl_object fixed_dispatch12 249,30238
static cl_object fixed_dispatch13 264,30721
static cl_object fixed_dispatch14 279,31211
static cl_object fixed_dispatch15 294,31708
static cl_object fixed_dispatch16 309,32212
static cl_object fixed_dispatch17 324,32723
static cl_object fixed_dispatch18 339,33241
static cl_object fixed_dispatch19 354,33766
static cl_object fixed_dispatch20 369,34298
static cl_object fixed_dispatch21 384,34837
static cl_object fixed_dispatch22 399,35383
static cl_object fixed_dispatch23 414,35936
static cl_object fixed_dispatch24 429,36496
static cl_object fixed_dispatch25 444,37063
static cl_object fixed_dispatch26 459,37637
static cl_object fixed_dispatch27 474,38218
static cl_object fixed_dispatch28 489,38806
static cl_object fixed_dispatch29 504,39401
static cl_object fixed_dispatch30 519,40003
static cl_object fixed_dispatch31 534,40612
static cl_object fixed_dispatch32 549,41228
static cl_object fixed_dispatch33 564,41851
static cl_object fixed_dispatch34 579,42481
static cl_object fixed_dispatch35 594,43118
static cl_object fixed_dispatch36 609,43762
static cl_object fixed_dispatch37 624,44413
static cl_object fixed_dispatch38 639,45071
static cl_object fixed_dispatch39 654,45736
static cl_object fixed_dispatch40 669,46408
static cl_object fixed_dispatch41 684,47087
static cl_object fixed_dispatch42 699,47773
static cl_object fixed_dispatch43 714,48466
static cl_object fixed_dispatch44 729,49166
static cl_object fixed_dispatch45 744,49873
static cl_object fixed_dispatch46 759,50587
static cl_object fixed_dispatch47 774,51308
static cl_object fixed_dispatch48 789,52036
static cl_object fixed_dispatch49 804,52771
static cl_object fixed_dispatch50 819,53513
static cl_object fixed_dispatch51 834,54262
static cl_object fixed_dispatch52 849,55018
static cl_object fixed_dispatch53 864,55781
static cl_object fixed_dispatch54 879,56551
static cl_object fixed_dispatch55 894,57328
static cl_object fixed_dispatch56 909,58112
static cl_object fixed_dispatch57 924,58903
static cl_object fixed_dispatch58 939,59701
static cl_object fixed_dispatch59 954,60506
static cl_object fixed_dispatch60 969,61318
static cl_object fixed_dispatch61 984,62137
static cl_object fixed_dispatch62 999,62963
static cl_object fixed_dispatch63 1014,63796
static cl_objectfn fixed_dispatch_table[fixed_dispatch_table1030,64637
typedef cl_object (*cl_objectfn0)cl_objectfn01098,66725
typedef cl_object (*cl_objectfn1)cl_objectfn11099,66779
typedef cl_object (*cl_objectfn2)cl_objectfn21100,66844
typedef cl_object (*cl_objectfn3)cl_objectfn31101,66920
typedef cl_object (*cl_objectfn4)cl_objectfn41102,67007
typedef cl_object (*cl_objectfn5)cl_objectfn51103,67105
typedef cl_object (*cl_objectfn6)cl_objectfn61104,67214
typedef cl_object (*cl_objectfn7)cl_objectfn71105,67334
typedef cl_object (*cl_objectfn8)cl_objectfn81106,67465
typedef cl_object (*cl_objectfn9)cl_objectfn91107,67607
typedef cl_object (*cl_objectfn10)cl_objectfn101108,67760
typedef cl_object (*cl_objectfn11)cl_objectfn111109,67925
typedef cl_object (*cl_objectfn12)cl_objectfn121110,68101
typedef cl_object (*cl_objectfn13)cl_objectfn131111,68288
typedef cl_object (*cl_objectfn14)cl_objectfn141112,68486
typedef cl_object (*cl_objectfn15)cl_objectfn151113,68695
typedef cl_object (*cl_objectfn16)cl_objectfn161114,68915
typedef cl_object (*cl_objectfn17)cl_objectfn171115,69146
typedef cl_object (*cl_objectfn18)cl_objectfn181116,69388
typedef cl_object (*cl_objectfn19)cl_objectfn191117,69641
typedef cl_object (*cl_objectfn20)cl_objectfn201118,69905
typedef cl_object (*cl_objectfn21)cl_objectfn211119,70180
typedef cl_object (*cl_objectfn22)cl_objectfn221120,70466
typedef cl_object (*cl_objectfn23)cl_objectfn231121,70763
typedef cl_object (*cl_objectfn24)cl_objectfn241122,71071
typedef cl_object (*cl_objectfn25)cl_objectfn251123,71390
typedef cl_object (*cl_objectfn26)cl_objectfn261124,71720
typedef cl_object (*cl_objectfn27)cl_objectfn271125,72061
typedef cl_object (*cl_objectfn28)cl_objectfn281126,72413
typedef cl_object (*cl_objectfn29)cl_objectfn291127,72776
typedef cl_object (*cl_objectfn30)cl_objectfn301128,73150
typedef cl_object (*cl_objectfn31)cl_objectfn311129,73535
typedef cl_object (*cl_objectfn32)cl_objectfn321130,73931
typedef cl_object (*cl_objectfn33)cl_objectfn331131,74338
typedef cl_object (*cl_objectfn34)cl_objectfn341132,74756
typedef cl_object (*cl_objectfn35)cl_objectfn351133,75185
typedef cl_object (*cl_objectfn36)cl_objectfn361134,75625
typedef cl_object (*cl_objectfn37)cl_objectfn371135,76076
typedef cl_object (*cl_objectfn38)cl_objectfn381136,76538
typedef cl_object (*cl_objectfn39)cl_objectfn391137,77011
typedef cl_object (*cl_objectfn40)cl_objectfn401138,77495
typedef cl_object (*cl_objectfn41)cl_objectfn411139,77990
typedef cl_object (*cl_objectfn42)cl_objectfn421140,78496
typedef cl_object (*cl_objectfn43)cl_objectfn431141,79013
typedef cl_object (*cl_objectfn44)cl_objectfn441142,79541
typedef cl_object (*cl_objectfn45)cl_objectfn451143,80080
typedef cl_object (*cl_objectfn46)cl_objectfn461144,80630
typedef cl_object (*cl_objectfn47)cl_objectfn471145,81191
typedef cl_object (*cl_objectfn48)cl_objectfn481146,81763
typedef cl_object (*cl_objectfn49)cl_objectfn491147,82346
typedef cl_object (*cl_objectfn50)cl_objectfn501148,82940
typedef cl_object (*cl_objectfn51)cl_objectfn511149,83545
typedef cl_object (*cl_objectfn52)cl_objectfn521150,84161
typedef cl_object (*cl_objectfn53)cl_objectfn531151,84788
typedef cl_object (*cl_objectfn54)cl_objectfn541152,85426
typedef cl_object (*cl_objectfn55)cl_objectfn551153,86075
typedef cl_object (*cl_objectfn56)cl_objectfn561154,86735
typedef cl_object (*cl_objectfn57)cl_objectfn571155,87406
typedef cl_object (*cl_objectfn58)cl_objectfn581156,88088
typedef cl_object (*cl_objectfn59)cl_objectfn591157,88781
typedef cl_object (*cl_objectfn60)cl_objectfn601158,89485
typedef cl_object (*cl_objectfn61)cl_objectfn611159,90200
typedef cl_object (*cl_objectfn62)cl_objectfn621160,90926
typedef cl_object (*cl_objectfn63)cl_objectfn631161,91663
#define DEFINE_VARIADIC_DISPATCH(1163,92412
DEFINE_VARIADIC_DISPATCH(1178,93452

/home/vagrant/build_ecl/ecl-21.2.1/src/c/typespec.d,521
FEtype_error_fixnum(18,397
FEtype_error_size(23,479
FEtype_error_cons(30,687
FEtype_error_list(35,765
FEtype_error_proper_list(40,843
FEcircular_list(49,1162
FEtype_error_index(61,1547
FEtype_error_array(73,2041
FEtype_error_vector(79,2121
FEtype_error_sequence(85,2203
ecl_type_error(90,2294
ecl_type_to_symbol(101,2668
ecl_check_cl_type(196,4665
assert_type_integer(205,4844
assert_type_non_negative_integer(213,5007
assert_type_proper_list(228,5313
cl_type_of(237,5486
ecl_make_integer_type(374,9345

/home/vagrant/build_ecl/ecl-21.2.1/src/c/disassembler.d,381
static cl_opcode *base base20,462
print_noarg(23,506
print_oparg(28,579
print_arg(34,707
print_oparg_arg(40,816
#define GET_DATA(47,1005
disassemble_lambda(54,1222
disassemble_flet(87,2066
disassemble_labels(107,2573
disassemble_progv(127,3115
disassemble_tagbody(147,3458
disassemble(166,3986
si_bc_disassemble(609,17052
si_bc_split(622,17268
si_bc_join(645,17857

/home/vagrant/build_ecl/ecl-21.2.1/src/c/newhash.h,326
#define GOLDEN_RATIO 16,322
#define mix(17,363
#define extract_word(33,1068
hash_string(39,1332
#define GOLDEN_RATIO 90,2845
#define mix(91,2878
#define extract_word(104,3433
hash_string(108,3595
static cl_index hash_word(143,4645
static cl_index hash_base_string(150,4779
static cl_index hash_full_string(169,5157

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reader/parse_number.d,102
exponent_charp(17,364
expt10(25,569
infinity(42,980
make_float(73,1762
ecl_parse_number(114,2953

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reader/parse_integer.d,74
#define basep(18,402
ecl_parse_integer(21,440
  cl_object rtbl 66,1579

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/cache.d,301
#define RECORD_KEY(18,389
#define RECORD_VALUE(19,420
#define RECORD_GEN(20,453
#define RECORD_GEN_SET(21,496
empty_cache(24,567
clear_one_from_cache(41,958
clear_list_from_cache(57,1376
ecl_make_cache(75,1847
ecl_cache_remove_one(97,2607
vector_hash_key(107,2815
ecl_search_cache(133,3493

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/gfun.d,512
FEnot_funcallable_fixed(22,465
FEnot_funcallable_vararg(31,643
user_function_dispatch(37,745
reshape_instance(57,1340
clos_set_funcallable_instance_function(72,1898
si_generic_function_p(108,3366
fill_spec_vector(114,3496
frame_to_list(148,4745
frame_to_classes(159,4986
generic_compute_applicable_method(170,5243
restricted_compute_applicable_method(191,5969
compute_applicable_method(206,6427
_ecl_standard_dispatch(215,6701
generic_function_dispatch_vararg(266,8296
si_clear_gfun_hash(277,8566

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/instance.d,2814
ecl_allocate_instance(19,385
si_allocate_raw_instance(30,618
si_instance_obsolete_p(44,988
si_instance_new_stamp(56,1388
si_instance_get_stamp(63,1535
si_instance_slotds(71,1726
si_instance_sig_set(77,1805
si_instance_class(84,1983
si_instance_class_set(93,2159
ecl_instance_ref(106,2494
si_instance_ref(118,2791
clos_safe_instance_ref(136,3244
ecl_instance_set(158,3800
si_instance_set(171,4108
ecl_compare_and_swap_instance(191,4614
mp_compare_and_swap_instance(203,4988
ecl_atomic_incf_instance(221,5540
mp_atomic_incf_instance(233,5891
si_instancep(252,6440
si_unbound(258,6561
si_sl_boundp(266,6727
si_sl_makunbound(272,6820
si_copy_instance(291,7284
  hash 310,7845
ecl_slot_value(320,8089
ecl_slot_value_set(327,8253
enum ecl_built_in_classes 337,8732
  ECL_BUILTIN_T 338,8760
  ECL_BUILTIN_SEQUENCE,339,8781
  ECL_BUILTIN_LIST,340,8805
  ECL_BUILTIN_CONS,341,8825
  ECL_BUILTIN_ARRAY,342,8845
  ECL_BUILTIN_VECTOR,343,8866
  ECL_BUILTIN_STRING,344,8888
  ECL_BUILTIN_BASE_STRING,346,8929
  ECL_BUILTIN_BIT_VECTOR,348,8963
  ECL_BUILTIN_STREAM,349,8989
  ECL_BUILTIN_ANSI_STREAM,350,9011
  ECL_BUILTIN_FILE_STREAM,351,9038
  ECL_BUILTIN_ECHO_STREAM,352,9065
  ECL_BUILTIN_STRING_STREAM,353,9092
  ECL_BUILTIN_TWO_WAY_STREAM,354,9121
  ECL_BUILTIN_SYNONYM_STREAM,355,9151
  ECL_BUILTIN_BROADCAST_STREAM,356,9181
  ECL_BUILTIN_CONCATENATED_STREAM,357,9213
  ECL_BUILTIN_SEQUENCE_STREAM,358,9248
  ECL_BUILTIN_CHARACTER,359,9279
  ECL_BUILTIN_NUMBER,360,9304
  ECL_BUILTIN_REAL,361,9326
  ECL_BUILTIN_RATIONAL,362,9346
  ECL_BUILTIN_INTEGER,363,9370
  ECL_BUILTIN_FIXNUM,364,9393
  ECL_BUILTIN_BIGNUM,365,9415
  ECL_BUILTIN_RATIO,366,9437
  ECL_BUILTIN_FLOAT,367,9458
  ECL_BUILTIN_SINGLE_FLOAT,368,9479
  ECL_BUILTIN_DOUBLE_FLOAT,369,9507
  ECL_BUILTIN_LONG_FLOAT,370,9535
  ECL_BUILTIN_COMPLEX,371,9561
  ECL_BUILTIN_COMPLEX_FLOAT,373,9609
  ECL_BUILTIN_COMPLEX_SINGLE_FLOAT,374,9638
  ECL_BUILTIN_COMPLEX_DOUBLE_FLOAT,375,9674
  ECL_BUILTIN_COMPLEX_LONG_FLOAT,376,9710
  ECL_BUILTIN_SYMBOL,378,9751
  ECL_BUILTIN_NULL,379,9773
  ECL_BUILTIN_KEYWORD,380,9793
  ECL_BUILTIN_PACKAGE,381,9816
  ECL_BUILTIN_FUNCTION,382,9839
  ECL_BUILTIN_PATHNAME,383,9863
  ECL_BUILTIN_LOGICAL_PATHNAME,384,9887
  ECL_BUILTIN_HASH_TABLE,385,9919
  ECL_BUILTIN_RANDOM_STATE,386,9945
  ECL_BUILTIN_READTABLE,387,9973
  ECL_BUILTIN_CODE_BLOCK,388,9998
  ECL_BUILTIN_FOREIGN_DATA,389,10024
  ECL_BUILTIN_FRAME,390,10052
  ECL_BUILTIN_WEAK_POINTER391,10073
  ECL_BUILTIN_PROCESS,394,10123
  ECL_BUILTIN_LOCK,395,10146
  ECL_BUILTIN_RWLOCK,396,10166
  ECL_BUILTIN_CONDITION_VARIABLE,397,10188
  ECL_BUILTIN_SEMAPHORE,398,10222
  ECL_BUILTIN_BARRIER,399,10247
  ECL_BUILTIN_MAILBOX400,10270
  , ECL_BUILTIN_SSE_PACK403,10315
cl_class_of(408,10361

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/accessor.d,263
no_applicable_method(20,400
fill_spec_vector(26,560
slot_method_name(36,804
slot_method_index(51,1287
search_slot_index(71,1976
add_new_index(83,2324
ensure_up_to_date_instance(107,3072
ecl_slot_reader_dispatch(115,3244
ecl_slot_writer_dispatch(168,4770

/home/vagrant/build_ecl/ecl-21.2.1/src/c/print.d,620
_ecl_stream_or_default_output(20,426
ecl_print_base(30,646
ecl_print_level(43,1051
ecl_print_length(66,1666
ecl_print_radix(89,2295
ecl_print_case(95,2388
ecl_print_gensym(111,2854
ecl_print_array(117,2944
ecl_print_readably(123,3032
ecl_print_escape(129,3126
ecl_print_circle(135,3216
  strm 174,5111
  ecl_write_char('\n', strm)199,5626
  c 216,5989
  strm 224,6246
  strm 239,6756
  ecl_write_char('\n', strm)269,7494
cl_write_byte(301,8120
ecl_princ(319,8609
ecl_prin1(331,8943
ecl_print(343,9242
ecl_terpri(353,9431
ecl_write_string(367,9714
ecl_princ_str(377,9889
ecl_princ_char(384,10017

/home/vagrant/build_ecl/ecl-21.2.1/src/c/package.d,1618
FEpackage_error(38,1218
CEpackage_error(54,1790
member_string_eq(70,2377
#define INLINE 81,2669
#define INLINE83,2697
symbol_remove_package(87,2739
symbol_add_package(96,2909
make_package_hashtable(113,3463
alloc_package(122,3752
_ecl_package_to_be_created(139,4184
find_pending_package(154,4607
find_local_nickname_package(176,5250
process_nicknames(186,5503
process_package_list(196,5742
process_local_nicknames_list(206,5990
ecl_make_package(219,6361
ecl_rename_package(287,8739
ecl_find_package_nolock(337,10318
ecl_find_package(360,10780
si_coerce_to_package(367,10915
ecl_current_package(379,11216
_ecl_intern(395,11595
ecl_intern(403,11767
find_symbol_inner(451,13143
ecl_find_symbol(483,13868
potential_unintern_conflict(496,14242
ecl_unintern(515,14705
potential_export_conflict(562,16164
cl_export2(578,16593
cl_delete_package(626,18323
cl_unexport2(699,20736
cl_import2(737,21982
ecl_shadowing_import(777,23238
ecl_shadow(816,24505
ecl_use_package(841,25347
ecl_unuse_package(896,27140
si_select_package(922,28043
cl_find_package(930,28254
cl_package_name(936,28338
cl_package_nicknames(943,28449
cl_package_use_list(956,28770
cl_package_used_by_list(962,28877
cl_package_shadowing_symbols(968,28990
si_package_lock(975,29121
si_package_locked_p 985,29331
si_package_local_nicknames(993,29536
si_package_locally_nicknamed_by_list(1000,29670
si_add_package_local_nickname(1007,29810
si_remove_package_local_nickname(1050,31363
cl_list_all_packages(1079,32584
  sym 1087,32742
  int intern_flag;1102,33115
  x 1104,33136
si_package_hash_tables(1275,37268

/home/vagrant/build_ecl/ecl-21.2.1/src/c/array.d,1424
#define ECL_DEFINE_AET_SIZE18,419
static const cl_object ecl_aet_name[ecl_aet_name21,474
static void FEbad_aet(54,1389
out_of_bounds_error(67,1799
FEwrong_dimensions(75,2031
checked_index(84,2315
ecl_to_index(97,2734
cl_row_major_aref(112,3034
si_row_major_aset(119,3158
ecl_aref_unsafe(157,4085
ecl_aref(220,5966
ecl_aref1(233,6298
ecl_row_major_ptr(246,6619
ecl_aset_unsafe(312,8452
ecl_aset(397,10627
ecl_aset1(409,10921
si_make_pure_array(427,11390
si_make_vector(492,13868
alloc_pointerfull_memory(554,15863
ecl_array_allocself(564,16054
ecl_alloc_simple_vector(602,17039
ecl_symbol_to_elttype(647,18239
ecl_elttype_to_symbol(708,19776
si_array_element_type_byte_size(714,19857
address_inc(726,20221
cl_array_element_type(781,21298
ecl_displace(796,21800
si_array_raw_data(852,23809
ecl_array_elttype(895,25266
cl_array_rank(903,25415
ecl_array_rank(909,25504
cl_array_dimension(927,25800
ecl_array_dimension(933,25936
cl_array_total_size(956,26433
cl_adjustable_array_p(964,26621
cl_array_displacement(975,26894
cl_svref(1062,29251
si_svset(1079,29809
mp_compare_and_swap_svref(1097,30407
mp_atomic_incf_svref(1112,31026
cl_array_has_fill_pointer_p(1128,31642
cl_fill_pointer(1150,32106
si_fill_pointer_set(1166,32615
si_replace_array(1193,33509
ecl_copy_subarray(1234,34588
ecl_reverse_subarray(1268,35597
si_copy_subarray(1412,39457
si_fill_array_with_elt(1422,39746

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_co.d,364
#define ECL_INCLUDE_MATH_H22,511
  } else 35,808
  @(61,1447
cl_denominator(81,1725
cl_mod(98,2005
cl_rem(107,2211
cl_decode_float(115,2373
cl_scale_float(166,3296
cl_float_radix(193,3937
ecl_signbit(203,4177
  negativep 223,4610
cl_float_digits(247,5180
cl_float_precision(267,5609
cl_integer_decode_float(324,6828
@(385,8076
cl_imagpart(428,8919

/home/vagrant/build_ecl/ecl-21.2.1/src/c/error.d,1141
cl_symbol_or_object(28,627
_ecl_unexpected_return(36,756
ecl_internal_error(48,1213
ecl_thread_internal_error(66,1629
ecl_unrecoverable_error(88,2126
FEerror(126,3306
CEerror(142,3740
FEprogram_error(161,4262
FEcontrol_error(187,5129
FEreader_error(203,5623
FEcannot_open(237,6905
FEend_of_file(243,6991
FEclosed_stream(249,7080
si_signal_type_error(255,7177
FEwrong_type_argument(262,7325
FEwrong_type_only_arg(268,7448
FEwrong_type_nth_arg(292,8409
FEwrong_type_key_arg(317,9438
FEwrong_index(342,10450
FEunbound_variable(372,11649
FEundefined_function(378,11744
FEprint_not_readable(384,11847
FEtimeout(390,11944
FEwrong_num_arguments(400,12045
FEwrong_num_arguments_anonym(408,12223
FEinvalid_macro_call(414,12351
FEinvalid_variable(420,12447
FEillegal_variable_name(426,12528
FEassignment_to_constant(432,12633
FEbinding_a_constant(438,12759
FEinvalid_function(444,12863
FEinvalid_function_name(450,12950
static int recursive_error 460,13342
universal_error_handler(463,13392
FEdivision_by_zero(491,14381
_ecl_strerror(498,14541
FElibc_error(513,14995
FEwin32_error(531,15471
init_error(581,16822

/home/vagrant/build_ecl/ecl-21.2.1/src/c/vector_push.d,78
extend_vector(19,435
ecl_string_push_extend(45,1517
cl_vector_push(65,2134

/home/vagrant/build_ecl/ecl-21.2.1/src/c/big_ll.d,451
_ecl_big_register_free(17,331
_ecl_big_register_copy(20,381
big_normalize(28,552
_ecl_big_register_normalize(38,800
big_alloc(48,1093
_ecl_big_copy(58,1314
_ecl_big_gcd(66,1456
_ecl_big_num_t_sgn(88,1810
_ecl_big_times_big(94,1923
_ecl_big_times_fix(102,2091
_ecl_big_plus_big(110,2261
_ecl_big_plus_fix(118,2428
_ecl_fix_times_fix(126,2597
_ecl_big_ceiling(134,2754
_ecl_big_floor(145,3056
_ecl_big_negate(156,3356
init_big(164,3487

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixsys.d,395
# undef environ36,848
si_system(40,882
si_getpid(53,1192
si_getuid(64,1361
si_make_pipe(77,1671
from_list_to_execve_argument(105,2447
si_waitpid(138,3380
si_killpid(210,5260
si_close_windows_handle(218,5445
make_windows_handle(227,5615
ecl_stream_to_HANDLE(240,5963
create_descriptor(264,6561
create_descriptor(323,8575
si_run_program_inner(360,9520
si_spawn_subprocess(403,10941

/home/vagrant/build_ecl/ecl-21.2.1/src/c/interpreter.d,902
ecl_stack_set_size(25,545
FEstack_underflow(62,1759
FEstack_advance(68,1842
ecl_stack_grow(74,1949
ecl_stack_push_values(80,2067
ecl_stack_pop_values(94,2363
ecl_stack_frame_open(104,2616
ecl_stack_frame_push(122,3028
ecl_stack_frame_push_values(136,3339
ecl_stack_frame_pop_values(145,3558
ecl_stack_frame_close(159,3841
#define bind_var(182,4627
#define bind_function(183,4695
#define bind_frame(184,4752
ecl_lex_env_get_record(187,4838
#define ecl_lex_env_get_var(195,5000
#define ecl_lex_env_set_var(196,5079
#define ecl_lex_env_get_fun(197,5162
#define ecl_lex_env_get_tag(198,5227
_ecl_bytecodes_dispatch_vararg(203,5390
_ecl_bclosure_dispatch_vararg(213,5657
ecl_close_around(224,5973
#define SETUP_ENV(248,6743
#define INTERPRET_FUNCALL(258,7124
static void too_many_arguments(266,7554
odd_number_of_keywords(279,8071
unknown_keyword(287,8273
ecl_interpret(297,8596

/home/vagrant/build_ecl/ecl-21.2.1/src/c/format.d,2884
#define ECL_INCLUDE_MATH_H17,390
#define FMT_MAX_PARAM 27,607
typedef struct format_stack_struct 28,633
  cl_object     stream;29,670
  cl_object     aux_stream;30,694
  cl_object     aux_string;31,722
  cl_index      ctl_index,32,750
  cl_index      ctl_index, ctl_end;32,750
  cl_object     ctl_str;33,786
  cl_object     args,34,811
  cl_object     args, current;34,811
  jmp_buf       *jmp_buf;jmp_buf35,842
  cl_index      indents;36,868
  cl_index      spare_spaces;37,893
  cl_index      line_length;38,923
  cl_object     param[param39,952
  int           nparam;40,990
} *format_stack;format_stack41,1014
# define FMT_VALUE_UPPER_LIMIT 44,1071
# define FMT_VALUE_UPPER_LIMIT 46,1129
# define FMT_VALUE_LOWER_LIMIT 50,1215
# define FMT_VALUE_LOWER_LIMIT 52,1273
#define NONE 58,1379
#define INT 59,1397
#define CHAR 60,1415
static const char *fmt_big_numeral[fmt_big_numeral62,1434
static const char *fmt_numeral[fmt_numeral74,1613
static const char *fmt_ordinal[fmt_ordinal83,1948
get_aux_stream(96,2530
fmt_error(113,2901
tempstr(122,3175
ctl_advance(128,3272
fmt_go(136,3464
fmt_index(147,3688
fmt_back_up(163,3984
fmt_more_args_p(169,4066
fmt_args_left(175,4155
fmt_advance(181,4244
fmt_set_arg_list(192,4453
fmt_skip(199,4593
ensure_param(248,5414
fmt_not_colon(257,5592
fmt_not_atsign(264,5699
fmt_not_colon_atsign(271,5810
set_param(278,5954
set_param_positive(290,6313
fmt_copy(304,6678
fmt_copy1(310,6765
fmt_prepare_aux_stream(321,7051
fmt_ascii(330,7278
fmt_S_expression(367,8342
fmt_integer(405,9414
fmt_decimal(454,10894
fmt_binary(468,11353
fmt_octal(482,11810
fmt_hexadecimal(496,12266
fmt_write_numeral(510,12729
fmt_write_ordinal(516,12868
fmt_thousand(522,13007
fmt_nonillion(579,14291
fmt_roman(600,14864
fmt_radix(623,15480
fmt_plural(698,17850
fmt_character(716,18216
#define LOG10_2 746,19043
#define DBL_SIG 747,19067
#define FLT_SIG 748,19119
#define LDBL_SIG 754,19383
#define DBL_MAX_DIGITS 755,19437
#define DBL_EXPONENT_SIZE 756,19475
#define DBL_MANTISSA_SIZE 759,19581
#define DBL_SIZE 761,19698
#define EXP_STRING 763,19756
#define G_EXP_STRING 764,19780
#define DBL_TYPE 765,19806
#define strtod 766,19835
edit_double(770,19931
fmt_fix_float(830,21483
fmt_exponent_length(966,24617
fmt_exponent1(980,24781
fmt_exponent(989,24932
fmt_exponential_float(1001,25115
fmt_general_float(1185,29527
fmt_dollars_float(1252,31314
fmt_percent(1331,33387
fmt_ampersand(1348,33782
fmt_bar(1366,34195
fmt_tilde(1379,34476
fmt_newline(1392,34758
fmt_tabulate(1406,35160
fmt_asterisk(1442,36078
fmt_indirection(1462,36575
fmt_case(1507,37638
fmt_conditional(1576,39510
fmt_iteration(1665,41999
fmt_justification(1774,44587
fmt_up_and_out(1891,48315
fmt_semicolon(1919,49213
@(1929,49537
format(1972,50747
  int null_strm 2187,55166
  output 2222,56206

/home/vagrant/build_ecl/ecl-21.2.1/src/c/main.d,974
# define MAXPATHLEN 22,553
#   define MAXPATHLEN 26,620
#   define NO_PATH_MAX28,658
#  define MAP_FAILED 35,786
cl_env_ptr cl_env_p 52,1116
const char *ecl_self;ecl_self54,1151
#define HEAP_SIZE_DEFAULT 63,1297
#define HEAP_SIZE_DEFAULT 66,1351
static int ARGC;70,1398
static char **ARGV;ARGV71,1415
cl_fixnum ecl_option_values[ecl_option_values73,1480
static char stdin_buf[stdin_buf105,2841
static char stdout_buf[stdout_buf106,2872
ecl_get_option(110,2922
ecl_set_option(119,3113
ecl_init_bignum_registers(134,3526
ecl_clear_bignum_registers(145,3766
ecl_init_env(154,3927
_ecl_dealloc_env(202,5120
_ecl_alloc_env(223,5835
cl_shutdown(285,8044
struct cl_core_struct cl_core 362,11578
#define maybe_fix_console_stream(452,14163
maybe_fix_console_stream(455,14228
cl_boot(472,14804
si_argc(833,26171
si_argv(839,26231
si_getenv(851,26485
si_setenv(863,26824
si_environ(904,28012
si_pointer(928,28548
ecl_get_commandline_args(936,28727

/home/vagrant/build_ecl/ecl-21.2.1/src/c/multival.d,75
  the_env->nvalues nvalues22,506
  output 23,533
cl_values_list(35,731

/home/vagrant/build_ecl/ecl-21.2.1/src/c/assignment.d,624
static void FEconstant_assignment(19,433
cl_set(28,630
mp_compare_and_swap_symbol_value(45,1050
mp_atomic_incf_symbol_value(60,1507
ecl_setq(76,1966
unbound_setf_function_error(88,2247
make_setf_function_error(96,2467
ecl_setf_definition(103,2644
si_setf_definition(119,3129
ecl_rem_setf_definition(125,3242
  cl_object pack;145,3905
  bool mflag;146,3923
  int type;147,3937
  pack 151,4011
  mflag 159,4342
  type 160,4366
  } else 182,5057
cl_makunbound(191,5209
cl_fmakunbound(202,5495
ecl_clear_compiler_properties(225,6209
si_get_sysprop(233,6371
si_put_sysprop(248,6777
si_rem_sysprop(259,7158

/home/vagrant/build_ecl/ecl-21.2.1/src/c/arch/fpe_x86.c,64
#  define ecl_detect_fpe(26,689
#define ecl_detect_fpe(31,760

/home/vagrant/build_ecl/ecl-21.2.1/src/c/arch/fpe_none.c,32
#define ecl_detect_fpe(29,1114

/home/vagrant/build_ecl/ecl-21.2.1/src/c/list.d,2661
struct cl_test 19,442
  bool (*test_c_function)test_c_function20,459
  cl_object (*key_c_function)key_c_function21,515
  cl_env_ptr env;22,575
  cl_object key_function;23,593
  cl_objectfn key_fn;24,619
  cl_object test_function;25,641
  cl_objectfn test_fn;26,668
  cl_object item_compared;27,691
#define TEST(36,1098
#define KEY(37,1148
#define close_test(38,1196
test_compare(41,1239
test_compare_not(49,1412
test_eq(57,1589
test_eql(63,1687
test_equal(69,1791
test_equalp(75,1899
key_function(81,2014
key_identity(88,2144
setup_test(94,2218
  head 153,3956
append_into(167,4257
    cl_object other 187,4691
    tail 188,4731
ecl_append(201,4958
#define LENTH(216,5236
cl_object @fifth        LENTH(220,5414
#undef LENTH226,5612
  cl_object output;255,6145
  setup_test(&t, ECL_NIL, test, test_not, ECL_NIL)257,6167
  output 258,6219
  close_test(&t)t259,6269
cl_endp(264,6321
ecl_endp(276,6531
cl_list_length(287,6710
si_proper_list_p(307,7162
cl_nth(331,7636
ecl_nth(337,7724
cl_nthcdr(353,8063
ecl_nthcdr(359,8157
ecl_last(374,8394
  i 413,9360
cl_copy_list(420,9466
duplicate_pairs(440,9902
cl_copy_alist(449,10066
do_copy_tree(472,10561
cl_copy_tree(482,10725
cl_revappend(488,10795
ecl_nconc(520,11425
cl_nreconc(531,11571
ecl_butlast(549,11983
ecl_nbutlast(587,13051
cl_ldiff(617,13776
cl_rplaca(647,14460
cl_rplacd(656,14633
mp_compare_and_swap_car(666,14825
mp_atomic_incf_car(674,15071
mp_compare_and_swap_cdr(682,15294
mp_atomic_incf_cdr(690,15540
  cl_object output;700,15858
  setup_test(&t, old_obj, test, test_not, key)702,15880
  output 703,15928
  close_test(&t)t704,15965
subst(710,16025
  setup_test(&t, old_obj, test, test_not, key)739,16696
  tree 740,16744
  close_test(&t)t741,16780
nsubst_cons(746,16837
nsubst(767,17258
  tree 785,17781
sublis(796,17965
  tree 820,18661
nsublis(832,18863
  setup_test(&t, item, test, test_not, key)850,19304
  } end_loop_for_in;854,19422
  close_test(&t)t855,19443
ecl_member_eq(860,19488
si_memq(870,19650
ecl_memql(882,19889
ecl_member(892,20053
si_member1(903,20249
cl_tailp(919,20610
  output 934,20894
    output 938,21010
cl_cons(943,21063
cl_acons(949,21136
  k 957,21287
  d 958,21299
  } end_loop_for_in;964,21452
  setup_test(&t, item, test, test_not, key)976,21698
  a_list 977,21743
  close_test(&t)t978,21776
do_assoc(983,21835
  setup_test(&t, item, test, test_not, key)1000,22212
  } end_loop_for_in;1011,22498
  close_test(&t)t1012,22519
ecl_remove_eq(1017,22571
ecl_delete_eq(1035,22959
ecl_assq(1052,23301
ecl_assql(1067,23601
ecl_assoc(1082,23909
ecl_assqlp(1097,24219

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cmpaux.d,288
si_specialp(20,460
ecl_ifloor(26,578
ecl_imod(43,855
ecl_to_char(55,1115
ecl_to_fixnum(68,1343
ecl_to_unsigned_integer(89,1851
ecl_aref_bv(109,2302
ecl_aset_bv(116,2460
cl_throw(127,2723
cl_return_from(136,2913
cl_go(146,3193
cl_grab_rest_args(158,3500
cl_parse_key(170,3707

/home/vagrant/build_ecl/ecl-21.2.1/src/c/number.d,1914
#define ECL_INCLUDE_MATH_H19,445
#  define DO_DETECT_FPE(30,687
#  define DO_DETECT_FPE2(31,714
#  define DO_DETECT_FPE(37,908
#  define DO_DETECT_FPE2(38,952
#  define DO_DETECT_FPE(44,1152
#  define DO_DETECT_FPE2(45,1179
# define DO_DETECT_FPE(51,1275
# define DO_DETECT_FPE2(55,1490
ecl_to_fix(60,1596
ecl_to_size(68,1723
ecl_make_integer(81,1956
ecl_make_unsigned_integer(92,2205
ecl_to_bit(103,2427
ecl_to_uint8_t(110,2629
ecl_to_int8_t(121,2925
ecl_to_ushort(132,3225
ecl_to_short(147,3658
ecl_to_uint16_t(168,4241
ecl_to_int16_t(183,4672
ecl_to_uint32_t(201,5229
ecl_to_int32_t(215,5642
ecl_to_uint64_t(233,6211
ecl_to_int64_t(260,7129
ecl_make_uint64_t(287,8085
ecl_make_int64_t(301,8434
ecl_to_ulong_long(315,8835
ecl_to_long_long(320,8934
ecl_make_ulong_long(324,9023
ecl_make_long_long(328,9108
ecl_to_ulong_long(334,9260
ecl_to_long_long(338,9358
ecl_make_ulong_long(342,9447
ecl_make_long_long(346,9532
ecl_to_ulong_long(351,9629
ecl_to_long_long(384,10776
ecl_make_ulong_long(415,11852
ecl_make_long_long(429,12207
ecl_make_ratio(443,12543
ecl_deliver_fpe(472,13235
ecl_make_single_float(496,13901
ecl_make_double_float(514,14229
ecl_make_long_float(532,14559
ecl_make_complex(550,14889
cl_object si_complex_float_p(598,16627
si_complex_float(610,16815
cl_object ecl_make_csfloat(637,17784
cl_object ecl_make_cdfloat(645,17954
cl_object ecl_make_clfloat(653,18123
mantissa_and_exponent_from_ratio(663,18323
ratio_to_float(707,19920
ratio_to_double(722,20416
ratio_to_long_double(736,20910
ecl_to_float(750,21414
ecl_to_double(773,21994
ecl_to_long_double(794,22498
float _Complex ecl_to_csfloat(815,23041
double _Complex  ecl_to_cdfloat(836,23561
long double _Complex ecl_to_clfloat(855,24074
cl_rational(876,24623
_ecl_long_double_to_integer(930,25812
_ecl_double_to_integer(951,26429
_ecl_float_to_integer(963,26698
si_nan(976,26984

/home/vagrant/build_ecl/ecl-21.2.1/src/c/eval.d,124
_ecl_va_sp(20,438
ecl_apply_from_stack_frame(35,923
ecl_function_dispatch(94,2546
cl_funcall(130,3394
cl_eval(177,4885

/home/vagrant/build_ecl/ecl-21.2.1/src/c/load.d,205
si_load_binary(20,437
si_load_source(77,2277
si_load_bytecodes(127,3901
  source 208,6921
  pathname 209,6965
  pntype 210,7011
  filename 212,7050
  hooks 213,7072
    } end_loop_for_in;255,8596

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/libraries.d,717
#  undef HAVE_DLFCN_H28,989
#  undef HAVE_MACH_O_DYLD_H31,1046
#  undef HAVE_MACH_O_DYLD_H36,1136
#  define INIT_PREFIX 46,1319
#   undef bool48,1367
#  define INIT_PREFIX 53,1453
#  define INIT_PREFIX 63,1670
#define GC_call_with_alloc_lock(71,1820
ecl_make_codeblock(74,1877
copy_object_file(99,2582
set_library_error(146,4006
dlopen_wrapper(176,4780
dlclose_wrapper(206,5758
ecl_library_find_by_name(225,6165
ecl_library_find_by_handle(239,6498
ecl_library_open_inner(252,6772
ecl_library_open(284,7878
ecl_library_symbol(344,9901
ecl_library_error(416,11855
ecl_library_close(421,11930
ecl_library_close_all(448,12861
_ecl_library_init_prefix(458,13094
_ecl_library_default_entry(467,13290

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/mmap.d,102
    cl_object output, vector;79,2338
    } else 83,2513
si_mmap_array(106,3326
si_munmap(116,3448

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/cdata.d,216
#define HEADER_PREFIX 17,341
#define HEADER_PREFIX_LENGTH 18,381
  char code[code21,431
  cl_index offset,22,448
  cl_index offset, size;22,448
} cdata_header;23,473
si_get_cdata(28,556
si_add_cdata(55,1379

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/backtrace.d,163
# define ECL_UNIX_BACKTRACE19,414
#define MAX_BACKTRACE_SIZE 28,596
#define MAX_SYMBOL_LENGTH 30,663
_ecl_dump_c_backtrace(33,699
si_dump_c_backtrace(78,2232

/home/vagrant/build_ecl/ecl-21.2.1/src/c/char_ctype.d,636
ecl_graphic_char_p(19,409
ecl_alpha_char_p(25,497
ecl_upper_case_p(31,568
ecl_lower_case_p(37,639
ecl_both_case_p(43,710
ecl_alphanumericp(49,797
ecl_char_upcase(55,872
ecl_char_downcase(61,951
ucd_char_data(78,1291
ucd_value_0(85,1444
#define read_case_bytes(92,1621
ucd_char_data(102,1825
ucd_value_0(109,1978
#define read_case_bytes(114,2048
ucd_general_category(118,2115
ucd_decimal_digit(124,2224
ecl_graphic_char_p(130,2328
ecl_alpha_char_p(137,2458
ecl_upper_case_p(143,2546
ecl_lower_case_p(149,2626
ecl_both_case_p(155,2706
ecl_alphanumericp(161,2784
ecl_char_upcase(168,2907
ecl_char_downcase(179,3092

/home/vagrant/build_ecl/ecl-21.2.1/src/c/macros.d,213
search_symbol_macro(43,1489
search_macro_function(57,1861
  } else 99,3005
  done 121,3549
  do 122,3567
or_macro(136,3896
expand_and(155,4457
and_macro(165,4655
when_macro(171,4755
init_macros(180,4993

/home/vagrant/build_ecl/ecl-21.2.1/src/c/big.d,1888
#define ECL_INCLUDE_MATH_H16,393
_ecl_big_register_free(66,2591
_ecl_alloc_compact_bignum(75,2821
_ecl_big_copy(87,3147
_ecl_big_register_copy(99,3495
big_normalize(107,3646
_ecl_big_register_normalize(125,4042
static const int limbs_per_fixnum 143,4503
static const int limbs_per_fixnum 145,4548
#define ECL_BIGNUM_ABS_SIZE(149,4649
_ecl_fix_times_fix(153,4801
_ecl_big_times_big(174,5230
_ecl_big_times_fix(186,5500
_ecl_big_plus_fix(211,5953
_ecl_big_plus_big(219,6117
_ecl_big_minus_big(230,6435
_ecl_fix_minus_big(241,6788
_ecl_big_negate(252,7105
_ecl_big_divided_by_big(261,7314
_ecl_big_gcd(274,7683
_ecl_big_divided_by_fix(282,7875
_ecl_big_ceiling(290,8042
_ecl_big_floor(300,8351
_ecl_fix_divided_by_big(310,8658
mp_alloc(318,8829
mp_free(324,8908
mp_realloc(330,8990
#undef _ecl_big_set_fixnum338,9164
#undef _ecl_big_set_index339,9191
_ecl_big_set_fixnum(342,9264
_ecl_big_set_index(349,9373
_ecl_big_get_fixnum(356,9480
_ecl_big_get_index(362,9566
_ecl_big_set_fixnum(368,9690
_ecl_big_set_index(383,9984
_ecl_big_get_fixnum(395,10192
_ecl_big_get_index(403,10384
_ecl_big_fits_in_fixnum(415,10783
_ecl_big_fits_in_index(421,10886
_ecl_big_fits_in_fixnum(427,11026
_ecl_big_fits_in_index(433,11130
_ecl_big_fits_in_fixnum(439,11312
_ecl_big_fits_in_index(447,11572
fixint(457,11848
fixnnint(470,12078
_ecl_big_to_long_double(487,12487
mpz_ior_op(499,12791
mpz_xor_op(505,12921
mpz_and_op(511,13051
mpz_eqv_op(517,13181
mpz_nand_op(524,13358
mpz_nor_op(531,13536
mpz_andc1_op(538,13713
mpz_orc1_op(545,13892
mpz_andc2_op(552,14070
mpz_orc2_op(560,14245
mpz_b_clr_op(568,14420
mpz_b_set_op(574,14526
mpz_b_1_op(580,14629
mpz_b_2_op(587,14761
mpz_b_c1_op(593,14875
mpz_b_c2_op(599,14990
static _ecl_big_binary_op bignum_operations[bignum_operations604,15093
_ecl_big_boole_operator(623,15403
init_big(633,15625

/home/vagrant/build_ecl/ecl-21.2.1/src/c/serialize.d,1338
#define ECL_DEFINE_AET_SIZE15,326
struct fake_package 20,408
  _ECL_HDR;21,430
  cl_object name;22,442
struct fake_symbol 25,464
  _ECL_HDR;26,485
  cl_object name;27,497
  cl_object pack;28,515
#define ROUND_TO_WORD(31,537
#define ROUNDED_SIZE(33,664
static cl_index object_size[object_size36,752
typedef struct pool 85,2658
  cl_object data;86,2680
  cl_object hash;87,2754
  cl_object queue;88,2842
  cl_object last;89,2901
} *pool_t;pool_t90,2949
alloc(93,2977
fix_to_ptr(110,3568
enqueue(117,3694
  _ECL_HDR;138,4221
  cl_object car,139,4233
  cl_object car, cdr;139,4233
} large_cons;140,4255
typedef large_cons *large_cons_ptr;large_cons_ptr141,4269
serialize_bits(144,4322
serialize_object_ptr(152,4506
serialize_displaced_vector(164,4866
vector_self_size(183,5480
serialize_vector(192,5726
serialize_hashtable(204,6061
serialize_one(218,6626
init_pool(336,10654
close_pool(353,11306
si_serialize(361,11492
reconstruct_bits(374,11777
reconstruct_object_ptr(382,11949
reconstruct_bytecodes(390,12123
reconstruct_vector(398,12314
reconstruct_array(413,12687
reconstruct_hashtable(421,12918
duplicate_object(430,13170
reconstruct_one(441,13420
get_object(507,15185
fixup_vector(518,15418
fixup_hashtable(539,15962
fixup(552,16391
ecl_deserialize(615,18347
si_deserialize(662,19724

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_pred.d,211
#define ECL_INCLUDE_MATH_H15,368
ecl_oddp(21,483
ecl_evenp(31,677
cl_oddp(41,881
cl_evenp(47,1002
si_float_nan_p(53,1126
si_float_infinity_p(59,1220
ecl_float_nan_p(65,1319
ecl_float_infinity_p(80,1591

/home/vagrant/build_ecl/ecl-21.2.1/src/c/tcp.d,354
#define UNIX_MAX_PATH 45,863
WSADATA wsadata;48,925
int wsock_initialized 49,942
#define INIT_TCP 50,969
#define INIT_TCP59,1499
ecl_tcp_close_all(63,1529
int connect_to_server(83,1989
create_server_port(167,4274
si_open_client_stream(272,7221
si_open_server_stream(308,8269
si_open_unix_socket_stream(332,9081
si_lookup_host_entry(371,10309

/home/vagrant/build_ecl/ecl-21.2.1/src/c/sse2.d,473
#define ECL_DEFINE_AET_SIZE18,429
si_sse_pack_p(26,529
static void verify_sse_elttype(33,645
cl_elttype symbol_to_sse_elttype(58,1124
si_sse_pack_as_elt_type(65,1280
si_sse_pack_element_type(86,1721
si_sse_pack_to_vector(98,2035
si_vector_to_sse_pack(118,2500
ecl_make_int_sse_pack(143,3140
ecl_unbox_int_sse_pack(152,3316
ecl_make_float_sse_pack(162,3512
ecl_unbox_float_sse_pack(171,3688
ecl_make_double_sse_pack(181,3886
ecl_unbox_double_sse_pack(190,4065

/home/vagrant/build_ecl/ecl-21.2.1/src/c/symbols_list.h,1248
# define ECL_NAME_PPRINT(5,147
# define ECL_NAME_PPRINT(7,193
# define ECL_NAME(10,250
# define ECL_NAME(12,279
#define CLOS_ 15,323
#define EXT_ 16,346
#define SYS_ 17,367
#define MP_ 18,387
#define KEY_ 19,406
#define GRAY_ 20,423
#define FFI_ 21,446
        const char *name;name23,484
        const char *translation;translation24,510
        int narg;27,673
} cl_symbol_initializer;28,691
#define CLOS_31,749
#define EXT_32,763
#define SYS_33,776
#define MP_34,789
#define KEY_35,801
#define GRAY_36,814
#define FFI_37,828
# define IF_MP(45,1059
# define IF_MP(47,1085
# define IF_TCP(50,1130
# define IF_TCP(52,1157
# define IF_PROFILE(55,1203
# define IF_PROFILE(57,1234
# undef GRAY_60,1294
# define GRAY_ 61,1308
# define IF_EXTERNALIZABLE(64,1361
# define IF_EXTERNALIZABLE(66,1399
# define IF_SSE2(69,1457
# define IF_SSE2(71,1485
# define IF_DFFI(74,1542
# define IF_DFFI(76,1570
# define IF_COMPLEX_FLOAT(79,1627
# define IF_COMPLEX_FLOAT(81,1664
# define IF_WINDOWS(84,1732
# define IF_WINDOWS(86,1763
# define ECL_FUN(90,1811
# define ECL_VAR(91,1865
# define ECL_FUN(93,1915
# define ECL_VAR(94,1963
cl_symbols[cl_symbols102,2217
#undef ECL_FUN2445,194939
#undef ECL_VAR2446,194954

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cfun.d,437
ecl_make_cfun(21,465
ecl_make_cfun_va(44,1249
ecl_make_cclosure_va(71,2121
ecl_def_c_function(98,3027
ecl_def_c_macro(105,3213
ecl_def_c_macro_va(113,3410
ecl_def_c_function_va(121,3622
si_compiled_function_name(128,3825
cl_function_lambda_expression(150,4275
si_compiled_function_block(193,5294
si_compiled_function_file(211,5664
ecl_set_function_source_file_info(233,6262
ecl_cmp_defmacro(262,6925
ecl_cmp_defun(268,7009

/home/vagrant/build_ecl/ecl-21.2.1/src/c/time.d,561
#define ECL_INCLUDE_MATH_H26,557
static struct ecl_timeval beginning;42,871
ecl_get_internal_real_time(45,914
    FILETIME filetime;56,1208
    DWORDLONG hundred_ns;57,1231
ecl_get_internal_run_time(72,1553
    FILETIME filetime;88,1949
    DWORDLONG hundred_ns;89,1972
ecl_musleep(109,2590
    FILETIME filetime;132,3264
    DWORDLONG hundred_ns;133,3287
ecl_runtime(170,4025
cl_sleep(178,4164
timeval_to_time(201,4839
cl_get_internal_run_time(210,5124
cl_get_internal_real_time(218,5274
cl_get_universal_time(227,5490
init_unixtime(234,5618

/home/vagrant/build_ecl/ecl-21.2.1/src/c/all_symbols.d,1550
#define CL_PACKAGE 9,212
#define SI_PACKAGE 10,233
#define EXT_PACKAGE 11,254
#define GRAY_PACKAGE 12,277
#define FFI_PACKAGE 13,301
#define KEYWORD_PACKAGE 14,325
#define MP_PACKAGE 15,351
#define CLOS_PACKAGE 16,373
#define ORDINARY_SYMBOL 17,397
#define CONSTANT_SYMBOL 18,423
#define SPECIAL_SYMBOL 19,449
#define FORM_SYMBOL 20,474
#define PRIVATE 21,496
#define CL_ORDINARY 23,517
#define CL_SPECIAL 24,570
#define CL_CONSTANT 25,622
#define CL_FORM 26,675
#define SI_ORDINARY 27,742
#define SI_SPECIAL 28,795
#define SI_CONSTANT 29,847
#define EXT_ORDINARY 30,900
#define EXT_SPECIAL 31,954
#define EXT_CONSTANT 32,1007
#define EXT_FORM 33,1061
#define MP_ORDINARY 34,1129
#define MP_SPECIAL 35,1182
#define MP_CONSTANT 36,1234
#define CLOS_ORDINARY 37,1287
#define CLOS_SPECIAL 38,1342
#define KEYWORD 39,1396
#define GRAY_ORDINARY 40,1454
#define FFI_ORDINARY 41,1509
#define FFI_CONSTANT 42,1563
cl_index cl_num_symbols_in_core 46,1645
mangle_name(49,1706
  unsigned char c, *source, *dest;dest85,2519
  cl_object output;86,2554
  cl_object package;87,2574
  cl_object found 88,2595
  cl_object maxarg 89,2624
  cl_object minarg 90,2688
  bool is_symbol;91,2729
  cl_object name;92,2747
  name 94,2767
  is_symbol 95,2801
  package 159,5047
    package 172,5492
  symbol 173,5526
  l 174,5562
  source 175,5600
  output 176,5637
  } else 190,6043
  output->base_string.fillp fillp193,6071
  output->base_string.self[self199,6272
make_this_symbol(210,6551
init_all_symbols(290,9262

/home/vagrant/build_ecl/ecl-21.2.1/src/c/coverity/model.c,114
#define NULL 28,1167
typedef void* cl_object;30,1192
typedef int cl_narg;31,1217
FEwrong_type_nth_arg(34,1244

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixint.d,2690
# define __EXTENSIONS__73,3232
#define _WIN32_WINNT 79,3348
        int code;102,3782
        char *name;name103,3800
        cl_object handler;104,3820
} known_signals[known_signals105,3847
static sigset_t main_thread_sigmask;206,6033
# define handler_fn_prototype(207,6070
# define call_handler(208,6143
# define reinstall_signal(209,6208
# define copy_siginfo(210,6239
mysignal(212,6317
# define handler_fn_prototype(233,6982
# define call_handler(234,7044
# define mysignal(235,7098
# define reinstall_signal(236,7133
# define copy_siginfo(237,7176
zombie_process(241,7223
interrupts_disabled_by_C(257,7640
interrupts_disabled_by_lisp(263,7757
static void early_signal_error(269,7937
static void illegal_signal_code(278,8147
set_guard_page(291,8579
#define unblock_signal(306,9040
# undef unblock_signal308,9097
unblock_signal(310,9132
handle_signal_now(327,9576
si_handle_signal(357,10537
handle_all_queued(364,10652
handle_all_queued_interrupt_safe(372,10835
queue_signal(426,13720
pop_signal(463,15085
handle_or_queue(499,16564
handler_fn_prototype(533,17814
handler_fn_prototype(551,18491
        cl_object process;570,19207
        int signo;571,19234
} signal_thread_message;572,19253
static cl_object signal_thread_process 573,19278
static signal_thread_message signal_thread_msg;574,19328
static cl_object signal_thread_spinlock 575,19376
static int signal_thread_pipe[signal_thread_pipe576,19427
handler_fn_prototype(579,19484
asynchronous_signal_servicing_thread(608,20742
handler_fn_prototype(677,23893
handler_fn_prototype(699,24739
handler_fn_prototype(786,28058
si_check_pending_interrupts(876,31918
ecl_check_pending_interrupts(883,32026
do_catch_signal(890,32213
si_get_signal_handler(965,35172
si_set_signal_handler(975,35431
wakeup_function(1025,37098
wakeup_noop(1033,37260
do_interrupt_thread(1039,37312
ecl_interrupt_process(1091,39029
ecl_wakeup_process(1122,40438
static LPTOP_LEVEL_EXCEPTION_FILTER old_W32_exception_filter 1137,40840
_ecl_w32_exception_filter(1140,40922
W32_handle_in_new_thread(1209,44355
BOOL WINAPI W32_console_ctrl_handler(1218,44704
si_trap_fpe(1245,45484
install_asynchronous_signal_handlers(1296,47344
# define async_handler(1299,47418
#  define async_handler(1302,47523
#  define async_handler(1309,47920
#undef async_handler1341,48928
install_signal_handling_thread(1349,49109
install_synchronous_signal_handlers(1379,50309
# define DEFAULT_THREAD_INTERRUPT_SIGNAL 1406,51144
# define DEFAULT_THREAD_INTERRUPT_SIGNAL 1408,51204
install_fpe_signal_handlers(1433,52113
add_one_signal(1459,52965
create_signal_code_constants(1468,53250
init_unixint(1503,54631

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_pair.c,76
const ecl_ucd_names_pair_type ecl_ucd_names_pair[ecl_ucd_names_pair11,199

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0048.c,1204
const unsigned char ecl_ucd_page_table_48[ecl_ucd_page_table_485,126
const unsigned char ecl_ucd_page_table_49[ecl_ucd_page_table_49263,2268
const unsigned char ecl_ucd_page_table_50[ecl_ucd_page_table_50521,4444
const unsigned char ecl_ucd_page_table_51[ecl_ucd_page_table_51779,6798
const unsigned char ecl_ucd_page_table_52[ecl_ucd_page_table_521037,9152
const unsigned char ecl_ucd_page_table_53[ecl_ucd_page_table_531295,11324
const unsigned char ecl_ucd_page_table_54[ecl_ucd_page_table_541553,13474
const unsigned char ecl_ucd_page_table_55[ecl_ucd_page_table_551811,15571
const unsigned char ecl_ucd_page_table_56[ecl_ucd_page_table_562069,17732
const unsigned char ecl_ucd_page_table_57[ecl_ucd_page_table_572327,20077
const unsigned char ecl_ucd_page_table_58[ecl_ucd_page_table_582585,22525
const unsigned char ecl_ucd_page_table_59[ecl_ucd_page_table_592843,24693
const unsigned char ecl_ucd_page_table_60[ecl_ucd_page_table_603101,26879
const unsigned char ecl_ucd_page_table_61[ecl_ucd_page_table_613359,29067
const unsigned char ecl_ucd_page_table_62[ecl_ucd_page_table_623617,31344
const unsigned char ecl_ucd_page_table_63[ecl_ucd_page_table_633875,33462

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0000.c,1185
const unsigned char ecl_ucd_page_table_0[ecl_ucd_page_table_05,126
const unsigned char ecl_ucd_page_table_1[ecl_ucd_page_table_1263,2991
const unsigned char ecl_ucd_page_table_2[ecl_ucd_page_table_2521,5754
const unsigned char ecl_ucd_page_table_3[ecl_ucd_page_table_3779,8477
const unsigned char ecl_ucd_page_table_4[ecl_ucd_page_table_41037,11054
const unsigned char ecl_ucd_page_table_5[ecl_ucd_page_table_51295,13791
const unsigned char ecl_ucd_page_table_6[ecl_ucd_page_table_61553,16539
const unsigned char ecl_ucd_page_table_7[ecl_ucd_page_table_71811,19228
const unsigned char ecl_ucd_page_table_8[ecl_ucd_page_table_82069,21869
const unsigned char ecl_ucd_page_table_9[ecl_ucd_page_table_92327,24525
const unsigned char ecl_ucd_page_table_10[ecl_ucd_page_table_102585,27313
const unsigned char ecl_ucd_page_table_11[ecl_ucd_page_table_112843,29992
const unsigned char ecl_ucd_page_table_12[ecl_ucd_page_table_123101,32717
const unsigned char ecl_ucd_page_table_13[ecl_ucd_page_table_133359,35459
const unsigned char ecl_ucd_page_table_14[ecl_ucd_page_table_143617,38174
const unsigned char ecl_ucd_page_table_15[ecl_ucd_page_table_153875,40880

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0048.c,1205
const unsigned char ecl_ucd_page_table_48[ecl_ucd_page_table_485,126
const unsigned char ecl_ucd_page_table_49[ecl_ucd_page_table_49263,2780
const unsigned char ecl_ucd_page_table_50[ecl_ucd_page_table_50521,5468
const unsigned char ecl_ucd_page_table_51[ecl_ucd_page_table_51779,8334
const unsigned char ecl_ucd_page_table_52[ecl_ucd_page_table_521037,11200
const unsigned char ecl_ucd_page_table_53[ecl_ucd_page_table_531295,13884
const unsigned char ecl_ucd_page_table_54[ecl_ucd_page_table_541553,16546
const unsigned char ecl_ucd_page_table_55[ecl_ucd_page_table_551811,19155
const unsigned char ecl_ucd_page_table_56[ecl_ucd_page_table_562069,21828
const unsigned char ecl_ucd_page_table_57[ecl_ucd_page_table_572327,24685
const unsigned char ecl_ucd_page_table_58[ecl_ucd_page_table_582585,27645
const unsigned char ecl_ucd_page_table_59[ecl_ucd_page_table_592843,30325
const unsigned char ecl_ucd_page_table_60[ecl_ucd_page_table_603101,33023
const unsigned char ecl_ucd_page_table_61[ecl_ucd_page_table_613359,35723
const unsigned char ecl_ucd_page_table_62[ecl_ucd_page_table_623617,38512
const unsigned char ecl_ucd_page_table_63[ecl_ucd_page_table_633875,41142

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0032.c,1205
const unsigned char ecl_ucd_page_table_32[ecl_ucd_page_table_325,126
const unsigned char ecl_ucd_page_table_33[ecl_ucd_page_table_33263,2908
const unsigned char ecl_ucd_page_table_34[ecl_ucd_page_table_34521,5790
const unsigned char ecl_ucd_page_table_35[ecl_ucd_page_table_35779,8656
const unsigned char ecl_ucd_page_table_36[ecl_ucd_page_table_361037,11522
const unsigned char ecl_ucd_page_table_37[ecl_ucd_page_table_371295,14544
const unsigned char ecl_ucd_page_table_38[ecl_ucd_page_table_381553,17410
const unsigned char ecl_ucd_page_table_39[ecl_ucd_page_table_391811,20276
const unsigned char ecl_ucd_page_table_40[ecl_ucd_page_table_402069,23142
const unsigned char ecl_ucd_page_table_41[ecl_ucd_page_table_412327,26008
const unsigned char ecl_ucd_page_table_42[ecl_ucd_page_table_422585,28874
const unsigned char ecl_ucd_page_table_43[ecl_ucd_page_table_432843,31740
const unsigned char ecl_ucd_page_table_44[ecl_ucd_page_table_443101,34606
const unsigned char ecl_ucd_page_table_45[ecl_ucd_page_table_453359,37547
const unsigned char ecl_ucd_page_table_46[ecl_ucd_page_table_463617,40283
const unsigned char ecl_ucd_page_table_47[ecl_ucd_page_table_473875,43147

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_char.c,191
const ecl_ucd_names_char_group ecl_ucd_names_char[ecl_ucd_names_char12,219
search_pair(497,9943
fill_pair_name(514,10396
_ecl_ucd_code_to_name(536,11243
_ecl_ucd_name_to_code(550,11525

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0016.c,1205
const unsigned char ecl_ucd_page_table_16[ecl_ucd_page_table_165,126
const unsigned char ecl_ucd_page_table_17[ecl_ucd_page_table_17263,2865
const unsigned char ecl_ucd_page_table_18[ecl_ucd_page_table_18521,5544
const unsigned char ecl_ucd_page_table_19[ecl_ucd_page_table_19779,8154
const unsigned char ecl_ucd_page_table_20[ecl_ucd_page_table_201037,10782
const unsigned char ecl_ucd_page_table_21[ecl_ucd_page_table_211295,13456
const unsigned char ecl_ucd_page_table_22[ecl_ucd_page_table_221553,16067
const unsigned char ecl_ucd_page_table_23[ecl_ucd_page_table_231811,18706
const unsigned char ecl_ucd_page_table_24[ecl_ucd_page_table_242069,21405
const unsigned char ecl_ucd_page_table_25[ecl_ucd_page_table_252327,24066
const unsigned char ecl_ucd_page_table_26[ecl_ucd_page_table_262585,26774
const unsigned char ecl_ucd_page_table_27[ecl_ucd_page_table_272843,29517
const unsigned char ecl_ucd_page_table_28[ecl_ucd_page_table_283101,32201
const unsigned char ecl_ucd_page_table_29[ecl_ucd_page_table_293359,34932
const unsigned char ecl_ucd_page_table_30[ecl_ucd_page_table_303617,37377
const unsigned char ecl_ucd_page_table_31[ecl_ucd_page_table_313875,40363

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16.c,142
const unsigned char ecl_ucd_misc_table[ecl_ucd_misc_table77,3170
const unsigned char *const ecl_ucd_page_table[ecl_ucd_page_table297,9423

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0016.c,1204
const unsigned char ecl_ucd_page_table_16[ecl_ucd_page_table_165,126
const unsigned char ecl_ucd_page_table_17[ecl_ucd_page_table_17263,2353
const unsigned char ecl_ucd_page_table_18[ecl_ucd_page_table_18521,4520
const unsigned char ecl_ucd_page_table_19[ecl_ucd_page_table_19779,6618
const unsigned char ecl_ucd_page_table_20[ecl_ucd_page_table_201037,8734
const unsigned char ecl_ucd_page_table_21[ecl_ucd_page_table_211295,10896
const unsigned char ecl_ucd_page_table_22[ecl_ucd_page_table_221553,12995
const unsigned char ecl_ucd_page_table_23[ecl_ucd_page_table_231811,15122
const unsigned char ecl_ucd_page_table_24[ecl_ucd_page_table_242069,17309
const unsigned char ecl_ucd_page_table_25[ecl_ucd_page_table_252327,19458
const unsigned char ecl_ucd_page_table_26[ecl_ucd_page_table_262585,21654
const unsigned char ecl_ucd_page_table_27[ecl_ucd_page_table_272843,23885
const unsigned char ecl_ucd_page_table_28[ecl_ucd_page_table_283101,26057
const unsigned char ecl_ucd_page_table_29[ecl_ucd_page_table_293359,28276
const unsigned char ecl_ucd_page_table_30[ecl_ucd_page_table_303617,30209
const unsigned char ecl_ucd_page_table_31[ecl_ucd_page_table_313875,32683

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0064.c,1205
const unsigned char ecl_ucd_page_table_64[ecl_ucd_page_table_645,126
const unsigned char ecl_ucd_page_table_65[ecl_ucd_page_table_65263,2736
const unsigned char ecl_ucd_page_table_66[ecl_ucd_page_table_66521,5388
const unsigned char ecl_ucd_page_table_67[ecl_ucd_page_table_67779,8042
const unsigned char ecl_ucd_page_table_68[ecl_ucd_page_table_681037,10652
const unsigned char ecl_ucd_page_table_69[ecl_ucd_page_table_691295,13326
const unsigned char ecl_ucd_page_table_70[ecl_ucd_page_table_701553,16028
const unsigned char ecl_ucd_page_table_71[ecl_ucd_page_table_711811,18829
const unsigned char ecl_ucd_page_table_72[ecl_ucd_page_table_722069,21484
const unsigned char ecl_ucd_page_table_73[ecl_ucd_page_table_732327,24349
const unsigned char ecl_ucd_page_table_74[ecl_ucd_page_table_742585,27137
const unsigned char ecl_ucd_page_table_75[ecl_ucd_page_table_752843,29873
const unsigned char ecl_ucd_page_table_76[ecl_ucd_page_table_763101,32571
const unsigned char ecl_ucd_page_table_77[ecl_ucd_page_table_773359,35360
const unsigned char ecl_ucd_page_table_78[ecl_ucd_page_table_783617,38178
const unsigned char ecl_ucd_page_table_79[ecl_ucd_page_table_793875,40967

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0032.c,1204
const unsigned char ecl_ucd_page_table_32[ecl_ucd_page_table_325,126
const unsigned char ecl_ucd_page_table_33[ecl_ucd_page_table_33263,2396
const unsigned char ecl_ucd_page_table_34[ecl_ucd_page_table_34521,4766
const unsigned char ecl_ucd_page_table_35[ecl_ucd_page_table_35779,7120
const unsigned char ecl_ucd_page_table_36[ecl_ucd_page_table_361037,9474
const unsigned char ecl_ucd_page_table_37[ecl_ucd_page_table_371295,11984
const unsigned char ecl_ucd_page_table_38[ecl_ucd_page_table_381553,14338
const unsigned char ecl_ucd_page_table_39[ecl_ucd_page_table_391811,16692
const unsigned char ecl_ucd_page_table_40[ecl_ucd_page_table_402069,19046
const unsigned char ecl_ucd_page_table_41[ecl_ucd_page_table_412327,21400
const unsigned char ecl_ucd_page_table_42[ecl_ucd_page_table_422585,23754
const unsigned char ecl_ucd_page_table_43[ecl_ucd_page_table_432843,26108
const unsigned char ecl_ucd_page_table_44[ecl_ucd_page_table_443101,28462
const unsigned char ecl_ucd_page_table_45[ecl_ucd_page_table_453359,30891
const unsigned char ecl_ucd_page_table_46[ecl_ucd_page_table_463617,33115
const unsigned char ecl_ucd_page_table_47[ecl_ucd_page_table_473875,35467

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0096.c,1073
const unsigned char ecl_ucd_page_table_96[ecl_ucd_page_table_965,126
const unsigned char ecl_ucd_page_table_97[ecl_ucd_page_table_97263,2992
const unsigned char ecl_ucd_page_table_98[ecl_ucd_page_table_98521,5858
const unsigned char ecl_ucd_page_table_99[ecl_ucd_page_table_99779,8724
const unsigned char ecl_ucd_page_table_100[ecl_ucd_page_table_1001037,11590
const unsigned char ecl_ucd_page_table_101[ecl_ucd_page_table_1011295,14457
const unsigned char ecl_ucd_page_table_102[ecl_ucd_page_table_1021553,17324
const unsigned char ecl_ucd_page_table_103[ecl_ucd_page_table_1031811,20191
const unsigned char ecl_ucd_page_table_104[ecl_ucd_page_table_1042069,23058
const unsigned char ecl_ucd_page_table_105[ecl_ucd_page_table_1052327,25710
const unsigned char ecl_ucd_page_table_106[ecl_ucd_page_table_1062585,28332
const unsigned char ecl_ucd_page_table_107[ecl_ucd_page_table_1072843,31169
const unsigned char ecl_ucd_page_table_108[ecl_ucd_page_table_1083101,33939
const unsigned char ecl_ucd_page_table_109[ecl_ucd_page_table_1093359,36566

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0064.c,520
const unsigned char ecl_ucd_page_table_64[ecl_ucd_page_table_645,126
const unsigned char ecl_ucd_page_table_65[ecl_ucd_page_table_65263,2224
const unsigned char ecl_ucd_page_table_66[ecl_ucd_page_table_66521,4364
const unsigned char ecl_ucd_page_table_67[ecl_ucd_page_table_67779,6506
const unsigned char ecl_ucd_page_table_68[ecl_ucd_page_table_681037,8604
const unsigned char ecl_ucd_page_table_69[ecl_ucd_page_table_691295,10766
const unsigned char ecl_ucd_page_table_70[ecl_ucd_page_table_701553,12956

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_codes.c,78
const ecl_ucd_code_and_pair ecl_ucd_sorted_pairs[ecl_ucd_sorted_pairs11,205

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0080.c,1205
const unsigned char ecl_ucd_page_table_80[ecl_ucd_page_table_805,126
const unsigned char ecl_ucd_page_table_81[ecl_ucd_page_table_81263,2919
const unsigned char ecl_ucd_page_table_82[ecl_ucd_page_table_82521,5785
const unsigned char ecl_ucd_page_table_83[ecl_ucd_page_table_83779,8520
const unsigned char ecl_ucd_page_table_84[ecl_ucd_page_table_841037,11275
const unsigned char ecl_ucd_page_table_85[ecl_ucd_page_table_851295,14141
const unsigned char ecl_ucd_page_table_86[ecl_ucd_page_table_861553,16960
const unsigned char ecl_ucd_page_table_87[ecl_ucd_page_table_871811,19769
const unsigned char ecl_ucd_page_table_88[ecl_ucd_page_table_882069,22633
const unsigned char ecl_ucd_page_table_89[ecl_ucd_page_table_892327,25499
const unsigned char ecl_ucd_page_table_90[ecl_ucd_page_table_902585,28327
const unsigned char ecl_ucd_page_table_91[ecl_ucd_page_table_912843,31190
const unsigned char ecl_ucd_page_table_92[ecl_ucd_page_table_923101,34056
const unsigned char ecl_ucd_page_table_93[ecl_ucd_page_table_933359,36434
const unsigned char ecl_ucd_page_table_94[ecl_ucd_page_table_943617,38812
const unsigned char ecl_ucd_page_table_95[ecl_ucd_page_table_953875,41176

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names.h,520
#define ECL_UCD_NAMES_H 8,182
#define ECL_UCD_FIRST_PAIR 10,209
#define ECL_UCD_TOTAL_PAIRS 11,241
#define ECL_UCD_TOTAL_GROUPS 12,275
#define ECL_UCD_LARGEST_CHAR_NAME 13,308
#define ECL_UCD_TOTAL_NAMES 14,345
  unsigned char codes[codes17,397
} ecl_ucd_names_pair_type;18,423
  int smallest,21,468
  int smallest, largest,21,468
  int smallest, largest, pair_code;21,468
} ecl_ucd_names_char_group;22,504
  unsigned char pair[pair25,550
  unsigned char code[code26,575
} ecl_ucd_code_and_pair;27,600

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0000.c,1184
const unsigned char ecl_ucd_page_table_0[ecl_ucd_page_table_05,126
const unsigned char ecl_ucd_page_table_1[ecl_ucd_page_table_1263,2479
const unsigned char ecl_ucd_page_table_2[ecl_ucd_page_table_2521,4730
const unsigned char ecl_ucd_page_table_3[ecl_ucd_page_table_3779,6941
const unsigned char ecl_ucd_page_table_4[ecl_ucd_page_table_41037,9006
const unsigned char ecl_ucd_page_table_5[ecl_ucd_page_table_51295,11231
const unsigned char ecl_ucd_page_table_6[ecl_ucd_page_table_61553,13467
const unsigned char ecl_ucd_page_table_7[ecl_ucd_page_table_71811,15644
const unsigned char ecl_ucd_page_table_8[ecl_ucd_page_table_82069,17773
const unsigned char ecl_ucd_page_table_9[ecl_ucd_page_table_92327,19917
const unsigned char ecl_ucd_page_table_10[ecl_ucd_page_table_102585,22193
const unsigned char ecl_ucd_page_table_11[ecl_ucd_page_table_112843,24360
const unsigned char ecl_ucd_page_table_12[ecl_ucd_page_table_123101,26573
const unsigned char ecl_ucd_page_table_13[ecl_ucd_page_table_133359,28803
const unsigned char ecl_ucd_page_table_14[ecl_ucd_page_table_143617,31006
const unsigned char ecl_ucd_page_table_15[ecl_ucd_page_table_153875,33200

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_str.c,58
const char *ecl_ucd_names_word[ecl_ucd_names_word11,199

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd.c,144
const unsigned char ecl_ucd_misc_table[ecl_ucd_misc_table116,5847
const unsigned char *const ecl_ucd_page_table[ecl_ucd_page_table336,12100

/home/vagrant/build_ecl/ecl-21.2.1/src/c/character.d,771
ecl_char_code(21,441
ecl_base_char_code(29,612
cl_standard_char_p(45,897
ecl_standard_char_p(53,1073
ecl_base_char_p(59,1186
cl_graphic_char_p(65,1253
cl_alpha_char_p(72,1413
cl_upper_case_p(79,1569
cl_lower_case_p(86,1725
cl_both_case_p(93,1881
ecl_string_case(100,2029
ecl_digitp(152,3455
cl_alphanumericp(171,3872
ecl_char_eq(190,4256
  cl_object c;197,4384
Lchar_cmp(218,4843
ecl_char_cmp(234,5170
#define char_equal_code(274,6011
ecl_char_equal(277,6078
  cl_object c;284,6221
Lchar_compare(304,6677
ecl_char_compare(321,7078
cl_character(356,7693
cl_char_code(386,8325
cl_code_char(393,8465
cl_char_upcase(414,8815
cl_char_downcase(422,8997
ecl_digit_char(461,10124
cl_char_int(472,10306
cl_char_name(485,10686
cl_name_char(517,11605

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl_atomics.h,269
#define ECL_ATOMICS_H14,324
# define AO_REQUIRE_CAS18,367
# define AO_ASSUME_WINDOWS9819,391
ecl_compare_and_swap(43,1094
ecl_atomic_incf(52,1476
ecl_atomic_incf_by_fixnum(60,1735
# define AO_load(68,1991
# define AO_store(69,2015
# define AO_nop_full(70,2048

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cons.h,2316
#define ECL_CONS_H19,559
#define Null(27,641
#define CONS(28,680
#define ACONS(29,722
static ECL_INLINE cl_object _ecl_car(34,834
static ECL_INLINE cl_object _ecl_cdr(41,949
static ECL_INLINE cl_object _ecl_caar(48,1064
static ECL_INLINE cl_object _ecl_cdar(57,1228
static ECL_INLINE cl_object _ecl_cadr(66,1392
static ECL_INLINE cl_object _ecl_cddr(75,1556
static ECL_INLINE cl_object _ecl_caaar(84,1720
static ECL_INLINE cl_object _ecl_cdaar(95,1933
static ECL_INLINE cl_object _ecl_cadar(106,2146
static ECL_INLINE cl_object _ecl_cddar(117,2359
static ECL_INLINE cl_object _ecl_caadr(128,2572
static ECL_INLINE cl_object _ecl_cdadr(139,2785
static ECL_INLINE cl_object _ecl_caddr(150,2998
static ECL_INLINE cl_object _ecl_cdddr(161,3211
static ECL_INLINE cl_object _ecl_caaaar(172,3424
static ECL_INLINE cl_object _ecl_cdaaar(185,3686
static ECL_INLINE cl_object _ecl_cadaar(198,3948
static ECL_INLINE cl_object _ecl_cddaar(211,4210
static ECL_INLINE cl_object _ecl_caadar(224,4472
static ECL_INLINE cl_object _ecl_cdadar(237,4734
static ECL_INLINE cl_object _ecl_caddar(250,4996
static ECL_INLINE cl_object _ecl_cdddar(263,5258
static ECL_INLINE cl_object _ecl_caaadr(276,5520
static ECL_INLINE cl_object _ecl_cdaadr(289,5782
static ECL_INLINE cl_object _ecl_cadadr(302,6044
static ECL_INLINE cl_object _ecl_cddadr(315,6306
static ECL_INLINE cl_object _ecl_caaddr(328,6568
static ECL_INLINE cl_object _ecl_cdaddr(341,6830
static ECL_INLINE cl_object _ecl_cadddr(354,7092
static ECL_INLINE cl_object _ecl_cddddr(367,7354
#define CAR(444,10519
#define CDR(445,10546
#define CAAR(446,10573
#define CDAR(447,10602
#define CADR(448,10631
#define CDDR(449,10660
#define CAAAR(450,10689
#define CDAAR(451,10720
#define CADAR(452,10751
#define CDDAR(453,10782
#define CAADR(454,10813
#define CDADR(455,10844
#define CADDR(456,10875
#define CDDDR(457,10906
#define CAAAAR(458,10937
#define CDAAAR(459,10970
#define CADAAR(460,11003
#define CDDAAR(461,11036
#define CAADAR(462,11069
#define CDADAR(463,11102
#define CADDAR(464,11135
#define CDDDAR(465,11168
#define CAAADR(466,11201
#define CDAADR(467,11234
#define CADADR(468,11267
#define CDDADR(469,11300
#define CAADDR(470,11333
#define CDADDR(471,11366
#define CADDDR(472,11399
#define CDDDDR(473,11432

/home/vagrant/build_ecl/ecl-21.2.1/src/h/stack-resize.h,249
#define ECL_STACK_RESIZE_H19,555
#  define ECL_STACK_RESIZE_DISABLE_INTERRUPTS(29,958
#  define ECL_STACK_RESIZE_ENABLE_INTERRUPTS(35,1313
# define ECL_STACK_RESIZE_DISABLE_INTERRUPTS(41,1629
# define ECL_STACK_RESIZE_ENABLE_INTERRUPTS(42,1720

/home/vagrant/build_ecl/ecl-21.2.1/src/h/stacks.h,3305
#define ECL_STACKS_H21,653
#define ecl_cs_check(34,806
#define ecl_cs_check(37,922
typedef struct ecl_bds_frame 80,2962
        cl_object symbol;81,2993
        cl_object value;82,3040
} *ecl_bds_ptr;ecl_bds_ptr83,3109
#define ecl_bds_check(85,3126
#define ECL_MISSING_SPECIAL_BINDING 88,3239
# define ECL_SYM_VAL(99,3842
# define ECL_SET(100,3892
# define ECL_SETQ(101,3938
# define ECL_SYM_VAL(103,3997
# define ECL_SET(104,4045
# define ECL_SETQ(105,4091
static inline void ecl_bds_bind_inl(109,4166
static inline void ecl_bds_push_inl(147,5633
static inline void ecl_bds_unwind1_inl(178,6758
static inline cl_object ecl_bds_read_inl(191,7107
static inline cl_object *ecl_bds_ref_inl(ecl_bds_ref_inl200,7441
#  define ecl_bds_set(209,7800
#  define ecl_bds_read 210,7861
# define ecl_bds_bind 212,7909
# define ecl_bds_push 213,7948
# define ecl_bds_unwind1 214,7987
#  define ecl_bds_bind(217,8075
#  define ecl_bds_push(228,8652
#  define ecl_bds_unwind1(238,9168
typedef struct ecl_ihs_frame 250,9568
        struct ecl_ihs_frame *next;next251,9599
        cl_object function;252,9635
        cl_object lex_env;253,9663
        cl_index index;254,9690
        cl_index bds;255,9714
} *ecl_ihs_ptr;ecl_ihs_ptr256,9736
#define ecl_ihs_push(258,9753
#define ecl_ihs_pop(269,10231
typedef struct ecl_frame 298,11543
        jmp_buf         frs_jmpbuf;299,11570
        cl_object       frs_val;300,11606
        cl_index        frs_bds_top_index;301,11639
        ecl_ihs_ptr     frs_ihs;302,11682
        cl_index        frs_sp;303,11715
} *ecl_frame_ptr;ecl_frame_ptr304,11747
#define ecl_frs_push(307,11831
#define ecl_frs_pop(314,12105
#define ecl_va_start(340,13219
#define ecl_va_arg(344,13388
#define ecl_va_copy(346,13488
#define ecl_va_end(351,13645
#define ecl_nth_value(358,13771
#define ecl_nvalues(359,13819
#define ecl_return0(360,13861
#define ecl_return1(362,13949
#define ecl_return2(364,14035
#define ecl_return3(371,14499
#define ECL_STACK_INDEX(384,15084
#define ECL_STACK_PUSH(386,15148
#define ECL_STACK_POP_UNSAFE(395,15713
#define ECL_STACK_REF(397,15772
#define ECL_STACK_SET_INDEX(399,15824
#define ECL_STACK_POP_N(406,16213
#define ECL_STACK_POP_N_UNSAFE(413,16602
#define ECL_STACK_PUSH_N(415,16675
#define ECL_STACK_FRAME_COPY(424,17270
#define ECL_STACK_FRAME_SET(432,17757
#define ECL_STACK_FRAME_REF(433,17840
#define ECL_UNWIND_PROTECT_BEGIN(439,18008
#define ECL_UNWIND_PROTECT_EXIT 448,18369
#define ECL_UNWIND_PROTECT_END 453,18514
#define ECL_UNWIND_PROTECT_THREAD_SAFE_EXIT 458,18737
#define ECL_UNWIND_PROTECT_THREAD_SAFE_END 464,18960
#define ECL_NEW_FRAME_ID(470,19219
#define ECL_BLOCK_BEGIN(472,19283
#define ECL_BLOCK_END 478,19588
#define ECL_CATCH_BEGIN(481,19656
#define ECL_CATCH_END 486,19849
#define ECL_RESTART_CASE_BEGIN(489,19920
#define ECL_RESTART_CASE(497,20407
#define ECL_RESTART_CASE_END 501,20609
#define ECL_HANDLER_CASE_BEGIN(506,20788
#define ECL_HANDLER_CASE(514,21275
#define ECL_HANDLER_CASE_END 518,21477
# define ECL_CATCH_ALL_BEGIN(524,21678
# define ECL_CATCH_ALL_IF_CAUGHT 530,22050
# define ECL_CATCH_ALL_END 531,22092
# define ECL_CATCH_ALL_BEGIN(536,22361
# define ECL_CATCH_ALL_IF_CAUGHT 540,22556
# define ECL_CATCH_ALL_END 541,22598

/home/vagrant/build_ecl/ecl-21.2.1/src/h/external.h,11415
#define ECL_EXTERNAL_H5,148
#define _ECL_ARGS(11,212
typedef struct cl_env_struct *cl_env_ptr;cl_env_ptr17,264
struct cl_env_struct 18,306
        volatile int disable_interrupts;20,408
        cl_index nvalues;23,510
        cl_object values[values24,536
        cl_object function;27,666
        cl_object stack_frame;30,729
        cl_index stack_size;39,1042
        cl_index stack_limit_size;40,1071
        cl_object *stack;stack41,1106
        cl_object *stack_top;stack_top42,1132
        cl_object *stack_limit;stack_limit43,1162
        cl_index thread_local_bindings_size;49,1308
        cl_object *thread_local_bindings;thread_local_bindings50,1353
        cl_object bindings_array;51,1395
        cl_index bds_size;53,1436
        cl_index bds_limit_size;54,1463
        struct ecl_bds_frame *bds_org;bds_org55,1496
        struct ecl_bds_frame *bds_top;bds_top56,1535
        struct ecl_bds_frame *bds_limit;bds_limit57,1574
        struct ecl_ihs_frame *ihs_top;ihs_top64,1810
        cl_index frs_size;71,2064
        cl_index frs_limit_size;72,2091
        struct ecl_frame *frs_org;frs_org73,2124
        struct ecl_frame *frs_top;frs_top74,2159
        struct ecl_frame *frs_limit;frs_limit75,2194
        struct ecl_frame *nlj_fr;nlj_fr76,2231
        cl_index frame_id;77,2265
        cl_index cs_size;85,2590
        cl_index cs_limit_size;86,2641
        cl_index cs_max_size;87,2710
        char *cs_org;cs_org88,2770
        char *cs_limit;cs_limit89,2823
        char *cs_barrier;cs_barrier92,3029
        cl_object string_pool;99,3388
        struct cl_compiler_env *c_env;c_env102,3455
        cl_object fmt_aux_stream;106,3560
        cl_object big_register[big_register110,3636
        cl_object own_process;112,3697
        struct ecl_interrupt_struct *interrupt_struct;interrupt_struct116,3928
        void *default_sigmask;default_sigmask117,3983
        struct ecl_cache *method_cache;method_cache123,4255
        struct ecl_cache *slot_cache;slot_cache124,4295
        cl_index ffi_args_limit;128,4394
        struct _ffi_type **ffi_types;ffi_types129,4427
        union ecl_ffi_values *ffi_values;ffi_values130,4465
        union ecl_ffi_values **ffi_values_ptrs;ffi_values_ptrs131,4507
        int trap_fpe_bits;135,4621
        cl_object packages_to_be_created;139,4790
        cl_object packages_to_be_created_p;140,4832
        void *fault_address;fault_address143,4918
        int cleanup;146,4967
struct ecl_interrupt_struct 150,4999
        cl_object pending_interrupt;151,5029
        cl_object signal_queue;152,5066
        cl_object signal_queue_spinlock;153,5098
# define cl_env 160,5217
  extern ECL_API cl_env_ptr ecl_process_env(161,5254
# define cl_env 164,5392
# define ecl_process_env(165,5420
# define ecl_process_env_unsafe(166,5456
struct cl_core_struct 174,5601
        cl_object packages;175,5625
        cl_object lisp_package;176,5653
        cl_object user_package;177,5685
        cl_object keyword_package;178,5717
        cl_object system_package;179,5752
        cl_object ext_package;180,5786
        cl_object clos_package;181,5817
        cl_object gray_package;183,5874
        cl_object mp_package;185,5914
        cl_object c_package;186,5944
        cl_object ffi_package;187,5973
        cl_object pathname_translations;189,6005
        cl_object library_pathname;190,6046
        cl_object terminal_io;192,6083
        cl_object null_stream;193,6114
        cl_object standard_input;194,6145
        cl_object standard_output;195,6179
        cl_object error_output;196,6214
        cl_object standard_readtable;197,6246
        cl_object dispatch_reader;198,6284
        cl_object default_dispatch_macro;199,6319
        cl_object char_names;201,6362
        cl_object null_string;202,6392
        cl_object plus_half;204,6424
        cl_object minus_half;205,6453
        cl_object imag_unit;206,6483
        cl_object minus_imag_unit;207,6512
        cl_object imag_two;208,6547
        cl_object singlefloat_zero;209,6575
        cl_object doublefloat_zero;210,6611
        cl_object singlefloat_minus_zero;211,6647
        cl_object doublefloat_minus_zero;212,6689
        cl_object longfloat_zero;213,6731
        cl_object longfloat_minus_zero;214,6765
        cl_object gensym_prefix;216,6806
        cl_object gentemp_prefix;217,6839
        cl_object gentemp_counter;218,6873
        cl_object Jan1st1970UT;220,6909
        cl_object system_properties;222,6942
        cl_object setf_definitions;223,6979
        cl_object processes;226,7035
        cl_object processes_spinlock;227,7064
        cl_object global_lock;228,7102
        cl_object error_lock;229,7133
        cl_object global_env_lock;230,7163
        cl_object libraries;232,7205
        size_t max_heap_size;234,7235
        cl_object bytes_consed;235,7265
        cl_object gc_counter;236,7297
        bool gc_stats;237,7327
        int path_max;238,7350
        char *safety_region;safety_region240,7389
        void *default_sigmask;default_sigmask242,7425
        cl_index default_sigmask_bytes;243,7456
        cl_index last_var_index;246,7516
        cl_object reused_indices;247,7549
        cl_object slash;249,7590
        cl_object compiler_dispatch;251,7616
        cl_object rehash_size;253,7654
        cl_object rehash_threshold;254,7685
        cl_object known_signals;256,7722
#define ecl_alloc_align(278,8591
#define ecl_alloc_atomic_align(279,8633
#define ecl_register_static_root(280,8689
#define ecl_alloc_atomic(301,10126
#define ecl_alloc_atomic_align(302,10167
#define ecl_register_static_root(303,10224
                const char *name;name312,10449
                const char *translation;translation313,10483
                void *fun;fun314,10524
                int narg;315,10551
                int type;316,10577
                cl_object value;317,10603
        } init;318,10636
        struct ecl_symbol data;319,10652
} cl_symbol_initializer;320,10684
#define ECL_SYM(324,10809
extern ECL_API void FEwrong_dimensions(361,12984
#define _ecl_big_register0(406,15509
#define _ecl_big_register1(407,15576
#define _ecl_big_register2(408,15643
#define si_apply_from_stack_frame 546,23482
#define FEparse_error 578,25246
#define cl_safe_eval(614,27836
#define funcall 620,28148
#define ecl_make_pointer(673,31369
#define ecl_to_pointer(674,31434
#define ECL_LISTEN_NO_CHAR 685,32058
#define ECL_LISTEN_AVAILABLE 686,32092
#define ECL_LISTEN_EOF 687,32126
#define GC_enabled(777,38009
#define GC_enable(778,38040
#define GC_disable(779,38078
#define GC_enabled(788,38363
#define GC_enable(789,38402
#define GC_disable(790,38434
#define cl_rest 873,42975
#define cl_first 874,42998
#define cl_second 875,43022
#define cl_third 876,43048
#define cl_fourth 877,43074
#define si_cons_car 939,47195
#define si_cons_cdr 940,47222
        ECL_OPT_INCREMENTAL_GC 975,48862
        ECL_OPT_TRAP_SIGSEGV,976,48898
        ECL_OPT_TRAP_SIGFPE,977,48928
        ECL_OPT_TRAP_SIGINT,978,48957
        ECL_OPT_TRAP_SIGILL,979,48986
        ECL_OPT_TRAP_SIGBUS,980,49015
        ECL_OPT_TRAP_SIGPIPE,981,49044
        ECL_OPT_TRAP_INTERRUPT_SIGNAL,982,49074
        ECL_OPT_SIGNAL_HANDLING_THREAD,983,49113
        ECL_OPT_SIGNAL_QUEUE_SIZE,984,49153
        ECL_OPT_BOOTED,985,49188
        ECL_OPT_BIND_STACK_SIZE,986,49212
        ECL_OPT_BIND_STACK_SAFETY_AREA,987,49245
        ECL_OPT_FRAME_STACK_SIZE,988,49285
        ECL_OPT_FRAME_STACK_SAFETY_AREA,989,49319
        ECL_OPT_LISP_STACK_SIZE,990,49360
        ECL_OPT_LISP_STACK_SAFETY_AREA,991,49393
        ECL_OPT_C_STACK_SIZE,992,49433
        ECL_OPT_C_STACK_SAFETY_AREA,993,49463
        ECL_OPT_HEAP_SIZE,994,49500
        ECL_OPT_HEAP_SAFETY_AREA,995,49527
        ECL_OPT_THREAD_INTERRUPT_SIGNAL,996,49561
        ECL_OPT_SET_GMP_MEMORY_FUNCTIONS,997,49602
        ECL_OPT_USE_SETMODE_ON_FILES,998,49644
        ECL_OPT_LIMIT999,49682
} ecl_option;1000,49704
#define ecl_make_uint8_t(1062,52326
#define ecl_make_int8_t(1063,52373
# define ecl_make_uint16_t(1070,52643
# define ecl_make_int16_t(1071,52692
#define ecl_make_short(1075,52872
#define ecl_make_ushort(1076,52917
#  define ecl_to_uint32_t 1079,53010
#  define ecl_to_int32_t 1080,53045
#  define ecl_make_uint32_t 1081,53077
#  define ecl_make_int32_t 1082,53131
#  define ecl_make_uint32_t(1084,53182
#  define ecl_make_int32_t(1085,53232
#  define ecl_to_uint64_t 1092,53476
#  define ecl_to_int64_t 1093,53511
#  define ecl_make_uint64_t 1094,53543
#  define ecl_make_int64_t 1095,53597
# define ecl_to_uint 1104,53937
# define ecl_to_int 1105,53974
# define ecl_make_uint 1106,54009
# define ecl_make_int 1107,54050
#   define ecl_to_uint 1110,54120
#   define ecl_to_int 1111,54159
#   define ecl_make_uint 1112,54196
#   define ecl_make_int 1113,54239
# define ecl_to_ulong 1119,54395
# define ecl_to_long 1120,54433
# define ecl_make_ulong 1121,54469
# define ecl_make_long 1122,54511
#  define ecl_to_ulong 1125,54582
#  define ecl_to_long 1126,54621
#  define ecl_make_ulong 1127,54658
#  define ecl_make_long 1128,54701
#define cl_rationalize 1145,55447
#define ecl_lowereq(1211,58819
#define ecl_greatereq(1212,58925
#define ecl_lower(1213,59033
#define ecl_greater(1214,59136
#define ecl_lowereq(1216,59247
#define ecl_greatereq(1217,59307
#define ecl_lower(1218,59369
#define ecl_greater(1219,59426
#define ECL_BOOLCLR 1224,59510
#define ECL_BOOLAND 1225,59544
#define ECL_BOOLANDC2 1226,59579
#define ECL_BOOL1 1227,59614
#define ECL_BOOLANDC1 1228,59649
#define ECL_BOOL2 1229,59684
#define ECL_BOOLXOR 1230,59719
#define ECL_BOOLIOR 1231,59754
#define ECL_BOOLNOR 1232,59789
#define ECL_BOOLEQV 1233,59825
#define ECL_BOOLC2 1234,59861
#define ECL_BOOLORC2 1235,59897
#define ECL_BOOLC1 1236,59933
#define ECL_BOOLORC1 1237,59969
#define ECL_BOOLNAND 1238,60005
#define ECL_BOOLSET 1239,60041
#define ECL_NAMESTRING_TRUNCATE_IF_ERROR 1411,70080
#define ECL_NAMESTRING_FORCE_BASE_STRING 1412,70123
#define cl_not 1423,70608
#define ecl_read_from_cstring(1567,79266
#define ecl_read_from_cstring_safe(1568,79358
#define ecl_unbox_int_sse_pack_unsafe(1620,81662
#define ecl_unbox_float_sse_pack_unsafe(1624,81852
#define ecl_unbox_double_sse_pack_unsafe(1628,82048
extern ECL_API void ecl_unwind(1655,83262
#define cl_schar(1661,83489
#define ecl_alloc_simple_base_string(1689,85545
extern ECL_API cl_object mp_exit_process(1773,90095
#define ecl_disable_interrupts_env(1927,98172
#define ecl_enable_interrupts_env(1928,98242
#define ecl_disable_interrupts_env(1930,98317
#define ecl_enable_interrupts_env(1931,98387
#define ecl_clear_interrupts_env(1933,98507
#define ecl_clear_interrupts(1934,98598
#define ecl_disable_interrupts(1935,98659
#define ecl_enable_interrupts(1936,98728
#define ECL_PSEUDO_ATOMIC_ENV(1937,98795
#define ECL_PSEUDO_ATOMIC(1938,98907
#define ecl_alloc_simple_extended_string(1977,100866
#define si_base_char_p 1982,101160
#define si_base_string_p 1983,101197
#define si_coerce_to_base_string 1984,101233
#define si_coerce_to_extended_string 1985,101276
#define clos_funcallable_standard_instance_access 2256,119563
#define clos_funcallable_standard_instance_set 2258,119751

/home/vagrant/build_ecl/ecl-21.2.1/src/h/object.h,27484
#define TRUE 28,730
#define FALSE 29,789
typedef int bool;32,894
typedef unsigned char byte;34,919
        t_start 41,1051
        t_list 42,1072
        t_character 45,1220
        t_fixnum 46,1278
        t_bignum 47,1333
        t_ratio,48,1355
        t_singlefloat,50,1400
        t_doublefloat,51,1423
        t_longfloat,52,1446
        t_complex,53,1467
        t_csfloat,55,1511
        t_cdfloat,56,1530
        t_clfloat,57,1549
        t_last_number 58,1568
        t_last_number 60,1609
        t_symbol,62,1651
        t_package,63,1669
        t_hashtable,64,1688
        t_array,65,1709
        t_vector,66,1726
        t_string,68,1763
        t_base_string,70,1788
        t_bitvector,71,1811
        t_stream,72,1832
        t_random,73,1850
        t_readtable,74,1868
        t_pathname,75,1889
        t_bytecodes,76,1909
        t_bclosure,77,1930
        t_cfun,78,1950
        t_cfunfixed,79,1966
        t_cclosure,80,1987
        t_instance,81,2007
        t_structure 82,2027
        t_process,84,2080
        t_lock,85,2099
        t_rwlock,86,2115
        t_condition_variable,87,2133
        t_semaphore,88,2163
        t_barrier,89,2184
        t_mailbox,90,2203
        t_codeblock,92,2229
        t_foreign,93,2250
        t_frame,94,2269
        t_weak_pointer,95,2286
        t_sse_pack,97,2326
        t_end,99,2353
        t_other,100,2368
        t_contiguous,101,2385
        FREE 102,2442
} cl_type;103,2494
typedef union cl_lispunion *cl_object;cl_object109,2561
typedef cl_object cl_return;110,2600
typedef cl_fixnum cl_narg;111,2629
typedef cl_object (*cl_objectfn)cl_objectfn112,2656
typedef cl_object (*cl_objectfn_fixed)cl_objectfn_fixed113,2709
#define OBJNULL 119,2845
#define ECL_TAG_BITS 125,2943
#define ECL_IMMEDIATE(126,2977
#define ECL_IMMEDIATE_TAG 127,3030
#define ecl_to_bool(129,3065
#define ecl_make_bool(130,3103
#define ECL_FIXNUM_TAG 133,3187
#define ECL_FIXNUMP(134,3228
#define ecl_make_fixnum(135,3291
#define ecl_fixnum_lower(136,3371
#define ecl_fixnum_greater(137,3437
#define ecl_fixnum_leq(138,3503
#define ecl_fixnum_geq(139,3570
#define ecl_fixnum_plusp(140,3637
#define ecl_fixnum_minusp(141,3718
#define ecl_fixnum(142,3784
#define ECL_CHARACTER_TAG 145,3876
#define ECL_CHARACTERP(146,3920
#define ECL_BASE_CHAR_P(148,4005
#define ECL_BASE_CHAR_CODE_P(149,4095
#define ECL_CODE_CHAR(150,4159
#define ECL_CHAR_CODE(151,4246
#define ECL_BASE_CHAR_P(153,4311
#define ECL_CODE_CHAR(154,4361
#define ECL_CHAR_CODE(155,4457
#define ECL_CHAR_CODE_RETURN 157,4532
#define ECL_CHAR_CODE_NEWLINE 158,4567
#define ECL_CHAR_CODE_LINEFEED 159,4602
#define ECL_NUMBER_TYPE_P(161,4638
#define ECL_REAL_TYPE_P(162,4708
#define ECL_ARRAYP(163,4773
#define ECL_VECTORP(164,4881
#define ECL_BIT_VECTOR_P(165,4990
#define ECL_STRINGP(167,5096
#define ECL_EXTENDED_STRING_P(169,5244
#define ECL_STRINGP(171,5333
#define ECL_EXTENDED_STRING_P(172,5422
#define ECL_BASE_STRING_P(174,5464
#define ECL_HASH_TABLE_P(175,5553
#define ECL_BIGNUMP(176,5640
#define ECL_COMPLEXP(178,5749
#define ECL_COMPLEX_SINGLE_FLOAT_P(179,5861
#define ECL_COMPLEX_DOUBLE_FLOAT_P(180,5952
#define ECL_COMPLEX_LONG_FLOAT_P(181,6043
#define ECL_COMPLEXP(183,6138
#define ECL_RANDOM_STATE_P(185,6230
#define ECL_SINGLE_FLOAT_P(186,6314
#define ECL_DOUBLE_FLOAT_P(187,6403
#define ECL_LONG_FLOAT_P(188,6492
#define ECL_PACKAGEP(189,6579
#define ECL_PATHNAMEP(190,6664
#define ECL_READTABLEP(191,6750
#define ECL_FOREIGN_DATA_P(192,6837
#define ECL_SSE_PACK_P(194,6938
#define _ECL_HDR 197,7032
#define _ECL_HDR1(198,7104
#define _ECL_HDR2(199,7172
struct ecl_singlefloat 201,7241
        _ECL_HDR;202,7266
        float SFVAL;203,7284
#define ecl_single_float(205,7337
struct ecl_doublefloat 207,7382
        _ECL_HDR;208,7407
        double DFVAL;209,7425
#define ecl_double_float(211,7478
struct ecl_long_float 213,7523
        _ECL_HDR;214,7547
        long double value;215,7565
#define ecl_long_float(217,7595
struct ecl_bignum 219,7645
        _ECL_HDR;220,7665
        mpz_t big_num;221,7683
#define ECL_BIGNUM_DIM(224,7710
#define ECL_BIGNUM_SIZE(225,7804
#define ECL_BIGNUM_LIMBS(226,7920
struct ecl_ratio 228,8025
        _ECL_HDR;229,8044
        cl_object den;230,8062
        cl_object num;231,8134
struct ecl_complex 234,8208
        _ECL_HDR;235,8229
        cl_object real;236,8247
        cl_object imag;237,8315
struct ecl_csfloat 241,8417
        _ECL_HDR;242,8438
        float _Complex value;243,8456
#define ecl_csfloat(245,8489
struct ecl_cdfloat 247,8534
        _ECL_HDR;248,8555
        double _Complex value;249,8573
#define ecl_cdfloat(251,8607
struct ecl_clfloat 253,8652
        _ECL_HDR;254,8673
        long double _Complex value;255,8691
#define ecl_clfloat(257,8730
enum ecl_stype 260,8782
        ecl_stp_ordinary 261,8834
        ecl_stp_constant 262,8864
        ecl_stp_special 263,8894
        ecl_stp_macro 264,8923
        ecl_stp_special_form 265,8950
#define ECL_NIL 268,8987
#define ECL_NIL_SYMBOL 269,9039
#define ECL_T 270,9095
#define ECL_UNBOUND 271,9155
#define ECL_PROTECT_TAG 272,9215
#define ECL_DUMMY_TAG 273,9275
#define ECL_RESTART_CLUSTERS 274,9335
#define ECL_HANDLER_CLUSTERS 275,9395
#define ECL_INTERRUPTS_ENABLED 276,9455
#define ECL_NO_TL_BINDING 277,9515
struct ecl_symbol 279,9581
        _ECL_HDR2(280,9601
        cl_object value;281,9674
        cl_object gfdef;283,9805
        cl_object plist;288,10109
        cl_object name;290,10238
        cl_object cname;291,10289
        cl_object hpack;292,10356
        cl_index binding;295,10499
#define ECL_SYM_FUN(298,10579
struct ecl_package 300,10634
        _ECL_HDR1(301,10655
        cl_object name;302,10682
        cl_object nicknames;303,10748
        cl_object local_nicknames;304,10818
        cl_object nicknamedby;305,10888
        cl_object shadowings;306,10957
        cl_object uses;307,11019
        cl_object usedby;308,11080
        cl_object internal;309,11145
        cl_object external;310,11216
        ECL_INTERNAL 318,11393
        ECL_EXTERNAL,319,11419
        ECL_INHERITED320,11441
#define ECL_LISTP(343,12235
#define ECL_CONSP(344,12288
#define ECL_ATOM(345,12335
#define ECL_SYMBOLP(346,12382
#define ECL_PTR_CONS(348,12472
#define ECL_CONS_PTR(349,12529
#define ECL_CONS_CAR(350,12597
#define ECL_CONS_CDR(351,12659
#define ECL_RPLACA(352,12741
#define ECL_RPLACD(353,12787
struct ecl_cons 355,12834
        cl_object car;356,12852
        cl_object cdr;357,12896
#define ECL_LISTP(360,12949
#define ECL_CONSP(361,13024
#define ECL_ATOM(362,13098
#define ECL_SYMBOLP(363,13165
#define ECL_CONS_CAR(365,13255
#define ECL_CONS_CDR(366,13295
#define ECL_RPLACA(367,13335
#define ECL_RPLACD(368,13381
struct ecl_cons 370,13428
        _ECL_HDR;371,13446
        cl_object car;372,13464
        cl_object cdr;373,13508
enum ecl_httest 377,13563
        ecl_htt_eq,378,13632
        ecl_htt_eql,379,13675
        ecl_htt_equal,380,13719
        ecl_htt_equalp,381,13765
        ecl_htt_pack,382,13812
        ecl_htt_generic 383,13864
enum ecl_htweak 386,13935
        ecl_htt_not_weak 387,13953
        ecl_htt_weak_key,388,13983
        ecl_htt_weak_value,389,14009
        ecl_htt_weak_key_and_value,390,14037
        ecl_htt_weak_key_or_value391,14073
struct ecl_hashtable_entry 394,14111
        cl_object key;395,14168
        cl_object value;396,14212
struct ecl_hashtable 399,14262
        _ECL_HDR2(400,14320
        struct ecl_hashtable_entry *data;data401,14350
        cl_object sync_lock;402,14426
        cl_object generic_test;403,14497
        cl_object generic_hash;404,14568
        cl_index entries;405,14642
        cl_index size;406,14700
        cl_index limit;407,14756
        cl_object rehash_size;408,14833
        cl_object threshold;409,14885
        double factor;410,14942
        cl_object (*get)get411,15008
        cl_object (*set)set412,15067
        bool (*rem)rem413,15126
        cl_object (*get_unsafe)get_unsafe416,15302
        cl_object (*set_unsafe)set_unsafe417,15368
        bool (*rem_unsafe)rem_unsafe418,15434
        ecl_aet_object,422,15547
        ecl_aet_sf,423,15603
        ecl_aet_df,424,15659
        ecl_aet_lf,425,15715
        ecl_aet_csf,427,15796
        ecl_aet_cdf,428,15856
        ecl_aet_clf,429,15916
        ecl_aet_bit,431,15981
        ecl_aet_fix,432,16037
        ecl_aet_index,433,16093
        ecl_aet_b8,435,16218
        ecl_aet_i8,436,16274
        ecl_aet_b16,438,16350
        ecl_aet_i16,439,16371
        ecl_aet_b32,442,16419
        ecl_aet_i32,443,16440
        ecl_aet_b64,446,16488
        ecl_aet_i64,447,16509
        ecl_aet_ch,450,16556
        ecl_aet_bc,452,16627
        ecl_aet_last_type 453,16691
} cl_elttype;454,16730
union ecl_array_data 456,16745
        cl_object     *t;t457,16768
        ecl_base_char *bc;bc458,16794
        ecl_character *c;c460,16840
        uint8_t       *b8;b8462,16873
        int8_t        *i8;i8463,16900
        ecl_uint16_t  *b16;b16465,16947
        ecl_int16_t   *i16;i16466,16975
        ecl_uint32_t  *b32;b32469,17030
        ecl_int32_t   *i32;i32470,17058
        ecl_uint64_t  *b64;b64473,17113
        ecl_int64_t   *i64;i64474,17141
        float         *sf;sf476,17176
        double        *df;df477,17203
        long double   *lf;lf478,17230
        float _Complex *csf;csf480,17282
        double _Complex *cdf;cdf481,17311
        long double _Complex *clf;clf482,17341
        cl_fixnum     *fix;fix484,17383
        cl_index      *index;index485,17411
        byte          *bit;bit486,17441
#define ECL_FLAG_HAS_FILL_POINTER 489,17473
#define ECL_FLAG_ADJUSTABLE 490,17509
#define ECL_ADJUSTABLE_ARRAY_P(491,17545
#define ECL_ARRAY_HAS_FILL_POINTER_P(492,17620
struct ecl_array 494,17708
        _ECL_HDR2(497,17879
        cl_object displaced;498,17967
        cl_index dim;499,18017
        cl_index *dims;dims500,18067
        union ecl_array_data self;501,18127
        byte    offset;502,18196
        byte    rank;503,18253
struct ecl_vector 506,18329
        _ECL_HDR2(509,18501
        cl_object displaced;510,18596
        cl_index dim;511,18646
        cl_index fillp;512,18696
        union ecl_array_data self;514,18831
        byte    offset;515,18896
struct ecl_base_string 518,18924
        _ECL_HDR2(521,19096
        cl_object displaced;522,19190
        cl_index dim;523,19240
        cl_index fillp;525,19344
        ecl_base_char *self;self528,19528
struct ecl_string 532,19613
        _ECL_HDR2(535,19785
        cl_object displaced;536,19879
        cl_index dim;537,19929
        cl_index fillp;538,19994
        ecl_character *self;self540,20131
#define T_STRUCTURE 544,20204
#define ECL_STRUCT_TYPE(545,20239
#define ECL_STRUCT_SLOTS(546,20287
#define ECL_STRUCT_LENGTH(547,20339
#define ECL_STRUCT_SLOT(548,20392
#define ECL_STRUCT_NAME(549,20447
enum ecl_smmode 551,20512
        ecl_smm_input,552,20564
        ecl_smm_input_file,553,20610
        ecl_smm_output,554,20656
        ecl_smm_output_file,555,20703
        ecl_smm_io,556,20750
        ecl_smm_io_file,557,20803
        ecl_smm_synonym,558,20856
        ecl_smm_broadcast,559,20904
        ecl_smm_concatenated,560,20954
        ecl_smm_two_way,561,21007
        ecl_smm_echo,562,21055
        ecl_smm_string_input,563,21100
        ecl_smm_string_output,564,21153
        ecl_smm_probe,565,21207
        ecl_smm_input_wsock,567,21305
        ecl_smm_output_wsock,568,21365
        ecl_smm_io_wsock,569,21426
        ecl_smm_io_wcon,572,21533
        ecl_smm_sequence_input,574,21603
        ecl_smm_sequence_output 575,21658
struct ecl_file_ops 578,21718
        cl_index (*write_byte8)write_byte8579,21740
        cl_index (*read_byte8)read_byte8580,21819
        void (*write_byte)write_byte582,21898
        cl_object (*read_byte)read_byte583,21955
        int (*read_char)read_char585,22004
        int (*write_char)write_char586,22046
        void (*unread_char)unread_char587,22096
        int (*peek_char)peek_char588,22148
        cl_index (*read_vector)read_vector590,22191
        cl_index (*write_vector)write_vector591,22286
        int (*listen)listen593,22383
        void (*clear_input)clear_input594,22422
        void (*clear_output)clear_output595,22467
        void (*finish_output)finish_output596,22513
        void (*force_output)force_output597,22560
        int (*input_p)input_p599,22607
        int (*output_p)output_p600,22647
        int (*interactive_p)interactive_p601,22688
        cl_object (*element_type)element_type602,22734
        cl_object (*length)length604,22786
        cl_object (*get_position)get_position605,22831
        cl_object (*set_position)set_position606,22882
        int (*column)column607,22948
        cl_object (*close)close609,22988
        ECL_STREAM_BINARY 613,23043
        ECL_STREAM_FORMAT 614,23074
        ECL_STREAM_DEFAULT_FORMAT 616,23127
        ECL_STREAM_DEFAULT_FORMAT 618,23172
        ECL_STREAM_ISO_8859_1 619,23211
        ECL_STREAM_LATIN_1 620,23246
        ECL_STREAM_UTF_8 621,23278
        ECL_STREAM_UCS_2 622,23308
        ECL_STREAM_UCS_2LE 623,23338
        ECL_STREAM_UCS_2BE 624,23376
        ECL_STREAM_UCS_4 625,23408
        ECL_STREAM_UCS_4LE 626,23438
        ECL_STREAM_UCS_4BE 627,23476
        ECL_STREAM_USER_FORMAT 628,23508
        ECL_STREAM_US_ASCII 629,23544
        ECL_STREAM_CR 631,23585
        ECL_STREAM_LF 632,23613
        ECL_STREAM_SIGNED_BYTES 633,23641
        ECL_STREAM_LITTLE_ENDIAN 634,23679
        ECL_STREAM_C_STREAM 635,23719
        ECL_STREAM_MIGHT_SEEK 636,23754
        ECL_STREAM_CLOSE_COMPONENTS 637,23791
typedef ecl_character (*cl_eformat_decoder)cl_eformat_decoder644,24071
typedef int (*cl_eformat_encoder)cl_eformat_encoder647,24281
#define ECL_ANSI_STREAM_P(649,24375
#define ECL_ANSI_STREAM_TYPE_P(651,24464
struct ecl_stream 654,24590
        _ECL_HDR2(655,24610
        struct ecl_file_ops *ops;ops657,24732
                FILE *stream;stream659,24805
                cl_fixnum descriptor;660,24866
        } file;661,24924
        cl_object object0;662,24940
        cl_object object1;663,24992
        cl_object byte_stack;664,25043
        cl_index column;665,25107
        cl_fixnum last_char;666,25159
        cl_fixnum last_code[last_code667,25219
        cl_fixnum int0;668,25296
        cl_fixnum int1;669,25345
        cl_index byte_size;670,25394
        cl_fixnum last_op;671,25465
        char *buffer;buffer672,25540
        cl_object format;673,25596
        cl_eformat_encoder encoder;674,25652
        cl_eformat_decoder decoder;675,25688
        cl_object format_table;676,25724
        int flags;677,25756
        ecl_character eof_char;678,25824
struct ecl_random 681,25860
        _ECL_HDR;682,25880
        cl_object value;683,25898
enum ecl_chattrib 686,25961
        cat_whitespace,687,26021
        cat_terminating,688,26072
        cat_non_terminating,689,26130
        cat_single_escape,690,26192
        cat_multiple_escape,691,26246
        cat_constituent 692,26302
struct ecl_readtable_entry 695,26358
        enum ecl_chattrib syntax_type;696,26423
        cl_object dispatch;697,26491
enum ecl_readtable_case 700,26566
        ecl_case_upcase,701,26592
        ecl_case_downcase,702,26617
        ecl_case_invert,703,26644
        ecl_case_preserve704,26669
struct ecl_readtable 707,26699
        _ECL_HDR1(708,26750
        enum ecl_readtable_case read_case;709,26777
        struct ecl_readtable_entry *table;table710,26843
        cl_object hash;712,26931
struct ecl_pathname 716,27020
        _ECL_HDR1(717,27042
        cl_object host;718,27100
        cl_object device;719,27145
        cl_object directory;720,27192
        cl_object name;721,27242
        cl_object type;722,27287
        cl_object version;723,27332
struct ecl_codeblock 726,27384
        _ECL_HDR2(727,27407
        void    *handle;handle729,27565
        void    *entry;entry730,27639
        cl_object *data;data731,27699
        int     data_size;732,27759
        cl_object *temp_data;temp_data733,27786
        int     temp_data_size;734,27864
        const cl_object *data_text;data_text735,27896
        cl_object next;736,27979
        cl_object name;737,28061
        cl_object links;738,28085
        cl_index cfuns_size;739,28168
        const struct ecl_cfunfixed *cfuns;cfuns740,28244
        cl_object source;741,28287
        cl_object refs;742,28375
        cl_object error;743,28457
struct ecl_bytecodes 746,28535
        _ECL_HDR;747,28558
        cl_object name;748,28576
        cl_object definition;749,28630
        cl_objectfn entry;750,28703
        cl_index code_size;752,28850
        char *code;code753,28910
        cl_object data;754,28976
        cl_object file;755,29057
        cl_object file_position;756,29126
struct ecl_bclosure 759,29195
        _ECL_HDR;760,29217
        cl_object code;761,29235
        cl_object lex;762,29259
        cl_objectfn entry;763,29282
struct ecl_cfun 766,29340
        _ECL_HDR1(767,29405
        cl_object name;768,29470
        cl_object block;769,29533
        cl_objectfn entry;770,29607
        cl_objectfn entry_variadic;779,30153
        cl_object file;781,30196
        cl_object file_position;782,30265
struct ecl_cfunfixed 785,30334
        _ECL_HDR1(786,30399
        cl_object name;787,30458
        cl_object block;788,30521
        cl_objectfn entry;789,30595
        cl_objectfn_fixed entry_fixed;791,30742
        cl_object file;792,30804
        cl_object file_position;793,30873
struct ecl_cclosure 796,30942
        _ECL_HDR1(797,31006
        cl_object env;798,31071
        cl_object block;799,31123
        cl_objectfn entry;800,31197
        cl_objectfn entry_variadic;803,31386
        cl_object file;805,31461
        cl_object file_position;806,31530
#define ECL_FFICALL_LIMIT 809,31599
enum ecl_ffi_tag 811,31630
        ECL_FFI_CHAR 812,31649
        ECL_FFI_UNSIGNED_CHAR,813,31675
        ECL_FFI_BYTE,814,31706
        ECL_FFI_UNSIGNED_BYTE,815,31728
        ECL_FFI_SHORT,816,31759
        ECL_FFI_UNSIGNED_SHORT,817,31782
        ECL_FFI_INT,818,31814
        ECL_FFI_UNSIGNED_INT,819,31835
        ECL_FFI_LONG,820,31865
        ECL_FFI_UNSIGNED_LONG,821,31887
        ECL_FFI_INT8_T,823,31937
        ECL_FFI_UINT8_T,824,31961
        ECL_FFI_INT16_T,827,32013
        ECL_FFI_UINT16_T,828,32038
        ECL_FFI_INT32_T,831,32091
        ECL_FFI_UINT32_T,832,32116
        ECL_FFI_INT64_T,835,32169
        ECL_FFI_UINT64_T,836,32194
        ECL_FFI_LONG_LONG,839,32250
        ECL_FFI_UNSIGNED_LONG_LONG,840,32277
        ECL_FFI_POINTER_VOID,842,32320
        ECL_FFI_CSTRING,843,32350
        ECL_FFI_OBJECT,844,32375
        ECL_FFI_FLOAT,845,32399
        ECL_FFI_DOUBLE,846,32422
        ECL_FFI_LONG_DOUBLE,847,32446
        ECL_FFI_CSFLOAT,849,32500
        ECL_FFI_CDFLOAT,850,32525
        ECL_FFI_CLFLOAT,851,32550
        ECL_FFI_VOID853,32582
union ecl_ffi_values 856,32607
        char c;857,32630
        unsigned char uc;858,32646
        int8_t b;859,32672
        uint8_t ub;860,32690
        int i;861,32710
        unsigned int ui;862,32725
        short s;863,32750
        unsigned short us;864,32767
        long l;865,32794
        unsigned long ul;866,32810
        ecl_int8_t i8;868,32855
        ecl_uint8_t u8;869,32878
        ecl_int16_t i16;872,32929
        ecl_uint16_t u16;873,32954
        ecl_int32_t i32;876,33007
        ecl_uint32_t u32;877,33032
        ecl_int64_t i64;880,33085
        ecl_uint64_t u64;881,33110
        ecl_long_long_t ll;884,33166
        ecl_ulong_long_t ull;885,33194
        unsigned long l2[l2886,33224
        void *pv;pv888,33260
        char *pc;pc889,33278
        cl_object o;890,33296
        float f;891,33317
        double d;892,33334
        long double lf;893,33352
        float _Complex csf;895,33401
        double _Complex cdf;896,33429
        long double _Complex clf;897,33458
struct ecl_foreign 901,33503
        _ECL_HDR;902,33565
        cl_object tag;903,33583
        cl_index size;904,33650
        char *data;data905,33721
struct ecl_stack_frame 908,33781
        _ECL_HDR;909,33806
        cl_object *stack;stack910,33824
        cl_object *base;base911,33900
        cl_index size;912,33955
        struct cl_env_struct *env;env913,34015
struct ecl_weak_pointer 916,34054
        _ECL_HDR;917,34116
        cl_object value;918,34134
struct ecl_dummy 924,34188
        _ECL_HDR;925,34207
        ECL_PROCESS_INACTIVE 930,34255
        ECL_PROCESS_BOOTING,931,34289
        ECL_PROCESS_ACTIVE,932,34318
        ECL_PROCESS_EXITING933,34346
struct ecl_process 935,34377
        _ECL_HDR;936,34398
        cl_object name;937,34416
        cl_object function;938,34440
        cl_object args;939,34468
        struct cl_env_struct *env;env940,34492
        cl_object interrupt;941,34527
        cl_object initial_bindings;942,34556
        cl_object parent;943,34592
        cl_object exit_barrier;944,34618
        cl_object exit_values;945,34650
        cl_object woken_up;946,34681
        cl_object queue_record;947,34709
        cl_object start_stop_spinlock;948,34741
        cl_index phase;949,34780
        HANDLE thread;951,34831
        pthread_t thread;953,34860
        int trap_fpe_bits;955,34893
        ECL_WAKEUP_ONE 959,34931
        ECL_WAKEUP_ALL 960,34959
        ECL_WAKEUP_RESET_FLAG 961,34987
        ECL_WAKEUP_KILL 962,35022
        ECL_WAKEUP_DELETE 963,35051
struct ecl_queue 966,35085
        _ECL_HDR;967,35104
        cl_object list;968,35122
        cl_object spinlock;969,35146
struct ecl_semaphore 972,35178
        _ECL_HDR;973,35201
        cl_object queue_list;974,35219
        cl_object queue_spinlock;975,35249
        cl_object name;976,35283
        cl_fixnum counter;977,35307
struct ecl_barrier 980,35338
        _ECL_HDR;981,35359
        cl_object queue_list;982,35377
        cl_object queue_spinlock;983,35407
        cl_object name;984,35441
        cl_fixnum count;985,35465
        cl_fixnum arrivers_count;986,35490
struct ecl_lock 989,35528
        _ECL_HDR1(990,35546
        cl_object queue_list;991,35576
        cl_object queue_spinlock;992,35606
        cl_object owner;993,35640
        cl_object name;994,35708
        cl_fixnum counter;995,35732
struct ecl_mailbox 998,35763
        _ECL_HDR;999,35784
        cl_object name;1000,35802
        cl_object data;1001,35826
        cl_object reader_semaphore;1002,35850
        cl_object writer_semaphore;1003,35886
        cl_index read_pointer;1004,35922
        cl_index write_pointer;1005,35953
        cl_index mask;1006,35985
struct ecl_rwlock 1009,36012
        _ECL_HDR;1010,36032
        cl_object name;1011,36050
        pthread_rwlock_t mutex;1013,36092
        cl_object mutex;1015,36130
struct ecl_condition_variable 1019,36166
        _ECL_HDR;1020,36198
        cl_object queue_list;1021,36216
        cl_object queue_spinlock;1022,36246
        cl_object lock;1023,36280
#define ECL_CLASS_OF(1027,36333
#define ECL_SPEC_FLAG(1028,36384
#define ECL_SPEC_OBJECT(1029,36439
#define ECL_CLASS_NAME(1030,36494
#define ECL_CLASS_SUPERIORS(1031,36551
#define ECL_CLASS_INFERIORS(1032,36608
#define ECL_CLASS_SLOTS(1033,36665
#define ECL_CLASS_CPL(1034,36722
#define ECL_INSTANCEP(1035,36779
#define ECL_NOT_FUNCALLABLE 1036,36861
#define ECL_STANDARD_DISPATCH 1037,36895
#define ECL_RESTRICTED_DISPATCH 1038,36929
#define ECL_READER_DISPATCH 1039,36963
#define ECL_WRITER_DISPATCH 1040,36997
#define ECL_USER_DISPATCH 1041,37031
struct ecl_instance 1043,37066
        _ECL_HDR1(1044,37127
        cl_index length;1045,37188
        cl_object clas;1046,37249
        cl_objectfn entry;1047,37310
        cl_object slotds;1048,37371
        cl_object *slots;slots1049,37432
        cl_index stamp;1050,37493
        cl_index class_stamp;1051,37554
union ecl_sse_data 1055,37635
        uint8_t       b8[b81058,37758
        int8_t        i8[i81059,37788
        __m128        vf;1061,37819
        __m128i       vi;1062,37845
        __m128d       vd;1063,37871
        ecl_uint16_t  b16[b161066,37918
        ecl_int16_t   i16[i161067,37948
        ecl_uint32_t  b32[b321070,38005
        ecl_int32_t   i32[i321071,38035
        ecl_uint64_t  b64[b641074,38092
        ecl_int64_t   i64[i641075,38122
        float         sf[sf1078,38160
        double        df[df1079,38189
struct ecl_sse_pack 1082,38222
        _ECL_HDR1(1083,38244
        union ecl_sse_data data;1084,38272
union cl_lispunion 1091,38355
        struct ecl_cons         cons;1093,38399
        struct ecl_bignum       big;1095,38479
        struct ecl_ratio        ratio;1096,38542
        struct ecl_singlefloat  SF;1097,38604
        struct ecl_doublefloat  DF;1098,38689
        struct ecl_long_float   longfloat;1099,38774
        struct ecl_complex      gencomplex;1100,38840
        struct ecl_csfloat      csfloat;1102,38944
        struct ecl_cdfloat      cdfloat;1103,39020
        struct ecl_clfloat      clfloat;1104,39096
        struct ecl_symbol       symbol;1106,39177
        struct ecl_package      pack;1107,39240
        struct ecl_hashtable    hash;1108,39304
        struct ecl_array        array;1109,39371
        struct ecl_vector       vector;1110,39433
        struct ecl_base_string  base_string;1111,39496
        struct ecl_string       string;1113,39583
        struct ecl_stream       stream;1115,39653
        struct ecl_random       random;1116,39716
        struct ecl_readtable    readtable;1117,39786
        struct ecl_pathname     pathname;1118,39853
        struct ecl_bytecodes    bytecodes;1119,39919
        struct ecl_bclosure     bclosure;1120,40003
        struct ecl_cfun         cfun;1121,40079
        struct ecl_cfunfixed    cfunfixed;1122,40153
        struct ecl_cclosure     cclosure;1123,40227
        struct ecl_dummy        d;1124,40300
        struct ecl_instance     instance;1125,40362
        struct ecl_process      process;1127,40450
        struct ecl_queue        queue;1128,40514
        struct ecl_lock         lock;1129,40575
        struct ecl_rwlock       rwlock;1130,40636
        struct ecl_condition_variable condition_variable;1131,40708
        struct ecl_semaphore    semaphore;1132,40792
        struct ecl_barrier      barrier;1133,40858
        struct ecl_mailbox      mailbox;1134,40922
        struct ecl_codeblock    cblock;1136,40993
        struct ecl_foreign      foreign;1137,41059
        struct ecl_stack_frame  frame;1138,41137
        struct ecl_weak_pointer weak;1139,41205
        struct ecl_sse_pack     sse;1141,41291
static inline cl_type ecl_t_of(1149,41439
#define ecl_t_of(1154,41579
        va_list args;1162,41754
        cl_object *sp;sp1163,41776
        int narg;1164,41799
} ecl_va_list[ecl_va_list1165,41817

/home/vagrant/build_ecl/ecl-21.2.1/src/h/page.h,1209
#define GC_THREADS28,686
extern struct typemanager 31,713
        const char *tm_name;tm_name32,741
        cl_index tm_size;33,770
} tm_table[tm_table34,796
#define tm_of(36,821
#define HOLEPAGE 47,1103
#define HOLEPAGE 49,1136
#define INIT_HOLEPAGE 51,1171
#define CBMINSIZE 52,1199
typedef char *cl_ptr;cl_ptr54,1270
#define ptr2int(55,1292
#define int2ptr(56,1342
#define page(57,1384
#define pagetochar(58,1451
#define round_to_page(59,1510
#define round_up(60,1579
#define available_pages(61,1622
struct freelist 69,1821
        HEADER;70,1839
        cl_object       f_link;71,1855
struct typemanager 84,2030
        cl_type         tm_type;85,2051
        cl_index        tm_size;86,2104
        cl_index        tm_nppage;87,2174
        cl_object       tm_free;88,2238
        cl_index        tm_nfree;90,2376
        cl_index        tm_nused;91,2448
        cl_index        tm_npage;92,2520
        cl_index        tm_maxpage;93,2584
        char            *tm_name;tm_name94,2656
        cl_index        tm_gccount;95,2714
#define tm_of(103,2866
struct contblock 108,2977
        cl_index cb_size;109,3049
        struct contblock *cb_link;cb_link110,3111

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl-cmp.h,691
#define ECL_CMP_H20,612
#define _WINSOCKAPI_25,733
enum ecl_locative_type 40,1264
        _ecl_object_loc 41,1289
        _ecl_fixnum_loc,42,1318
        _ecl_base_char_loc,43,1343
        _ecl_uni_char_loc,44,1371
        _ecl_float_loc,45,1398
        _ecl_double_loc,46,1422
        _ecl_long_double_loc47,1447
        , _ecl_csfloat_loc49,1501
        , _ecl_cdfloat_loc50,1528
        , _ecl_clfloat_loc51,1555
        , _ecl_int_sse_pack_loc54,1605
        , _ecl_float_sse_pack_loc55,1637
        , _ecl_double_sse_pack_loc56,1671
struct ecl_var_debug_info 60,1717
        const char *name;name61,1745
        uint8_t type;62,1771
#define _ecl_check_narg(65,1797

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_dispatch2.h,4222
#define ECL_MATH_DISPATCH2_H19,575
#define MATH_DISPATCH2_LABEL(23,654
#define MATH_DISPATCH2_BEGIN(24,726
#define MATH_DISPATCH2_END 28,982
#define CASE_CLFLOAT_FIXNUM 30,1020
#define CASE_CLFLOAT_BIGNUM 32,1095
#define CASE_CLFLOAT_RATIO 34,1170
#define CASE_CLFLOAT_SINGLE_FLOAT 36,1243
#define CASE_CLFLOAT_DOUBLE_FLOAT 38,1329
#define CASE_CLFLOAT_LONG_FLOAT 40,1415
#define CASE_CLFLOAT_COMPLEX 42,1497
#define CASE_CLFLOAT_CSFLOAT 44,1574
#define CASE_CLFLOAT_CDFLOAT 46,1651
#define CASE_CLFLOAT_CLFLOAT 48,1728
#define CASE_CDFLOAT_FIXNUM 51,1806
#define CASE_CDFLOAT_BIGNUM 53,1881
#define CASE_CDFLOAT_RATIO 55,1956
#define CASE_CDFLOAT_SINGLE_FLOAT 57,2029
#define CASE_CDFLOAT_DOUBLE_FLOAT 59,2115
#define CASE_CDFLOAT_LONG_FLOAT 61,2201
#define CASE_CDFLOAT_COMPLEX 63,2283
#define CASE_CDFLOAT_CSFLOAT 65,2360
#define CASE_CDFLOAT_CDFLOAT 67,2437
#define CASE_CDFLOAT_CLFLOAT 69,2514
#define CASE_CSFLOAT_FIXNUM 72,2592
#define CASE_CSFLOAT_BIGNUM 74,2667
#define CASE_CSFLOAT_RATIO 76,2742
#define CASE_CSFLOAT_SINGLE_FLOAT 78,2815
#define CASE_CSFLOAT_DOUBLE_FLOAT 80,2901
#define CASE_CSFLOAT_LONG_FLOAT 82,2987
#define CASE_CSFLOAT_COMPLEX 84,3069
#define CASE_CSFLOAT_CSFLOAT 86,3146
#define CASE_CSFLOAT_CDFLOAT 88,3223
#define CASE_CSFLOAT_CLFLOAT 90,3300
#define CASE_COMPLEX_FIXNUM 93,3378
#define CASE_COMPLEX_BIGNUM 95,3453
#define CASE_COMPLEX_RATIO 97,3528
#define CASE_COMPLEX_SINGLE_FLOAT 99,3601
#define CASE_COMPLEX_DOUBLE_FLOAT 101,3687
#define CASE_COMPLEX_LONG_FLOAT 103,3773
#define CASE_COMPLEX_COMPLEX 105,3855
#define CASE_COMPLEX_CSFLOAT 107,3932
#define CASE_COMPLEX_CDFLOAT 109,4009
#define CASE_COMPLEX_CLFLOAT 111,4086
#define CASE_LONG_FLOAT_FIXNUM 114,4164
#define CASE_LONG_FLOAT_BIGNUM 116,4244
#define CASE_LONG_FLOAT_RATIO 118,4324
#define CASE_LONG_FLOAT_SINGLE_FLOAT 120,4402
#define CASE_LONG_FLOAT_DOUBLE_FLOAT 122,4493
#define CASE_LONG_FLOAT_LONG_FLOAT 124,4584
#define CASE_LONG_FLOAT_COMPLEX 126,4671
#define CASE_LONG_FLOAT_CSFLOAT 128,4753
#define CASE_LONG_FLOAT_CDFLOAT 130,4854
#define CASE_LONG_FLOAT_CLFLOAT 132,4936
#define CASE_DOUBLE_FLOAT_FIXNUM 135,5019
#define CASE_DOUBLE_FLOAT_BIGNUM 137,5103
#define CASE_DOUBLE_FLOAT_RATIO 139,5187
#define CASE_DOUBLE_FLOAT_SINGLE_FLOAT 141,5269
#define CASE_DOUBLE_FLOAT_DOUBLE_FLOAT 143,5364
#define CASE_DOUBLE_FLOAT_LONG_FLOAT 145,5459
#define CASE_DOUBLE_FLOAT_COMPLEX 147,5550
#define CASE_DOUBLE_FLOAT_CSFLOAT 149,5636
#define CASE_DOUBLE_FLOAT_CDFLOAT 151,5722
#define CASE_DOUBLE_FLOAT_CLFLOAT 153,5808
#define CASE_SINGLE_FLOAT_FIXNUM 156,5895
#define CASE_SINGLE_FLOAT_BIGNUM 158,5979
#define CASE_SINGLE_FLOAT_RATIO 160,6063
#define CASE_SINGLE_FLOAT_SINGLE_FLOAT 162,6145
#define CASE_SINGLE_FLOAT_DOUBLE_FLOAT 164,6240
#define CASE_SINGLE_FLOAT_LONG_FLOAT 166,6335
#define CASE_SINGLE_FLOAT_COMPLEX 168,6426
#define CASE_SINGLE_FLOAT_CSFLOAT 170,6512
#define CASE_SINGLE_FLOAT_CDFLOAT 172,6598
#define CASE_SINGLE_FLOAT_CLFLOAT 174,6684
#define CASE_RATIO_FIXNUM 177,6771
#define CASE_RATIO_BIGNUM 179,6842
#define CASE_RATIO_RATIO 181,6913
#define CASE_RATIO_SINGLE_FLOAT 183,6982
#define CASE_RATIO_DOUBLE_FLOAT 185,7064
#define CASE_RATIO_LONG_FLOAT 187,7146
#define CASE_RATIO_COMPLEX 189,7224
#define CASE_RATIO_CSFLOAT 191,7297
#define CASE_RATIO_CDFLOAT 193,7370
#define CASE_RATIO_CLFLOAT 195,7443
#define CASE_BIGNUM_FIXNUM 198,7517
#define CASE_BIGNUM_BIGNUM 200,7590
#define CASE_BIGNUM_RATIO 202,7663
#define CASE_BIGNUM_SINGLE_FLOAT 204,7734
#define CASE_BIGNUM_DOUBLE_FLOAT 206,7818
#define CASE_BIGNUM_LONG_FLOAT 208,7902
#define CASE_BIGNUM_COMPLEX 210,7982
#define CASE_BIGNUM_CSFLOAT 212,8057
#define CASE_BIGNUM_CDFLOAT 214,8132
#define CASE_BIGNUM_CLFLOAT 216,8207
#define CASE_FIXNUM_FIXNUM 219,8283
#define CASE_FIXNUM_BIGNUM 221,8356
#define CASE_FIXNUM_RATIO 223,8429
#define CASE_FIXNUM_SINGLE_FLOAT 225,8500
#define CASE_FIXNUM_DOUBLE_FLOAT 227,8584
#define CASE_FIXNUM_LONG_FLOAT 229,8668
#define CASE_FIXNUM_COMPLEX 231,8748
#define CASE_FIXNUM_CSFLOAT 233,8823
#define CASE_FIXNUM_CDFLOAT 235,8898
#define CASE_FIXNUM_CLFLOAT 237,8973
#define CASE_UNKNOWN(240,9049

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_fenv.h,817
#define ECL_MATH_FENV_H19,563
# define _GNU_SOURCE46,1609
# define ECL_WITHOUT_FPE_BEGIN 56,1780
# define ECL_WITHOUT_FPE_END 57,1848
# define FE_INVALID 59,1918
# define FE_DIVBYZERO 60,1940
# define FE_INEXACT 61,1964
# define FE_OVERFLOW 62,1986
# define FE_UNDERFLOW 63,2009
# define ECL_WITHOUT_FPE_BEGIN64,2033
# define ECL_WITHOUT_FPE_END65,2064
# define feclearexcept(66,2093
# define FE_ALL_EXCEPT 70,2168
#  define ECL_WITH_LISP_FPE_BEGIN 75,2342
#  define ECL_WITH_LISP_FPE_BEGIN 85,2863
# define ECL_WITH_LISP_FPE_END 90,3086
# define ECL_WITH_LISP_FPE_BEGIN 93,3164
# define ECL_WITH_LISP_FPE_END 94,3202
# define ECL_USED_EXCEPTIONS 98,3364
# define ECL_MATHERR_CLEAR 99,3444
# define ECL_MATHERR_TEST 100,3500
# define ECL_MATHERR_CLEAR108,3963
# define ECL_MATHERR_TEST109,3990

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_fenv_msvc.h,585
#define ECL_MATH_FENV_MSVC_H19,585
# define HAVE_FEENABLEEXCEPT22,643
# define HAVE_FENV_H25,699
# define FE_DIVBYZERO 31,770
# define FE_OVERFLOW 32,807
# define FE_UNDERFLOW 33,842
# define FE_INVALID 34,878
# define FE_INEXACT 35,912
typedef int fenv_t;36,946
#  define MCW_EM 39,988
#  define MCW_EM 41,1020
# define fenv_t 43,1056
#define feenableexcept(46,1084
#define fedisableexcept(48,1199
#define feholdexcept(50,1314
#define fegetenv(52,1422
#define fesetenv(53,1489
#define feupdateenv(54,1558
#define feclearexcept(55,1599
#define fetestexcept(56,1638

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_dispatch.h,331
#define ECL_MATH_DISPATCH_H19,574
typedef cl_object (*math_one_arg_fn)math_one_arg_fn24,684
#define MATH_CFLOAT(27,759
#define MATH_CFLOAT(29,806
#define MATH_DEF_DISPATCH1_NE(32,844
#define MATH_DEF_DISPATCH1(57,2626
typedef int (*math_one_arg_bool_fn)math_one_arg_bool_fn72,3595
#define MATH_DEF_DISPATCH1_BOOL(73,3643

/home/vagrant/build_ecl/ecl-21.2.1/src/h/internal.h,5827
#define ECL_INTERNAL_H19,592
#define unlikely_if(29,880
#define ECL_COMPACT_OBJECT_EXTRA(61,1705
#undef ECL_DEFINE_AET_SIZE71,2037
static const cl_index ecl_aet_size[ecl_aet_size72,2064
struct cl_compiler_env 110,3228
        cl_object variables;111,3253
        cl_object macros;112,3341
        cl_fixnum lexical_level;113,3416
        cl_object constants;114,3482
        cl_object load_time_forms;115,3552
        cl_object ltf_being_created;116,3632
        cl_object ltf_defer_init_until;117,3711
        cl_object ltf_locations;120,3926
        cl_object lex_env;122,4071
        cl_object code_walker;123,4144
        cl_index env_depth;124,4216
        cl_index env_size;125,4244
        int mode;126,4271
        bool stepping;127,4289
typedef struct cl_compiler_env *cl_compiler_env_ptr;cl_compiler_env_ptr130,4316
#define ECL_UCS_NONCHARACTER(135,4408
#define ECL_UCS_PRIVATE(138,4556
#define ECL_UCS_HIGH_SURROGATE(142,4727
#define ECL_UCS_LOW_SURROGATE(143,4794
extern void _ecl_unexpected_return(148,4883
#define _ecl_funcall5(156,5103
#define _ecl_funcall4(158,5220
#define _ecl_funcall3(160,5330
#define _ecl_funcall2(162,5433
#define _ecl_funcall1(164,5529
#define ECL_BUILD_STACK_FRAME(172,5812
#define ECL_STACK_FRAME_FROM_VA_LIST(176,5976
#define ECL_STACK_FRAME_VARARGS_BEGIN(185,6516
#define ECL_STACK_FRAME_VARARGS_END(206,8006
#define OPEN_R 230,8778
#define OPEN_W 231,8799
#define OPEN_RW 232,8820
#define OPEN_A 233,8842
#define OPEN_RA 234,8863
#define O_NONBLOCK 238,8957
#define ECL_FILE_STREAM_P(241,8986
#define STRING_OUTPUT_STRING(243,9095
#define STRING_INPUT_STRING(244,9153
#define STRING_INPUT_POSITION(245,9210
#define STRING_INPUT_LIMIT(246,9266
#define TWO_WAY_STREAM_INPUT(247,9319
#define TWO_WAY_STREAM_OUTPUT(248,9377
#define SYNONYM_STREAM_SYMBOL(249,9436
#define SYNONYM_STREAM_STREAM(250,9495
#define BROADCAST_STREAM_LIST(251,9572
#define ECHO_STREAM_INPUT(252,9631
#define ECHO_STREAM_OUTPUT(253,9686
#define CONCATENATED_STREAM_LIST(254,9742
#define IO_STREAM_FILE(255,9804
#define IO_STREAM_ELT_TYPE(256,9862
#define IO_STREAM_FILENAME(257,9918
#define IO_FILE_DESCRIPTOR(258,9974
#define IO_FILE_ELT_TYPE(259,10038
#define IO_FILE_FILENAME(260,10092
#define SEQ_OUTPUT_VECTOR(261,10146
#define SEQ_OUTPUT_POSITION(262,10201
#define SEQ_INPUT_VECTOR(263,10255
#define SEQ_INPUT_POSITION(264,10309
#define SEQ_INPUT_LIMIT(265,10362
#define ecl_off_t 268,10433
#define ecl_fseeko 269,10455
#define ecl_ftello 270,10480
#define ecl_off_t 272,10511
#define ecl_fseeko 273,10535
#define ecl_ftello 274,10561
#define GFUN_NAME(294,11053
#define GFUN_SPEC(295,11099
#define GFUN_COMB(296,11145
#define ECL_PPRINT_QUEUE_SIZE 340,13038
#define ECL_PPRINT_INDENTATION_STACK_SIZE 341,13090
# define ECL_WITH_GLOBAL_LOCK_BEGIN(348,13243
# define ECL_WITH_GLOBAL_LOCK_END 350,13367
# define ECL_WITH_LOCK_BEGIN(352,13443
# define ECL_WITH_LOCK_END 359,13847
# define ECL_WITH_SPINLOCK_BEGIN(363,14072
# define ECL_WITH_SPINLOCK_END 368,14365
# define ECL_WITH_GLOBAL_LOCK_BEGIN(373,14596
# define ECL_WITH_GLOBAL_LOCK_END374,14641
# define ECL_WITH_LOCK_BEGIN(375,14675
# define ECL_WITH_LOCK_END376,14718
# define ECL_WITH_SPINLOCK_BEGIN(377,14745
# define ECL_WITH_SPINLOCK_END378,14792
# define ECL_WITH_GLOBAL_ENV_RDLOCK_BEGIN(382,14867
# define ECL_WITH_GLOBAL_ENV_RDLOCK_END 386,15131
# define ECL_WITH_GLOBAL_ENV_WRLOCK_BEGIN(390,15367
# define ECL_WITH_GLOBAL_ENV_WRLOCK_END 394,15632
# define ECL_WITH_GLOBAL_ENV_RDLOCK_BEGIN(399,15877
# define ECL_WITH_GLOBAL_ENV_RDLOCK_END400,15928
# define ECL_WITH_GLOBAL_ENV_WRLOCK_BEGIN(401,15968
# define ECL_WITH_GLOBAL_ENV_WRLOCK_END402,16019
#define RTABSIZE 409,16146
#define RTABSIZE 411,16216
typedef struct { cl_index start,424,16568
typedef struct { cl_index start, end,424,16568
typedef struct { cl_index start, end, length;424,16568
typedef struct { cl_index start, end, length; } cl_index_pair;424,16568
#define ecl_vector_start_end 434,16862
#define CL_NEWENV_BEGIN 437,16930
#define CL_NEWENV_END 441,17071
# define RLIM_SAVED_MAX 447,17209
# define RLIM_SAVED_CUR 451,17278
struct ecl_timeval 463,17476
        cl_index tv_usec;464,17497
        cl_index tv_sec;465,17523
#define UTC_time_to_universal_time(472,17738
typedef cl_object (*mp_wait_test)mp_wait_test478,17906
#define print_lock(482,18056
#define ECL_PI_D 500,18672
#define ECL_PI_L 501,18727
#define ECL_PI2_D 502,18783
#define ECL_PI2_L 503,18839
#define ECL_WITHOUT_INTERRUPTS_BEGIN(509,19017
#define ECL_WITHOUT_INTERRUPTS_END 513,19220
#  define WCONTINUED 523,19517
#  define WIFCONTINUED(527,19571
#  undef expf538,19762
# define expf(540,19784
#  undef powf544,19853
# define powf(546,19875
#  undef logf550,19955
# define logf(552,19977
#  undef sqrtf556,20048
# define sqrtf(558,20071
#  undef sinf562,20142
# define sinf(564,20164
#  undef cosf568,20233
# define cosf(570,20255
#  undef tanf574,20324
# define tanf(576,20346
#  undef sinhf580,20417
# define sinhf(582,20440
#  undef coshf586,20513
# define coshf(588,20536
#  undef tanhf592,20609
# define tanhf(594,20632
# define ceilf(598,20692
# define floorf(601,20752
# define fabsf(604,20813
# define frexpf(607,20873
# define ldexpf(610,20939
#  undef log1pf615,21021
# define log1pf(617,21045
#  undef log1p621,21117
# define log1p(623,21140
#  undef log1pl627,21211
# define log1pl(629,21235
    uint8_t bytes 639,21392
    float inf;640,21432
} __ecl_inf 641,21447
#  define INFINITY 644,21491
#  define INFINITY 646,21533
    uint8_t bytes 653,21666
    float nan;654,21706
} __ecl_nan 655,21721
#  define NAN 658,21765
#  define NAN 660,21802
# define CMPLXF(667,21938
# define CMPLX(670,22028
# define CMPLXL(673,22121

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl.h,415
#define ECL_ECL_H20,611
#define va_copy(32,1123
# undef dlopen53,1663
# undef dlclose56,1700
#  define WIN32_LEAN_AND_MEAN 62,1793
#  undef WIN32_LEAN_AND_MEAN64,1879
   typedef HANDLE pthread_t;69,1966
   typedef HANDLE pthread_mutex_t;70,1995
   typedef HANDLE pthread_cond_t;71,2030
#  undef ERROR72,2091
#   define CreateThread 74,2125
typedef void (*ecl_init_function_t)ecl_init_function_t94,2550

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl-inl.h,2401
#define ECL_ECL_INL_H6,148
# define FLT_TRUE_MIN 21,480
# define DBL_TRUE_MIN 24,538
# define LDBL_TRUE_MIN 27,597
#define loop_for_in_no_circle(33,698
#define loop_for_in(45,1018
#define end_loop_for_in 50,1219
#define loop_for_on_no_circle(55,1309
#define loop_for_on_unsafe(70,1726
#define end_loop_for_on_unsafe(72,1816
#define loop_for_on(77,1891
#define end_loop_for_on(83,2050
#define ecl_cast_ptr(89,2191
#define ecl_cast_ptr(91,2259
#define ecl_def_string_array(94,2308
#define ecl_def_string_array_elt(100,2625
#define ecl_def_ct_base_string(106,2950
#define ecl_def_ct_single_float(113,3356
#define ecl_def_ct_double_float(119,3689
#define ecl_def_ct_long_float(125,4022
#define ecl_def_ct_ratio(131,4386
#define ecl_def_ct_complex(137,4750
#define ecl_def_ct_csfloat(144,5139
#define ecl_def_ct_cdfloat(150,5503
#define ecl_def_ct_clfloat(156,5867
#define ecl_def_ct_vector(163,6238
#define ecl_def_ct_sse_pack(176,6725
__forceinline __m128i _mm_castps_si128(189,7263
__forceinline __m128i _mm_castps_si128(__m128 a) { union { __m128 f;189,7263
__forceinline __m128i _mm_castps_si128(__m128 a) { union { __m128 f; __m128i i;189,7263
__forceinline __m128 _mm_castsi128_ps(190,7370
__forceinline __m128 _mm_castsi128_ps(__m128i a) { union { __m128 f;190,7370
__forceinline __m128 _mm_castsi128_ps(__m128i a) { union { __m128 f; __m128i i;190,7370
__forceinline __m128i _mm_castpd_si128(191,7477
__forceinline __m128i _mm_castpd_si128(__m128d a) { union { __m128d d;191,7477
__forceinline __m128i _mm_castpd_si128(__m128d a) { union { __m128d d; __m128i i;191,7477
__forceinline __m128d _mm_castsi128_pd(192,7586
__forceinline __m128d _mm_castsi128_pd(__m128i a) { union { __m128d d;192,7586
__forceinline __m128d _mm_castsi128_pd(__m128i a) { union { __m128d d; __m128i i;192,7586
__forceinline __m128d _mm_castps_pd(193,7695
__forceinline __m128d _mm_castps_pd(__m128 a) { union { __m128d d;193,7695
__forceinline __m128d _mm_castps_pd(__m128 a) { union { __m128d d; __m128 f;193,7695
__forceinline __m128 _mm_castpd_ps(194,7799
__forceinline __m128 _mm_castpd_ps(__m128d a) { union { __m128d d;194,7799
__forceinline __m128 _mm_castpd_ps(__m128d a) { union { __m128d d; __m128 f;194,7799
_mm_castpd_ps(200,8097
_mm_castpd_si128(203,8241
_mm_castps_pd(206,8389
_mm_castps_si128(209,8533
_mm_castsi128_ps(212,8679
_mm_castsi128_pd(215,8826

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cs.h,770
#define asm 25,720
#define cl_nextarg(33,928
#define CSTACK(35,985
#define CPUSH(38,1185
#define CSTACK_BOT 40,1241
#define CSTACK_TOP 41,1284
typedef char *  caddr_t;63,1733
#define GET_CURRENT_FRAME(66,1766
#define FRAME_CHAIN(67,1844
#define FRAME_SAVED_PC(68,1904
#define PC_INDEX 70,1965
#define TRANSFER_CALL(73,1991
#define CCALL(76,2072
#define ARGCALL 82,2407
#define ARGSTACK(83,2429
#define ARGSTACK(117,3306
#define GET_CURRENT_FRAME(139,3788
#define FRAME_CHAIN(140,3862
#define FRAME_SAVED_PC(141,3917
#define ARGSTACK(146,4050
#define ARGCALL(150,4264
#define PC_INDEX 165,4962
#define TRANSFER(166,4981
#define TRANSFER_CALL(168,5124
#define CSTACK(174,5481
#define CPUSH(175,5536
#define CPOP 177,5650
#define CCALL(185,5903

/home/vagrant/build_ecl/ecl-21.2.1/src/h/legacy.h,4428
#define ECL_LEGACY_H19,595
#define CHARACTERP(24,634
#define BASE_CHAR_P(25,684
#define BASE_CHAR_CODE_P(26,735
#define CODE_CHAR(27,791
#define CHAR_CODE(28,840
#define REAL_TYPE(29,889
#define IMMEDIATE(30,940
#define IMMEDIATE_TAG 31,989
#define FIXNUM_TAG 33,1040
#define MAKE_FIXNUM(34,1081
#define FIXNUM_MINUSP(35,1132
#define FIXNUM_PLUSP(36,1185
#define fix(37,1237
#define FIXNUMP(38,1283
#define sf(40,1331
#define df(41,1372
#define make_shortfloat(42,1413
#define big_dim 44,1465
#define big_size 45,1508
#define big_limbs 46,1550
#define si_bc_file(48,1590
#define ARRAYP 49,1641
#define VECTORP 50,1667
#define ARRAY_TYPE(51,1695
#define c_string_to_object 52,1752
#define big_register0_get 54,1802
#define big_register1_get 55,1847
#define big_register2_get 56,1892
#define big_register_free 57,1937
#define big_register_copy 58,1986
#define big_register_normalize 59,2035
#define cl_alloc_simple_base_string 63,2193
#define cl_alloc_adjustable_base_string 64,2258
#define cl_alloc_simple_extended_string 65,2331
#define ecl_search_hash 67,2405
#define read_VV 69,2443
#define FEprogram_error_noreturn 71,2476
#define make_simple_base_string(75,2572
#define make_constant_base_string(76,2643
#define make_base_string_copy(77,2726
#define stp_ordinary 79,2796
#define stp_constant 80,2834
#define stp_special 81,2872
#define stp_macro 82,2908
#define stp_special_form 83,2940
#define aet_object 85,2987
#define aet_sf 86,3021
#define aet_df 87,3047
#define aet_bit 88,3073
#define aet_fix 89,3101
#define aet_index 90,3129
#define aet_b8 91,3161
#define aet_i8 92,3187
#define aet_b16 93,3213
#define aet_i16 94,3241
#define aet_b32 95,3269
#define aet_i32 96,3297
#define aet_b64 97,3325
#define aet_i64 98,3353
#define aet_ch 99,3381
#define aet_bc 100,3407
#define htt_eq 102,3434
#define htt_eql 103,3460
#define htt_equal 104,3488
#define htt_equalp 105,3520
#define htt_not_weak 106,3554
#define htt_weak_key 107,3592
#define htt_weak_value 108,3630
#define htt_weak_key_and_value 109,3672
#define ecl_make_singlefloat 111,3731
#define ecl_make_doublefloat 112,3782
#define ecl_make_longfloat 113,3833
#define number_to_float(115,3881
#define ecl_make_unsigned_long_Long(117,3935
#define ecl_to_unsigned_long_long(118,3997
#define ADIMLIM 120,4056
#define ATOTLIM 121,4098
#define ARANKLIM 122,4136
#define CALL_ARGUMENTS_LIMIT 124,4175
#define LAMBDA_PARAMETERS_LIMIT 125,4229
#define C_ARGUMENTS_LIMIT 126,4289
#define cl_va_start 128,4338
#define cl_va_list 129,4371
#define cl_va_arg 130,4402
#define cl_va_end 131,4431
#define CHAR_CODE_LIMIT 133,4461
#define NVALUES 135,4506
#define VALUES(136,4545
#define return0(137,4586
#define return1(138,4641
#define returnn(139,4712
#define CL_UNWIND_PROTECT_BEGIN 141,4746
#define CL_UNWIND_PROTECT_END 142,4803
#define CL_UNWIND_PROTECT_EXIT 143,4856
#define CL_BLOCK_END 144,4911
#define CL_BLOCK_BEGIN 145,4946
#define CL_CATCH_BEGIN 146,4985
#define CL_CATCH_END 147,5024
#define CL_CATCH_ALL_BEGIN 148,5059
#define CL_CATCH_ALL_IF_CAUGHT 149,5106
#define CL_CATCH_ALL_END 150,5161
#define bds_bd 152,5205
typedef struct ecl_bds_frame *bds_ptr;bds_ptr153,5234
typedef struct ecl_ihs_frame *ihs_ptr;ihs_ptr154,5273
#define LISTP(156,5313
#define CONSP(157,5350
#define ATOM(158,5387
#define SYMBOLP(159,5423
        smm_input,162,5491
        smm_input_file,163,5537
        smm_output,164,5583
        smm_output_file,165,5630
        smm_io,166,5677
        smm_io_file,167,5730
        smm_synonym,168,5783
        smm_broadcast,169,5831
        smm_concatenated,170,5881
        smm_two_way,171,5934
        smm_echo,172,5982
        smm_string_input,173,6027
        smm_string_output,174,6080
        smm_probe,175,6134
        smm_input_wsock,177,6228
        smm_output_wsock,178,6288
        smm_io_wsock,179,6349
        smm_io_wcon,182,6452
        smm_sequence_input,184,6522
        smm_sequence_output 185,6577
#define Cnil 188,6637
#define Ct 189,6658
#define SYM_FUN(191,6676
#define CLASS_OF(193,6711
#define CLASS_NAME(194,6747
#define CLASS_SUPERIORS(195,6787
#define CLASS_INFERIORS(196,6837
#define CLASS_SLOTS(197,6887
#define CLASS_CPL(198,6929
#define STYPE(200,6968
#define SLOTS(201,7004
#define SLOT(202,7041
#define SLENGTH(203,7080
#define SNAME(204,7120
#define type_of(206,7157

/home/vagrant/build_ecl/ecl-21.2.1/src/h/bytecodes.h,2398
  OP_NOP,15,583
  OP_QUOTE,16,593
  OP_ENDP,17,605
  OP_CONS,18,616
  OP_CAR,19,627
  OP_CDR,20,637
  OP_LIST,21,647
  OP_LISTA,22,658
  OP_INT,23,670
  OP_PINT,24,680
  OP_VAR,25,691
  OP_VARS,26,701
  OP_PUSH,27,712
  OP_PUSHV,28,723
  OP_PUSHVS,29,735
  OP_PUSHQ,30,748
  OP_CALLG1,31,760
  OP_CALLG2,32,773
  OP_CALL,33,786
  OP_CALLG,34,797
  OP_FCALL,35,809
  OP_MCALL,36,821
  OP_POP,37,833
  OP_POP1,38,843
  OP_POPREQ,39,854
  OP_POPOPT,40,867
  OP_NOMORE,41,880
  OP_POPREST,42,893
  OP_PUSHKEYS,43,907
  OP_EXIT,44,922
  OP_FLET,45,933
  OP_LABELS,46,944
  OP_LFUNCTION,47,957
  OP_FUNCTION,48,973
  OP_CLOSE,49,988
  OP_GO,50,1000
  OP_RETURN,51,1009
  OP_THROW,52,1022
  OP_JMP,53,1034
  OP_JNIL,54,1044
  OP_JT,55,1055
  OP_JEQL,56,1064
  OP_JNEQL,57,1075
  OP_UNBIND,58,1087
  OP_UNBINDS,59,1100
  OP_BIND,60,1114
  OP_PBIND,61,1125
  OP_VBIND,62,1137
  OP_BINDS,63,1149
  OP_PBINDS,64,1161
  OP_VBINDS,65,1174
  OP_SETQ,66,1187
  OP_SETQS,67,1198
  OP_PSETQ,68,1210
  OP_PSETQS,69,1222
  OP_VSETQ,70,1235
  OP_VSETQS,71,1247
  OP_BLOCK,72,1260
  OP_DO,73,1272
  OP_CATCH,74,1281
  OP_FRAME,75,1293
  OP_TAGBODY,76,1305
  OP_EXIT_TAGBODY,77,1319
  OP_EXIT_FRAME,78,1338
  OP_PROTECT,79,1355
  OP_PROTECT_NORMAL,80,1369
  OP_PROTECT_EXIT,81,1390
  OP_PROGV,82,1409
  OP_EXIT_PROGV,83,1421
  OP_PUSHVALUES,84,1438
  OP_POPVALUES,85,1455
  OP_PUSHMOREVALUES,86,1471
  OP_VALUES,87,1492
  OP_VALUEREG0,88,1505
  OP_NTHVAL,89,1521
  OP_NIL,90,1534
  OP_NOT,91,1544
  OP_PUSHNIL,92,1554
  OP_CSET,93,1568
  OP_STEPIN,94,1579
  OP_STEPCALL,95,1592
  OP_STEPOUT,96,1607
  OP_MAXOPCODES 97,1621
  OP_OPCODE_SHIFT 98,1644
#define MAX_OPARG 101,1670
typedef int16_t cl_oparg;102,1695
typedef int16_t cl_opcode;104,1722
# define OPCODE_SIZE 105,1749
# define OPARG_SIZE 106,1772
# define READ_OPCODE(107,1794
# define READ_OPARG(108,1823
# define GET_OPARG(109,1852
#define GET_OPCODE(111,1893
#define GET_DATA(112,1924
#define GET_DATA_PTR(117,2035
#define GET_LABEL(122,2149
#define ECL_THREADED_INTERPRETER140,2830
#  undef ECL_THREADED_INTERPRETER142,2911
#define BEGIN_SWITCH 147,2993
#define CASE(149,3037
#define THREAD_NEXT 151,3078
#define BEGIN_SWITCH 154,3165
#define THREAD_NEXT 157,3241
#define CASE(159,3282
#define ECL_OFFSET_TABLE164,3369
#define ECL_OFFSET_TABLE 166,3400

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cache.h,420
#define ECL_CACHE_H19,572
typedef struct ecl_cache 25,633
        cl_object keys;26,660
        cl_object table;27,684
        cl_index generation;28,709
        cl_object clear_list;30,757
} *ecl_cache_ptr;ecl_cache_ptr32,794
typedef struct ecl_cache_record 34,813
        cl_object key;35,847
        cl_object value;36,888
        cl_object gen;37,933
} *ecl_cache_record_ptr;ecl_cache_record_ptr38,976

/home/vagrant/build_ecl/ecl-21.2.1/src/h/number.h,1167
#define ECL_NUMBER_H19,540
#define ECL_BIG_REGISTER_SIZE 25,602
#define ECL_WITH_TEMP_BIGNUM(27,638
typedef void (*_ecl_big_binary_op)_ecl_big_binary_op40,1463
#define _ecl_big_set_fixnum(44,1647
#define _ecl_big_set_index(45,1714
#define _ecl_big_init2(47,1787
#define _ecl_big_realloc2(48,1868
#define _ecl_big_clear(49,1960
#define _ecl_big_set(50,2020
#define _ecl_big_odd_p(51,2095
#define _ecl_big_even_p(52,2167
#define _ecl_big_zerop(53,2239
#define _ecl_big_sign(54,2297
#define _ecl_big_compare(55,2348
#define _ecl_big_complement(56,2420
#define _ecl_big_add(57,2497
#define _ecl_big_sub(58,2589
#define _ecl_big_mul(59,2681
#define _ecl_big_add_ui(60,2773
#define _ecl_big_sub_ui(61,2859
#define _ecl_big_mul_ui(62,2945
#define _ecl_big_div_ui(63,3035
#define _ecl_big_mul_si(64,3125
#define _ecl_big_set_ui(65,3215
#define _ecl_big_set_si(66,3296
#define _ecl_big_to_double(67,3368
#define _ecl_big_to_long(68,3426
#define _ecl_big_to_ulong(69,3493
#define _ecl_big_cmp_si(70,3560
#define _ecl_big_tdiv_q(71,3633
#define _ecl_big_tdiv_q_ui(72,3736
#define _ecl_big_set_d(73,3831
ecl_to_fix(78,3953
ecl_to_size(86,4122

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ecl_features.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/structure.d,54
@(defun si::make-structuresi::make-structure43,1042

/home/vagrant/build_ecl/ecl-21.2.1/src/c/string.d,912
@(defun make_stringmake_string46,1008
@(defun stringstring419,10188
@(defun string_equalstring_equal520,12862
@(defun stringstring605,15442
@(defun stringstring610,15532
@(defun stringstring615,15622
@(defun stringstring620,15712
@(defun stringstring625,15802
@(defun string-lesspstring-lessp630,15893
@(defun string-greaterpstring-greaterp635,15988
@(defun string-not-greaterpstring-not-greaterp640,16086
@(defun string-not-lesspstring-not-lessp645,16187
@(defun string-not-equalstring-not-equal650,16285
@(defun string-upcasestring-upcase783,19456
@(defun string-downcasestring-downcase794,19667
@(defun string-capitalizestring-capitalize816,20103
@(defun nstring-upcasenstring-upcase860,21262
@(defun nstring-downcasenstring-downcase865,21378
@(defun nstring-capitalizenstring-capitalize870,21500
@(defun si::base-string-concatenatesi::base-string-concatenate875,21628

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixfsys.d,225
@(defun rename-filerename-file467,13872
@(defun user_homedir_pathnameuser_homedir_pathname726,21864
@(defun directorydirectory975,30237
@(defun ext::getcwdext::getcwd987,30638
@(defun ext::chdirext::chdir1051,32382

/home/vagrant/build_ecl/ecl-21.2.1/src/c/compiler.d,124
@(defun si::process-declarationssi::process-declarations2809,84318
@(defun si::eval-with-envsi::eval-with-env3321,99177

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_rand.d,84
@(defun randomrandom323,7997
@(defun make_random_statemake_random_state329,8150

/home/vagrant/build_ecl/ecl-21.2.1/src/c/file.d,552
@(defun make-string-output-streammake-string-output-stream1498,36378
@(defun make_string_input_streammake_string_input_stream1673,40570
@(defun make_broadcast_streammake_broadcast_stream2024,48505
@(defun make_concatenated_streammake_concatenated_stream2355,55996
@(defun ext::make_sequence_input_streamext::make_sequence_input_stream4568,115546
@(defun ext::make_sequence_output_streamext::make_sequence_output_stream4698,119271
@(defun file-positionfile-position5093,129332
@(defun openopen5362,137380
@(defun closeclose5421,139044

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minus.d,19
@(defun --21,483

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/log.d,25
@(defun loglog196,4837

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/atan.d,26
@(defun atanatan77,1916

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/round.d,27
@(defun roundround28,601

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/truncate.d,34
@(defun truncatetruncate84,1802

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/times.d,19
@(defun **21,481

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/floor.d,27
@(defun floorfloor26,581

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minmax.d,46
@(defun maxmax17,381
@(defun minmin37,889

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/ceiling.d,31
@(defun ceilingceiling23,451

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_log.d,124
@(defun logiorlogior287,5361
@(defun logxorlogxor295,5562
@(defun logandlogand304,5772
@(defun logeqvlogeqv313,5983

/home/vagrant/build_ecl/ecl-21.2.1/src/c/symbol.d,309
@(defun getget267,6082
@(defun getfgetf287,6469
@(defun copy_symbolcopy_symbol320,7232
@(defun gensymgensym339,7759
@(defun gentempgentemp369,8910
@(defun si::put-propertiessi::put-properties447,10918
@si::*make-specialsi::*make-special458,11141
@si::*make-constantsi::*make-constant469,11407

/home/vagrant/build_ecl/ecl-21.2.1/src/c/hash.d,230
@(defun make_hash_tablemake_hash_table910,27713
@(defun gethashgethash1184,36285
@(defun si::hash-eqlsi::hash-eql1342,40008
@(defun si::hash-equalsi::hash-equal1352,40189
@(defun si::hash-equalpsi::hash-equalp1362,40377

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_arith.d,47
@(defun gcdgcd36,939
@(defun lcmlcm80,1835

/home/vagrant/build_ecl/ecl-21.2.1/src/c/read.d,1058
@(defun readread1481,41351
@(defun read_preserving_whitespaceread_preserving_whitespace1507,42042
@(defun read_delimited_listread_delimited_list1571,43767
@(defun read_lineread_line1589,44309
@(defun read-charread-char1636,45605
@(defun unread_charunread_char1651,45948
@(defun peek-charpeek-char1659,46158
@(defun listenlisten1697,47268
@(defun read_char_no_hangread_char_no_hang1703,47442
@(defun clear_inputclear_input1735,48197
@(defun read_byteread_byte1742,48340
@(defun read_sequenceread_sequence1756,48641
@(defun copy_readtablecopy_readtable1767,48947
@(defun set_syntax_from_charset_syntax_from_char1886,52031
@(defun set_macro_characterset_macro_character1911,52782
@(defun get_macro_characterget_macro_character1922,53149
@(defun make_dispatch_macro_charactermake_dispatch_macro_character1934,53560
@(defun set_dispatch_macro_characterset_dispatch_macro_character1950,54175
@(defun get_dispatch_macro_characterget_dispatch_macro_character1982,55185
@(defun ext::readtable-lockext::readtable-lock2011,56036

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/rwlock.d,164
@(defun mp::make-rwlockmp::make-rwlock85,2026
@(defun mp::get-rwlock-readmp::get-rwlock-read166,3711
@(defun mp::get-rwlock-writemp::get-rwlock-write216,4773

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/mailbox.d,50
@(defun mp::make-mailboxmp::make-mailbox49,1402

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/process.d,52
@(defun mp::make-processmp::make-process447,12925

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/barrier.d,105
@(defun mp::make-barriermp::make-barrier34,754
@(defun mp::barrier-unblockmp::barrier-unblock78,1836

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/mutex.d,87
@(defun mp::make-lockmp::make-lock54,1187
@(defun mp::get-lockmp::get-lock202,4824

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/semaphore.d,111
@(defun mp::make-semaphoremp::make-semaphore38,916
@(defun mp::signal-semaphoremp::signal-semaphore73,1805

/home/vagrant/build_ecl/ecl-21.2.1/src/c/mapfun.d,176
@(defun mapcarmapcar29,965
@(defun maplistmaplist53,1712
@(defun mapcmapc77,2447
@(defun maplmapl100,3167
@(defun mapcanmapcan123,3873
@(defun mapconmapcon148,4635

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_string_old.d,54
@(defun ext::float-stringext::float-string290,10720

/home/vagrant/build_ecl/ecl-21.2.1/src/c/sequence.d,31
@(defun subseqsubseq192,4509

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi.d,116
@(defun si::call-cfunsi::call-cfun934,26997
@(defun si::make-dynamic-callbacksi::make-dynamic-callback984,28679

/home/vagrant/build_ecl/ecl-21.2.1/src/c/pathname.d,706
@(defun wild-pathname-pwild-pathname-p789,22963
@(defun parse_namestringparse_namestring1155,34393
@(defun merge_pathnamesmerge_pathnames1193,35620
@(defun make_pathnamemake_pathname1202,35911
@(defun pathname_hostpathname_host1241,37261
@(defun pathname_devicepathname_device1249,37554
@(defun pathname_directorypathname_directory1257,37851
@(defun pathname_namepathname_name1265,38139
@(defun pathname_typepathname_type1273,38431
@(defun enough_namestringenough_namestring1323,40029
@(defun si::pathname-translationssi::pathname-translations1527,46192
@(defun translate-pathnametranslate-pathname1712,50905
@(defun translate-logical-pathnametranslate-logical-pathname1793,53656

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reader/parse_integer.d,44
@(defun parse_integerparse_integer59,1329

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/instance.d,39
@(defun find-classfind-class307,7763

/home/vagrant/build_ecl/ecl-21.2.1/src/c/print.d,514
@(defun writewrite140,3301
@(defun prinprin182,5266
@(defun printprint188,5352
@(defun pprintpprint194,5438
@(defun princprinc206,5763
@(defun write-charwrite-char212,5849
@(defun write-stringwrite-string220,6071
@(defun write-linewrite-line235,6585
@(defun terpriterpri252,7133
@(defun fresh-linefresh-line258,7216
@(defun finish-outputfinish-output274,7575
@(defun force-outputforce-output286,7842
@(defun clear-outputclear-output293,7976
@(defun write-sequencewrite-sequence307,8260

/home/vagrant/build_ecl/ecl-21.2.1/src/c/package.d,484
@(defun make_packagemake_package912,27726
@(defun rename_packagerename_package949,28561
@(defun internintern1084,32653
@(defun find_symbolfind_symbol1100,33036
@(defun uninternunintern1117,33431
@(defun exportexport1122,33554
@(defun unexportunexport1141,34011
@(defun importimport1160,34476
@(defun shadowing_importshadowing_import1179,34933
@(defun shadowshadow1198,35430
@(defun use_packageuse_package1224,36078
@(defun unuse_packageunuse_package1249,36664

/home/vagrant/build_ecl/ecl-21.2.1/src/c/array.d,62
@(defun arefaref125,3292
@(defun si::asetsi::aset277,7493

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_co.d,99
@(defun floatfloat30,702
@(defun float_signfloat_sign217,4486
@(defun complexcomplex385,8076

/home/vagrant/build_ecl/ecl-21.2.1/src/c/error.d,102
@(defun errorerror558,16220
@(defun cerrorcerror566,16419
@(defun si::serrorsi::serror573,16618

/home/vagrant/build_ecl/ecl-21.2.1/src/c/vector_push.d,54
@(defun vector-push-extendvector-push-extend76,2449

/home/vagrant/build_ecl/ecl-21.2.1/src/c/interpreter.d,63
@(defun si::interpreter-stacksi::interpreter-stack1306,38956

/home/vagrant/build_ecl/ecl-21.2.1/src/c/format.d,88
@(defun si::formatter-auxsi::formatter-aux1929,49537
@(defun formatformat2185,55096

/home/vagrant/build_ecl/ecl-21.2.1/src/c/main.d,76
@(defun ext::quitext::quit796,24947
@(defun ext::exitext::exit826,25993

/home/vagrant/build_ecl/ecl-21.2.1/src/c/multival.d,29
@(defun valuesvalues17,365

/home/vagrant/build_ecl/ecl-21.2.1/src/c/assignment.d,35
@(defun si::fsetsi::fset143,3804

/home/vagrant/build_ecl/ecl-21.2.1/src/c/list.d,578
@(defun listlist134,3574
@(defun list*list*148,3857
@(defun appendappend183,4589
@(defun tree_equaltree_equal253,6081
@(defun lastlast401,9062
@(defun make_listmake_list409,9213
@(defun nconcnconc496,10927
@(defun butlastbutlast576,12728
@(defun nbutlastnbutlast606,13454
@(defun substsubst698,15778
@(defun nsubstnsubst736,16613
@(defun sublissublis776,17441
@(defun nsublisnsublis811,18320
@(defun membermember847,19232
@(defun adjoinadjoin929,20770
@(defun pairlispairlis954,21222
@(defun assocassoc973,21625
@(defun rassocrassoc997,22138

/home/vagrant/build_ecl/ecl-21.2.1/src/c/eval.d,192
@(defun applyapply142,3660
@(defun constantpconstantp182,4950
@(defun ext::constantp-innerext::constantp-inner187,5053
@(defun ext::constant-form-valueext::constant-form-value226,5777

/home/vagrant/build_ecl/ecl-21.2.1/src/c/load.d,27
@(defun loadload190,6150

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/mmap.d,35
@(defun ext::mmapext::mmap20,399

/home/vagrant/build_ecl/ecl-21.2.1/src/c/macros.d,129
@(defun macro_functionmacro_function82,2541
@(defun macroexpand_macroexpand_93,2820
@(defun macroexpandmacroexpand118,3478

/home/vagrant/build_ecl/ecl-21.2.1/src/c/all_symbols.d,48
@(defun si::mangle-namesi::mangle-name83,2450

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixint.d,54
@(defun ext::catch-signalext::catch-signal986,35797

/home/vagrant/build_ecl/ecl-21.2.1/src/c/character.d,514
@(defun digit_char_pdigit_char_p131,2678
@(defun charchar178,4042
@(defun charchar195,4346
@(defun charchar242,5406
@(defun charchar247,5493
@(defun charchar252,5580
@(defun charchar257,5668
@(defun char_equalchar_equal262,5756
@(defun char-not-equalchar-not-equal282,6175
@(defun char-lesspchar-lessp334,7284
@(defun char-greaterpchar-greaterp339,7380
@(defun char-not-greaterpchar-not-greaterp344,7479
@(defun char-not-lesspchar-not-lessp349,7582
@(defun digit_chardigit_char429,9173

/home/vagrant/build_ecl/ecl-21.2.1/src/h/number.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cache.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/bytecodes.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/legacy.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cs.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl-inl.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/internal.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_dispatch.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_fenv_msvc.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_fenv.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/impl/math_dispatch2.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl-cmp.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/page.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/object.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/external.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/stacks.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/stack-resize.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/cons.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/h/ecl_atomics.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_str.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0000.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0080.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_codes.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0064.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0096.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0032.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0064.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0016.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0016.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_char.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0032.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0048.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd-0000.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd16-0048.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unicode/ucd_names_pair.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/coverity/model.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/time.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cfun.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/symbols_list.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/sse2.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/tcp.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/num_pred.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/serialize.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/big.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/char_ctype.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/backtrace.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/cdata.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ffi/libraries.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/number.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cmpaux.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/arch/fpe_none.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/arch/fpe_x86.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/unixsys.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/big_ll.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/accessor.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/gfun.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/clos/cache.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reader/parse_number.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/newhash.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/disassembler.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/typespec.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cfun_dispatch.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/iso_latin_names.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cinit.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/predicate.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ecl_features.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_array.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_to_digits.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_object.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_code.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_symbol.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/float_to_string.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_list.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_sse.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/write_ugly.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/print_unreadable.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/printer/integer_to_string.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/condition_variable.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/atomic.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/threads/queue.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/cons.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/stacks.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/alloc_2.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sqrt.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/cosh.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/number_compare.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/one_plus.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/tanh.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/cos.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/minusp.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/zerop.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/number_equalp.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sin.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/expt.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/divide.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/tan.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/sinh.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/abs.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/one_minus.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/exp.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/plus.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/conjugate.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/float_fix_compare.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/plusp.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/numbers/negate.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/dpp.c,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/ecl_constants.h,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/backq.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/apply.d,0

/home/vagrant/build_ecl/ecl-21.2.1/src/c/reference.d,0
